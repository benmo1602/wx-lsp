{
    "App": {
        "prefix": "App",
        "body": [
            "App({",
            "",
            "  /**",
            "   * 当小程序初始化完成时，会触发 onLaunch（全局只触发一次）",
            "   */",
            "  onLaunch: function () {",
            "    $1",
            "  },",
            "",
            "  /**",
            "   * 当小程序启动，或从后台进入前台显示，会触发 onShow",
            "   */",
            "  onShow: function (options) {",
            "    $2",
            "  },",
            "",
            "  /**",
            "   * 当小程序从前台进入后台，会触发 onHide",
            "   */",
            "  onHide: function () {",
            "    $3",
            "  },",
            "",
            "  /**",
            "   * 当小程序发生脚本错误，或者 api 调用失败时，会触发 onError 并带上错误信息",
            "   */",
            "  onError: function (msg) {",
            "    $4",
            "  }",
            "})",
            ""
        ],
        "description": "Contruct an App instance. App() 函数用来注册一个小程序。接受一个 object 参数，其指定小程序的生命周期函数等。"
    },
    "Page": {
        "prefix": "Page",
        "body": [
            "Page({",
            "",
            "  /**",
            "   * 页面的初始数据",
            "   */",
            "  data: {",
            "    $1",
            "  },",
            "",
            "  /**",
            "   * 生命周期函数--监听页面加载",
            "   */",
            "  onLoad: function (options) {",
            "    $2",
            "  },",
            "",
            "  /**",
            "   * 生命周期函数--监听页面初次渲染完成",
            "   */",
            "  onReady: function () {",
            "    $3",
            "  },",
            "",
            "  /**",
            "   * 生命周期函数--监听页面显示",
            "   */",
            "  onShow: function () {",
            "    $4",
            "  },",
            "",
            "  /**",
            "   * 生命周期函数--监听页面隐藏",
            "   */",
            "  onHide: function () {",
            "    $5",
            "  },",
            "",
            "  /**",
            "   * 生命周期函数--监听页面卸载",
            "   */",
            "  onUnload: function () {",
            "    $6",
            "  },",
            "",
            "  /**",
            "   * 页面相关事件处理函数--监听用户下拉动作",
            "   */",
            "  onPullDownRefresh: function () {",
            "    $7",
            "  },",
            "",
            "  /**",
            "   * 页面上拉触底事件的处理函数",
            "   */",
            "  onReachBottom: function () {",
            "    $8",
            "  },",
            "",
            "  /**",
            "   * 用户点击右上角分享",
            "   */",
            "  onShareAppMessage: function () {",
            "    $9",
            "  }",
            "})"
        ],
        "description": "Contruct a Page instance. Page() 函数用来注册一个页面。接受一个 object 参数，其指定页面的初始数据、生命周期函数、事件处理函数等。"
    },
    "base64ToArrayBuffer": {
        "prefix": "base64ToArrayBuffer",
        "body": [
            "wx.base64ToArrayBuffer('${1:base64}')"
        ],
        "description": "/** [ArrayBuffer wx.base64ToArrayBuffer(string base64)](https://developers.weixin.qq.com/miniprogram/dev/api/base/wx.base64ToArrayBuffer.html)\n         *\n         * 将 Base64 字符串转成 ArrayBuffer 对象\n         *\n         * 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "getAccountInfoSync": {
        "prefix": "getAccountInfoSync",
        "body": [
            "wx.getAccountInfoSync()"
        ],
        "description": "/** [Object wx.getAccountInfoSync()](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/account-info/wx.getAccountInfoSync.html)\n*\n* 获取当前帐号信息\n*\n* **示例代码**\n*\n*\n* ```js\nconst accountInfo = wx.getAccountInfoSync();\nconsole.log(accountInfo.miniProgram.appId) // 小程序 appId\nconsole.log(accountInfo.plugin.appId) // 插件 appId\nconsole.log(accountInfo.plugin.version) // 插件版本号， 'a.b.c' 这样的形式\n```\n*\n* 最低基础库： `2.2.2` */",
        "detail": "function",
        "kind": 9
    },
    "getBatteryInfoSync": {
        "prefix": "getBatteryInfoSync",
        "body": [
            "wx.getBatteryInfoSync()"
        ],
        "description": "/** [Object wx.getBatteryInfoSync()](https://developers.weixin.qq.com/miniprogram/dev/api/device/battery/wx.getBatteryInfoSync.html)\n         *\n         * [wx.getBatteryInfo](https://developers.weixin.qq.com/miniprogram/dev/api/device/battery/wx.getBatteryInfo.html) 的同步版本 */",
        "detail": "function",
        "kind": 9
    },
    "getExtConfigSync": {
        "prefix": "getExtConfigSync",
        "body": [
            "wx.getExtConfigSync()"
        ],
        "description": "/** [Object wx.getExtConfigSync()](https://developers.weixin.qq.com/miniprogram/dev/api/ext/wx.getExtConfigSync.html)\n*\n* [wx.getExtConfig](https://developers.weixin.qq.com/miniprogram/dev/api/ext/wx.getExtConfig.html) 的同步版本。\n*\n* **Tips**\n*\n*\n* 1. 本接口暂时无法通过 [wx.canIUse](https://developers.weixin.qq.com/miniprogram/dev/api/base/wx.canIUse.html) 判断是否兼容，开发者需要自行判断 [wx.getExtConfigSync](https://developers.weixin.qq.com/miniprogram/dev/api/ext/wx.getExtConfigSync.html) 是否存在来兼容\n*\n* ****\n*\n* ```js\nlet extConfig = wx.getExtConfigSync? wx.getExtConfigSync(): {}\nconsole.log(extConfig)\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "getLaunchOptionsSync": {
        "prefix": "getLaunchOptionsSync",
        "body": [
            "wx.getLaunchOptionsSync()"
        ],
        "description": "/** [Object wx.getLaunchOptionsSync()](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html)\n         *\n         * 获取小程序启动时的参数。与 [`App.onLaunch`](https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onlaunchobject-object) 的回调参数一致。\n         *\n         * **返回有效 referrerInfo 的场景**\n         *\n         *\n         * | 场景值 | 场景                            | appId含义  |\n         * | ------ | ------------------------------- | ---------- |\n         * | 1020   | 公众号 profile 页相关小程序列表 | 来源公众号 |\n         * | 1035   | 公众号自定义菜单                | 来源公众号 |\n         * | 1036   | App 分享消息卡片                | 来源App    |\n         * | 1037   | 小程序打开小程序                | 来源小程序 |\n         * | 1038   | 从另一个小程序返回              | 来源小程序 |\n         * | 1043   | 公众号模板消息                  | 来源公众号 |\n         *\n         * **注意**\n         *\n         *\n         * 部分版本在无`referrerInfo`的时候会返回 `undefined`，建议使用 `options.referrerInfo && options.referrerInfo.appId` 进行判断。\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "getMenuButtonBoundingClientRect": {
        "prefix": "getMenuButtonBoundingClientRect",
        "body": [
            "wx.getMenuButtonBoundingClientRect()"
        ],
        "description": "/** [Object wx.getMenuButtonBoundingClientRect()](https://developers.weixin.qq.com/miniprogram/dev/api/ui/menu/wx.getMenuButtonBoundingClientRect.html)\n         *\n         * 获取菜单按钮（右上角胶囊按钮）的布局位置信息。坐标信息以屏幕左上角为原点。\n         *\n         * 最低基础库： `2.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "getStorageInfoSync": {
        "prefix": "getStorageInfoSync",
        "body": [
            "wx.getStorageInfoSync()"
        ],
        "description": "/** [Object wx.getStorageInfoSync()](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.getStorageInfoSync.html)\n*\n* [wx.getStorageInfo](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.getStorageInfo.html) 的同步版本\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getStorageInfo({\n  success (res) {\n    console.log(res.keys)\n    console.log(res.currentSize)\n    console.log(res.limitSize)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getStorageInfoSync()\n  console.log(res.keys)\n  console.log(res.currentSize)\n  console.log(res.limitSize)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "getSystemInfoSync": {
        "prefix": "getSystemInfoSync",
        "body": [
            "wx.getSystemInfoSync()"
        ],
        "description": "/** [Object wx.getSystemInfoSync()](https://developers.weixin.qq.com/miniprogram/dev/api/base/system/system-info/wx.getSystemInfoSync.html)\n*\n* [wx.getSystemInfo](https://developers.weixin.qq.com/miniprogram/dev/api/base/system/system-info/wx.getSystemInfo.html) 的同步版本\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getSystemInfo({\n  success (res) {\n    console.log(res.model)\n    console.log(res.pixelRatio)\n    console.log(res.windowWidth)\n    console.log(res.windowHeight)\n    console.log(res.language)\n    console.log(res.version)\n    console.log(res.platform)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getSystemInfoSync()\n  console.log(res.model)\n  console.log(res.pixelRatio)\n  console.log(res.windowWidth)\n  console.log(res.windowHeight)\n  console.log(res.language)\n  console.log(res.version)\n  console.log(res.platform)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "createAnimation": {
        "prefix": "createAnimation",
        "body": [
            "wx.createAnimation({",
            "  delay: ${1:0},",
            "  duration: ${2:0},",
            "  timingFunction: ${3:timingFunction},",
            "  transformOrigin: '${4:transformOrigin}',",
            "})"
        ],
        "description": "/** [[Animation](https://developers.weixin.qq.com/miniprogram/dev/api/ui/animation/Animation.html) wx.createAnimation(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/animation/wx.createAnimation.html)\n         *\n         * 创建一个动画实例 [animation](https://developers.weixin.qq.com/miniprogram/dev/api/ui/animation/Animation.html)。调用实例的方法来描述动画。最后通过动画实例的 export 方法导出动画数据传递给组件的 animation 属性。 */",
        "detail": "function",
        "kind": 9
    },
    "createAudioContext": {
        "prefix": "createAudioContext",
        "body": [
            "wx.createAudioContext('${1:id}', ${2:component})"
        ],
        "description": "/** [[AudioContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/AudioContext.html) wx.createAudioContext(string id, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.createAudioContext.html)\n         *\n         * 创建 [audio](https://developers.weixin.qq.com/miniprogram/dev/component/audio.html) 上下文 [AudioContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/AudioContext.html) 对象。 */",
        "detail": "function",
        "kind": 9
    },
    "getBackgroundAudioManager": {
        "prefix": "getBackgroundAudioManager",
        "body": [
            "wx.getBackgroundAudioManager()"
        ],
        "description": "/** [[BackgroundAudioManager](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/BackgroundAudioManager.html) wx.getBackgroundAudioManager()](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.getBackgroundAudioManager.html)\n         *\n         * 获取**全局唯一**的背景音频管理器。\n         * 小程序切入后台，如果音频处于播放状态，可以继续播放。但是后台状态不能通过调用API操纵音频的播放状态。\n         *\n         * 从微信客户端6.7.2版本开始，若需要在小程序切后台后继续播放音频，需要在 [app.json](https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html) 中配置 `requiredBackgroundModes` 属性。开发版和体验版上可以直接生效，正式版还需通过审核。\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "createCameraContext": {
        "prefix": "createCameraContext",
        "body": [
            "wx.createCameraContext()"
        ],
        "description": "/** [[CameraContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/camera/CameraContext.html) wx.createCameraContext()](https://developers.weixin.qq.com/miniprogram/dev/api/media/camera/wx.createCameraContext.html)\n         *\n         * 创建 [camera](https://developers.weixin.qq.com/miniprogram/dev/component/camera.html) 上下文 [CameraContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/camera/CameraContext.html) 对象。\n         *\n         * 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "createCanvasContext": {
        "prefix": "createCanvasContext",
        "body": [
            "wx.createCanvasContext('${1:canvasId}', ${2:component})"
        ],
        "description": "/** [[CanvasContext](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/CanvasContext.html) wx.createCanvasContext(string canvasId, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/wx.createCanvasContext.html)\n         *\n         * 创建 canvas 的绘图上下文 [CanvasContext](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/CanvasContext.html) 对象 */",
        "detail": "function",
        "kind": 9
    },
    "downloadFile": {
        "prefix": "downloadFile",
        "body": [
            "wx.downloadFile({",
            "  url: '${1:url}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  filePath: '${4:filePath}',",
            "  header: ${5:header},",
            "  success: (result) => {$6},",
            "})"
        ],
        "description": "/** [[DownloadTask](https://developers.weixin.qq.com/miniprogram/dev/api/network/download/DownloadTask.html) wx.downloadFile(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/download/wx.downloadFile.html)\n*\n* 下载文件资源到本地。客户端直接发起一个 HTTPS GET 请求，返回文件的本地临时路径，单次下载允许的最大文件为 50MB。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html)。\n*\n* 注意：请在服务端响应的 header 中指定合理的 `Content-Type` 字段，以保证客户端正确处理文件类型。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.downloadFile({\n  url: 'https://example.com/audio/123', //仅为示例，并非真实的资源\n  success (res) {\n    // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容\n    if (res.statusCode === 200) {\n      wx.playVoice({\n        filePath: res.tempFilePath\n      })\n    }\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "getFileSystemManager": {
        "prefix": "getFileSystemManager",
        "body": [
            "wx.getFileSystemManager()"
        ],
        "description": "/** [[FileSystemManager](https://developers.weixin.qq.com/miniprogram/dev/api/file/FileSystemManager.html) wx.getFileSystemManager()](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.getFileSystemManager.html)\n         *\n         * 获取全局唯一的文件管理器\n         *\n         * 最低基础库： `1.9.9` */",
        "detail": "function",
        "kind": 9
    },
    "createInnerAudioContext": {
        "prefix": "createInnerAudioContext",
        "body": [
            "wx.createInnerAudioContext()"
        ],
        "description": "/** [[InnerAudioContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/InnerAudioContext.html) wx.createInnerAudioContext()](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.createInnerAudioContext.html)\n         *\n         * 创建内部 [audio](https://developers.weixin.qq.com/miniprogram/dev/component/audio.html) 上下文 [InnerAudioContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/InnerAudioContext.html) 对象。\n         *\n         * 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "createIntersectionObserver": {
        "prefix": "createIntersectionObserver",
        "body": [
            "wx.createIntersectionObserver(${1:component}, {",
            "  initialRatio: ${2:0},",
            "  observeAll: ${3:true},",
            "  thresholds: [$4],",
            "})"
        ],
        "description": "/** [[IntersectionObserver](https://developers.weixin.qq.com/miniprogram/dev/api/wxml/IntersectionObserver.html) wx.createIntersectionObserver(Object component, Object options)](https://developers.weixin.qq.com/miniprogram/dev/api/wxml/wx.createIntersectionObserver.html)\n         *\n         * 创建并返回一个 IntersectionObserver 对象实例。在自定义组件或包含自定义组件的页面中，应使用 `this.createIntersectionObserver([options])` 来代替。\n         *\n         * **示例代码**\n         *\n         *\n         * [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/LAbMxkmI7F2A)\n         *\n         * 最低基础库： `1.9.3` */",
        "detail": "function",
        "kind": 9
    },
    "createInterstitialAd": {
        "prefix": "createInterstitialAd",
        "body": [
            "wx.createInterstitialAd({",
            "  adUnitId: '${1:adUnitId}',",
            "})"
        ],
        "description": "/** [[InterstitialAd](https://developers.weixin.qq.com/miniprogram/dev/api/ad/InterstitialAd.html) wx.createInterstitialAd(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ad/wx.createInterstitialAd.html)\n         *\n         * 创建插屏广告组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/miniprogram/dev/api/base/system/system-info/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号后再使用该 API。每次调用该方法创建插屏广告都会返回一个全新的实例（小程序端的插屏广告实例不允许跨页面使用）。\n         *\n         * 最低基础库： `2.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "createLivePlayerContext": {
        "prefix": "createLivePlayerContext",
        "body": [
            "wx.createLivePlayerContext('${1:id}', ${2:component})"
        ],
        "description": "/** [[LivePlayerContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/live/LivePlayerContext.html) wx.createLivePlayerContext(string id, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/media/live/wx.createLivePlayerContext.html)\n         *\n         * 创建 [live-player](https://developers.weixin.qq.com/miniprogram/dev/component/live-player.html) 上下文 [LivePlayerContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/live/LivePlayerContext.html) 对象。\n         *\n         * 最低基础库： `1.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "createLivePusherContext": {
        "prefix": "createLivePusherContext",
        "body": [
            "wx.createLivePusherContext()"
        ],
        "description": "/** [[LivePusherContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/live/LivePusherContext.html) wx.createLivePusherContext()](https://developers.weixin.qq.com/miniprogram/dev/api/media/live/wx.createLivePusherContext.html)\n         *\n         * 创建 [live-pusher](https://developers.weixin.qq.com/miniprogram/dev/component/live-pusher.html) 上下文 [LivePusherContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/live/LivePusherContext.html) 对象。\n         *\n         * 最低基础库： `1.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "getLogManager": {
        "prefix": "getLogManager",
        "body": [
            "wx.getLogManager({",
            "  level: ${1:0},",
            "})"
        ],
        "description": "/** [[LogManager](https://developers.weixin.qq.com/miniprogram/dev/api/base/debug/LogManager.html) wx.getLogManager(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/base/debug/wx.getLogManager.html)\n*\n* 获取日志管理器对象。\n*\n* **示例代码**\n*\n*\n* ```js\nconst logger = wx.getLogManager({level: 1})\nlogger.log({str: 'hello world'}, 'basic log', 100, [1, 2, 3])\nlogger.info({str: 'hello world'}, 'info log', 100, [1, 2, 3])\nlogger.debug({str: 'hello world'}, 'debug log', 100, [1, 2, 3])\nlogger.warn({str: 'hello world'}, 'warn log', 100, [1, 2, 3])\n```\n*\n* 最低基础库： `2.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "createMapContext": {
        "prefix": "createMapContext",
        "body": [
            "wx.createMapContext('${1:mapId}', ${2:component})"
        ],
        "description": "/** [[MapContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/map/MapContext.html) wx.createMapContext(string mapId, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/media/map/wx.createMapContext.html)\n         *\n         * 创建 [map](https://developers.weixin.qq.com/miniprogram/dev/component/map.html) 上下文 [MapContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/map/MapContext.html) 对象。 */",
        "detail": "function",
        "kind": 9
    },
    "createMediaContainer": {
        "prefix": "createMediaContainer",
        "body": [
            "wx.createMediaContainer()"
        ],
        "description": "/** [[MediaContainer](https://developers.weixin.qq.com/miniprogram/dev/api/media/video-processing/MediaContainer.html) wx.createMediaContainer()](https://developers.weixin.qq.com/miniprogram/dev/api/media/video-processing/wx.createMediaContainer.html)\n         *\n         * 创建音视频处理容器，最终可将容器中的轨道合成一个视频\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "createOffscreenCanvas": {
        "prefix": "createOffscreenCanvas",
        "body": [
            "wx.createOffscreenCanvas()"
        ],
        "description": "/** [[OffscreenCanvas](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/OffscreenCanvas.html) wx.createOffscreenCanvas()](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/wx.createOffscreenCanvas.html)\n         *\n         * 创建离屏 canvas 实例\n         *\n         * 最低基础库： `2.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "getRealtimeLogManager": {
        "prefix": "getRealtimeLogManager",
        "body": [
            "wx.getRealtimeLogManager()"
        ],
        "description": "/** [[RealtimeLogManager](https://developers.weixin.qq.com/miniprogram/dev/api/base/debug/RealtimeLogManager.html) wx.getRealtimeLogManager()](https://developers.weixin.qq.com/miniprogram/dev/api/base/debug/wx.getRealtimeLogManager.html)\n*\n* 获取实时日志管理器对象。\n*\n* **示例代码**\n*\n*\n* ```js\nconst logger = wx.getRealtimeLogManager()\nlogger.info({str: 'hello world'}, 'info log', 100, [1, 2, 3])\nlogger.error({str: 'hello world'}, 'error log', 100, [1, 2, 3])\nlogger.warn({str: 'hello world'}, 'warn log', 100, [1, 2, 3])\n```\n*\n* 最低基础库： `2.7.1` */",
        "detail": "function",
        "kind": 9
    },
    "getRecorderManager": {
        "prefix": "getRecorderManager",
        "body": [
            "wx.getRecorderManager()"
        ],
        "description": "/** [[RecorderManager](https://developers.weixin.qq.com/miniprogram/dev/api/media/recorder/RecorderManager.html) wx.getRecorderManager()](https://developers.weixin.qq.com/miniprogram/dev/api/media/recorder/wx.getRecorderManager.html)\n         *\n         * 获取**全局唯一**的录音管理器 RecorderManager\n         *\n         * 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "request": {
        "prefix": "request",
        "body": [
            "wx.request({",
            "  url: '${1:url}',",
            "  complete: (res) => {$2},",
            "  data: ${3:data},",
            "  dataType: ${4:dataType},",
            "  fail: (res) => {$5},",
            "  header: ${6:header},",
            "  method: ${7:method},",
            "  responseType: ${8:responseType},",
            "  success: (result) => {$9},",
            "})"
        ],
        "description": "/** [[RequestTask](https://developers.weixin.qq.com/miniprogram/dev/api/network/request/RequestTask.html) wx.request(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html)\n*\n* 发起 HTTPS 网络请求。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html)。\n*\n* **data 参数说明**\n*\n*\n* 最终发送给服务器的数据是 String 类型，如果传入的 data 不是 String 类型，会被转换成 String 。转换规则如下：\n* - 对于 `GET` 方法的数据，会将数据转换成 query string（`encodeURIComponent(k)=encodeURIComponent(v)&encodeURIComponent(k)=encodeURIComponent(v)...`）\n* - 对于 `POST` 方法且 `header['content-type']` 为 `application/json` 的数据，会对数据进行 JSON 序列化\n* - 对于 `POST` 方法且 `header['content-type']` 为 `application/x-www-form-urlencoded` 的数据，会将数据转换成 query string `（encodeURIComponent(k)=encodeURIComponent(v)&encodeURIComponent(k)=encodeURIComponent(v)...）`\n*\n* **示例代码**\n*\n*\n* ```js\nwx.request({\n  url: 'test.php', //仅为示例，并非真实的接口地址\n  data: {\n    x: '',\n    y: ''\n  },\n  header: {\n    'content-type': 'application/json' // 默认值\n  },\n  success (res) {\n    console.log(res.data)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "createRewardedVideoAd": {
        "prefix": "createRewardedVideoAd",
        "body": [
            "wx.createRewardedVideoAd({",
            "  adUnitId: '${1:adUnitId}',",
            "  multiton: ${2:true},",
            "})"
        ],
        "description": "/** [[RewardedVideoAd](https://developers.weixin.qq.com/miniprogram/dev/api/ad/RewardedVideoAd.html) wx.createRewardedVideoAd(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ad/wx.createRewardedVideoAd.html)\n         *\n         * 创建激励视频广告组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/miniprogram/dev/api/base/system/system-info/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号后再使用该 API（小游戏端要求 >= 2.0.4， 小程序端要求 >= 2.6.0）。调用该方法创建的激励视频广告是一个单例（小游戏端是全局单例，小程序端是页面内单例，在小程序端的单例对象不允许跨页面使用）。\n         *\n         * 最低基础库： `2.0.4` */",
        "detail": "function",
        "kind": 9
    },
    "createSelectorQuery": {
        "prefix": "createSelectorQuery",
        "body": [
            "wx.createSelectorQuery()"
        ],
        "description": "/** [[SelectorQuery](https://developers.weixin.qq.com/miniprogram/dev/api/wxml/SelectorQuery.html) wx.createSelectorQuery()](https://developers.weixin.qq.com/miniprogram/dev/api/wxml/wx.createSelectorQuery.html)\n*\n* 返回一个 SelectorQuery 对象实例。在自定义组件或包含自定义组件的页面中，应使用 `this.createSelectorQuery()` 来代替。\n*\n* **示例代码**\n*\n*\n* ```js\nconst query = wx.createSelectorQuery()\nquery.select('#the-id').boundingClientRect()\nquery.selectViewport().scrollOffset()\nquery.exec(function(res){\n  res[0].top       // #the-id节点的上边界坐标\n  res[1].scrollTop // 显示区域的竖直滚动位置\n})\n```\n*\n* 最低基础库： `1.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "connectSocket": {
        "prefix": "connectSocket",
        "body": [
            "wx.connectSocket({",
            "  url: '${1:url}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  header: ${4:header},",
            "  protocols: [$5],",
            "  success: (res) => {$6},",
            "  tcpNoDelay: ${7:true},",
            "})"
        ],
        "description": "/** [[SocketTask](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/SocketTask.html) wx.connectSocket(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/wx.connectSocket.html)\n*\n* 创建一个 WebSocket 连接。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html)。\n*\n* **并发数**\n*\n*\n* - 1.7.0 及以上版本，最多可以同时存在 5 个 WebSocket 连接。\n* - 1.7.0 以下版本，一个小程序同时只能有一个 WebSocket 连接，如果当前已存在一个 WebSocket 连接，会自动关闭该连接，并重新创建一个 WebSocket 连接。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.connectSocket({\n  url: 'wss://example.qq.com',\n  header:{\n    'content-type': 'application/json'\n  },\n  protocols: ['protocol1']\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "createUDPSocket": {
        "prefix": "createUDPSocket",
        "body": [
            "wx.createUDPSocket()"
        ],
        "description": "/** [[UDPSocket](https://developers.weixin.qq.com/miniprogram/dev/api/network/udp/UDPSocket.html) wx.createUDPSocket()](https://developers.weixin.qq.com/miniprogram/dev/api/network/udp/wx.createUDPSocket.html)\n         *\n         * 创建一个 UDP Socket 实例。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html)。\n         *\n         * 最低基础库： `2.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "getUpdateManager": {
        "prefix": "getUpdateManager",
        "body": [
            "wx.getUpdateManager()"
        ],
        "description": "/** [[UpdateManager](https://developers.weixin.qq.com/miniprogram/dev/api/base/update/UpdateManager.html) wx.getUpdateManager()](https://developers.weixin.qq.com/miniprogram/dev/api/base/update/wx.getUpdateManager.html)\n         *\n         * 获取**全局唯一**的版本更新管理器，用于管理小程序更新。关于小程序的更新机制，可以查看[运行机制](https://developers.weixin.qq.com/miniprogram/dev/framework/runtime/operating-mechanism.html)文档。\n         *\n         * 最低基础库： `1.9.90` */",
        "detail": "function",
        "kind": 9
    },
    "uploadFile": {
        "prefix": "uploadFile",
        "body": [
            "wx.uploadFile({",
            "  filePath: '${1:filePath}',",
            "  name: '${2:name}',",
            "  url: '${3:url}',",
            "  complete: (res) => {$4},",
            "  fail: (res) => {$5},",
            "  formData: ${6:formData},",
            "  header: ${7:header},",
            "  success: (result) => {$8},",
            "})"
        ],
        "description": "/** [[UploadTask](https://developers.weixin.qq.com/miniprogram/dev/api/network/upload/UploadTask.html) wx.uploadFile(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/upload/wx.uploadFile.html)\n*\n* 将本地资源上传到服务器。客户端发起一个 HTTPS POST 请求，其中 `content-type` 为 `multipart/form-data`。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html)。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.chooseImage({\n  success (res) {\n    const tempFilePaths = res.tempFilePaths\n    wx.uploadFile({\n      url: 'https://example.weixin.qq.com/upload', //仅为示例，非真实的接口地址\n      filePath: tempFilePaths[0],\n      name: 'file',\n      formData: {\n        'user': 'test'\n      },\n      success (res){\n        const data = res.data\n        //do something\n      }\n    })\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "createVideoContext": {
        "prefix": "createVideoContext",
        "body": [
            "wx.createVideoContext('${1:id}', ${2:component})"
        ],
        "description": "/** [[VideoContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/video/VideoContext.html) wx.createVideoContext(string id, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/media/video/wx.createVideoContext.html)\n         *\n         * 创建 [video](https://developers.weixin.qq.com/miniprogram/dev/component/video.html) 上下文 [VideoContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/video/VideoContext.html) 对象。 */",
        "detail": "function",
        "kind": 9
    },
    "createWorker": {
        "prefix": "createWorker",
        "body": [
            "wx.createWorker('${1:scriptPath}')"
        ],
        "description": "/** [[Worker](https://developers.weixin.qq.com/miniprogram/dev/api/worker/Worker.html) wx.createWorker(string scriptPath)](https://developers.weixin.qq.com/miniprogram/dev/api/worker/wx.createWorker.html)\n         *\n         * 创建一个 [Worker 线程](https://developers.weixin.qq.com/miniprogram/dev/framework/workers.html)。目前限制最多只能创建一个 Worker，创建下一个 Worker 前请先调用 [Worker.terminate](https://developers.weixin.qq.com/miniprogram/dev/api/worker/Worker.terminate.html)\n         *\n         * 最低基础库： `1.9.90` */",
        "detail": "function",
        "kind": 9
    },
    "getStorageSync": {
        "prefix": "getStorageSync",
        "body": [
            "wx.getStorageSync('${1:key}')"
        ],
        "description": "/** [any wx.getStorageSync(string key)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.getStorageSync.html)\n*\n* [wx.getStorage](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.getStorage.html) 的同步版本\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getStorage({\n  key: 'key',\n  success (res) {\n    console.log(res.data)\n  }\n})\n```\n*\n* ```js\ntry {\n  var value = wx.getStorageSync('key')\n  if (value) {\n    // Do something with return value\n  }\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "canIUse": {
        "prefix": "canIUse",
        "body": [
            "wx.canIUse('${1:schema}')"
        ],
        "description": "/** [boolean wx.canIUse(string schema)](https://developers.weixin.qq.com/miniprogram/dev/api/base/wx.canIUse.html)\n*\n* 判断小程序的API，回调，参数，组件等是否在当前版本可用。\n*\n* **参数说明**\n*\n*\n* - `${API}` 代表 API 名字\n* - `${method}` 代表调用方式，有效值为return, success, object, callback\n* - `${param}` 代表参数或者返回值\n* - `${option}` 代表参数的可选值或者返回值的属性\n* - `${component}` 代表组件名字\n* - `${attribute}` 代表组件属性\n* - `${option}` 代表组件属性的可选值\n*\n* **示例代码**\n*\n*\n* ```js\n// 对象的属性或方法\nwx.canIUse('console.log')\nwx.canIUse('CameraContext.onCameraFrame')\nwx.canIUse('CameraFrameListener.start')\nwx.canIUse('Image.src')\n\n// wx接口参数、回调或者返回值\nwx.canIUse('openBluetoothAdapter')\nwx.canIUse('getSystemInfoSync.return.safeArea.left')\nwx.canIUse('getSystemInfo.success.screenWidth')\nwx.canIUse('showToast.object.image')\nwx.canIUse('onCompassChange.callback.direction')\nwx.canIUse('request.object.method.GET')\n\n// 组件的属性\nwx.canIUse('live-player')\nwx.canIUse('text.selectable')\nwx.canIUse('button.open-type.contact')\n```\n*\n* 最低基础库： `1.1.1` */",
        "detail": "function",
        "kind": 9
    },
    "arrayBufferToBase64": {
        "prefix": "arrayBufferToBase64",
        "body": [
            "wx.arrayBufferToBase64(${1:arrayBuffer})"
        ],
        "description": "/** [string wx.arrayBufferToBase64(ArrayBuffer arrayBuffer)](https://developers.weixin.qq.com/miniprogram/dev/api/base/wx.arrayBufferToBase64.html)\n         *\n         * 将 ArrayBuffer 对象转成 Base64 字符串\n         *\n         * 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "addCard": {
        "prefix": "addCard",
        "body": [
            "wx.addCard({",
            "  cardList: [$1],",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (result) => {$4},",
            "})"
        ],
        "description": "/** [wx.addCard(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/card/wx.addCard.html)\n*\n* 批量添加卡券。只有通过 [认证](https://developers.weixin.qq.com/miniprogram/product/renzheng.html) 的小程序或文化互动类目的小游戏才能使用。更多文档请参考 [微信卡券接口文档](https://mp.weixin.qq.com/cgi-bin/announce?action=getannouncement&key=1490190158&version=1&lang=zh_CN&platform=2)。\n*\n* **cardExt 说明**\n*\n*\n* cardExt 是卡券的扩展参数，其值是一个 JSON 字符串。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.addCard({\n  cardList: [\n    {\n      cardId: '',\n      cardExt: '{\"code\": \"\", \"openid\": \"\", \"timestamp\": \"\", \"signature\":\"\"}'\n    }, {\n      cardId: '',\n      cardExt: '{\"code\": \"\", \"openid\": \"\", \"timestamp\": \"\", \"signature\":\"\"}'\n    }\n  ],\n  success (res) {\n    console.log(res.cardList) // 卡券添加结果\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "addPhoneContact": {
        "prefix": "addPhoneContact",
        "body": [
            "wx.addPhoneContact({",
            "  firstName: '${1:firstName}',",
            "  addressCity: '${2:addressCity}',",
            "  addressCountry: '${3:addressCountry}',",
            "  addressPostalCode: '${4:addressPostalCode}',",
            "  addressState: '${5:addressState}',",
            "  addressStreet: '${6:addressStreet}',",
            "  complete: (res) => {$7},",
            "  email: '${8:email}',",
            "  fail: (res) => {$9},",
            "  homeAddressCity: '${10:homeAddressCity}',",
            "  homeAddressCountry: '${11:homeAddressCountry}',",
            "  homeAddressPostalCode: '${12:homeAddressPostalCode}',",
            "  homeAddressState: '${13:homeAddressState}',",
            "  homeAddressStreet: '${14:homeAddressStreet}',",
            "  homeFaxNumber: '${15:homeFaxNumber}',",
            "  homePhoneNumber: '${16:homePhoneNumber}',",
            "  hostNumber: '${17:hostNumber}',",
            "  lastName: '${18:lastName}',",
            "  middleName: '${19:middleName}',",
            "  mobilePhoneNumber: '${20:mobilePhoneNumber}',",
            "  nickName: '${21:nickName}',",
            "  organization: '${22:organization}',",
            "  photoFilePath: '${23:photoFilePath}',",
            "  remark: '${24:remark}',",
            "  success: (res) => {$25},",
            "  title: '${26:title}',",
            "  url: '${27:url}',",
            "  weChatNumber: '${28:weChatNumber}',",
            "  workAddressCity: '${29:workAddressCity}',",
            "  workAddressCountry: '${30:workAddressCountry}',",
            "  workAddressPostalCode: '${31:workAddressPostalCode}',",
            "  workAddressState: '${32:workAddressState}',",
            "  workAddressStreet: '${33:workAddressStreet}',",
            "  workFaxNumber: '${34:workFaxNumber}',",
            "  workPhoneNumber: '${35:workPhoneNumber}',",
            "})"
        ],
        "description": "/** [wx.addPhoneContact(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/contact/wx.addPhoneContact.html)\n         *\n         * 添加手机通讯录联系人。用户可以选择将该表单以「新增联系人」或「添加到已有联系人」的方式，写入手机系统通讯录。\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "authorize": {
        "prefix": "authorize",
        "body": [
            "wx.authorize({",
            "  scope: '${1:scope}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.authorize(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/authorize/wx.authorize.html)\n*\n* 提前向用户发起授权请求。调用后会立刻弹窗询问用户是否同意授权小程序使用某项功能或获取用户的某些数据，但不会实际调用对应接口。如果用户之前已经同意授权，则不会出现弹窗，直接返回成功。更多用法详见 [用户授权](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/authorize.html)。\n*\n* **示例代码**\n*\n*\n* ```js\n// 可以通过 wx.getSetting 先查询一下用户是否授权了 \"scope.record\" 这个 scope\nwx.getSetting({\n  success(res) {\n    if (!res.authSetting['scope.record']) {\n      wx.authorize({\n        scope: 'scope.record',\n        success () {\n          // 用户已经同意小程序使用录音功能，后续调用 wx.startRecord 接口不会弹窗询问\n          wx.startRecord()\n        }\n      })\n    }\n  }\n})\n```\n*\n* 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "canvasGetImageData": {
        "prefix": "canvasGetImageData",
        "body": [
            "wx.canvasGetImageData({",
            "  canvasId: '${1:canvasId}',",
            "  height: ${2:0},",
            "  width: ${3:0},",
            "  x: ${4:0},",
            "  y: ${5:0},",
            "  complete: (res) => {$6},",
            "  fail: (res) => {$7},",
            "  success: (result) => {$8},",
            "}, ${10:component})"
        ],
        "description": "/** [wx.canvasGetImageData(Object object, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/wx.canvasGetImageData.html)\n*\n* 获取 canvas 区域隐含的像素数据。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/yufmRjmZ7W8f)\n*\n* ```js\nwx.canvasGetImageData({\n  canvasId: 'myCanvas',\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100,\n  success(res) {\n    console.log(res.width) // 100\n    console.log(res.height) // 100\n    console.log(res.data instanceof Uint8ClampedArray) // true\n    console.log(res.data.length) // 100 * 100 * 4\n  }\n})\n```\n*\n* 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "canvasPutImageData": {
        "prefix": "canvasPutImageData",
        "body": [
            "wx.canvasPutImageData({",
            "  canvasId: '${1:canvasId}',",
            "  data: ${2:data},",
            "  height: ${3:0},",
            "  width: ${4:0},",
            "  x: ${5:0},",
            "  y: ${6:0},",
            "  complete: (res) => {$7},",
            "  fail: (res) => {$8},",
            "  success: (res) => {$9},",
            "}, ${11:component})"
        ],
        "description": "/** [wx.canvasPutImageData(Object object, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/wx.canvasPutImageData.html)\n         *\n         * 将像素数据绘制到画布。在自定义组件下，第二个参数传入自定义组件实例 this，以操作组件内 <canvas> 组件\n         *\n         * 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "canvasToTempFilePath": {
        "prefix": "canvasToTempFilePath",
        "body": [
            "wx.canvasToTempFilePath({",
            "  canvas: '${1:canvas}',",
            "  canvasId: '${2:canvasId}',",
            "  quality: ${3:0},",
            "  complete: (res) => {$4},",
            "  destHeight: ${5:0},",
            "  destWidth: ${6:0},",
            "  fail: (res) => {$7},",
            "  fileType: ${8:fileType},",
            "  height: ${9:0},",
            "  success: (result) => {$10},",
            "  width: ${11:0},",
            "  x: ${12:0},",
            "  y: ${13:0},",
            "}, ${15:component})"
        ],
        "description": "/** [wx.canvasToTempFilePath(Object object, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/wx.canvasToTempFilePath.html)\n         *\n         * 把当前画布指定区域的内容导出生成指定大小的图片。在 `draw()` 回调里调用该方法才能保证图片导出成功。 */",
        "detail": "function",
        "kind": 9
    },
    "checkIsSoterEnrolledInDevice": {
        "prefix": "checkIsSoterEnrolledInDevice",
        "body": [
            "wx.checkIsSoterEnrolledInDevice({",
            "  checkAuthMode: ${1:checkAuthMode},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (result) => {$4},",
            "})"
        ],
        "description": "/** [wx.checkIsSoterEnrolledInDevice(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/soter/wx.checkIsSoterEnrolledInDevice.html)\n*\n* 获取设备内是否录入如指纹等生物信息的接口\n*\n* **示例代码**\n*\n*\n* ```js\nwx.checkIsSoterEnrolledInDevice({\n  checkAuthMode: 'fingerPrint',\n  success(res) {\n    console.log(res.isEnrolled)\n  }\n})\n```\n*\n* 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "checkIsSupportSoterAuthentication": {
        "prefix": "checkIsSupportSoterAuthentication",
        "body": [
            "wx.checkIsSupportSoterAuthentication({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.checkIsSupportSoterAuthentication(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/soter/wx.checkIsSupportSoterAuthentication.html)\n*\n* 获取本机支持的 SOTER 生物认证方式\n*\n* **示例代码**\n*\n*\n* ```js\nwx.checkIsSupportSoterAuthentication({\n  success(res) {\n    // res.supportMode = [] 不具备任何被SOTER支持的生物识别方式\n    // res.supportMode = ['fingerPrint'] 只支持指纹识别\n    // res.supportMode = ['fingerPrint', 'facial'] 支持指纹识别和人脸识别\n  }\n})\n```\n*\n* 最低基础库： `1.5.0` */",
        "detail": "function",
        "kind": 9
    },
    "checkSession": {
        "prefix": "checkSession",
        "body": [
            "wx.checkSession({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.checkSession(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.checkSession.html)\n*\n* 检查登录态是否过期。\n*\n* 通过 wx.login 接口获得的用户登录态拥有一定的时效性。用户越久未使用小程序，用户登录态越有可能失效。反之如果用户一直在使用小程序，则用户登录态一直保持有效。具体时效逻辑由微信维护，对开发者透明。开发者只需要调用 wx.checkSession 接口检测当前用户登录态是否有效。\n*\n* 登录态过期后开发者可以再调用 wx.login 获取新的用户登录态。调用成功说明当前 session_key 未过期，调用失败说明 session_key 已过期。更多使用方法详见 [小程序登录](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html)。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.checkSession({\n  success () {\n    //session_key 未过期，并且在本生命周期一直有效\n  },\n  fail () {\n    // session_key 已经失效，需要重新执行登录流程\n    wx.login() //重新登录\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "chooseAddress": {
        "prefix": "chooseAddress",
        "body": [
            "wx.chooseAddress({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.chooseAddress(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/address/wx.chooseAddress.html)\n*\n* 获取用户收货地址。调起用户编辑收货地址原生界面，并在编辑完成后返回用户选择的地址。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/024hHnmd772y)\n* ```js\nwx.chooseAddress({\n  success (res) {\n    console.log(res.userName)\n    console.log(res.postalCode)\n    console.log(res.provinceName)\n    console.log(res.cityName)\n    console.log(res.countyName)\n    console.log(res.detailInfo)\n    console.log(res.nationalCode)\n    console.log(res.telNumber)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "chooseImage": {
        "prefix": "chooseImage",
        "body": [
            "wx.chooseImage({",
            "  complete: (res) => {$1},",
            "  count: ${2:0},",
            "  fail: (res) => {$3},",
            "  sizeType: [$4],",
            "  sourceType: [$5],",
            "  success: (result) => {$6},",
            "})"
        ],
        "description": "/** [wx.chooseImage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.chooseImage.html)\n*\n* 从本地相册选择图片或使用相机拍照。\n*\n* ****\n*\n* ```js\nwx.chooseImage({\n  count: 1,\n  sizeType: ['original', 'compressed'],\n  sourceType: ['album', 'camera'],\n  success (res) {\n    // tempFilePath可以作为img标签的src属性显示图片\n    const tempFilePaths = res.tempFilePaths\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "chooseInvoice": {
        "prefix": "chooseInvoice",
        "body": [
            "wx.chooseInvoice({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.chooseInvoice(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/invoice/wx.chooseInvoice.html)\n         *\n         * 选择用户已有的发票。\n         *\n         * **通过 cardId 和 encryptCode 获得报销发票的信息**\n         *\n         *\n         * 请参考[微信电子发票文档](https://mp.weixin.qq.com/wiki?t=resource/res_main&id=21517918939oae3U)中，「查询报销发票信息」部分。\n         * 其中 `access_token` 的获取请参考[auth.getAccessToken](https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html)文档\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "chooseInvoiceTitle": {
        "prefix": "chooseInvoiceTitle",
        "body": [
            "wx.chooseInvoiceTitle({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.chooseInvoiceTitle(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/invoice/wx.chooseInvoiceTitle.html)\n*\n* 选择用户的发票抬头。当前小程序必须关联一个公众号，且这个公众号是完成了[微信认证](https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1496554031_RD4xe)的，才能调用 chooseInvoiceTitle。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/GJ4S9nmQ7x2E)\n*\n* ```js\nwx.chooseInvoiceTitle({\n  success(res) {}\n})\n```\n*\n* 最低基础库： `1.5.0` */",
        "detail": "function",
        "kind": 9
    },
    "chooseLocation": {
        "prefix": "chooseLocation",
        "body": [
            "wx.chooseLocation({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  latitude: ${3:0},",
            "  longitude: ${4:0},",
            "  success: (result) => {$5},",
            "})"
        ],
        "description": "/** [wx.chooseLocation(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.chooseLocation.html)\n         *\n         * 打开地图选择位置。 */",
        "detail": "function",
        "kind": 9
    },
    "chooseMessageFile": {
        "prefix": "chooseMessageFile",
        "body": [
            "wx.chooseMessageFile({",
            "  count: ${1:0},",
            "  complete: (res) => {$2},",
            "  extension: [$3],",
            "  fail: (res) => {$4},",
            "  success: (result) => {$5},",
            "  type: ${6:type},",
            "})"
        ],
        "description": "/** [wx.chooseMessageFile(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.chooseMessageFile.html)\n*\n* 从客户端会话选择文件。\n*\n* ****\n*\n* ```js\nwx.chooseMessageFile({\n  count: 10,\n  type: 'image',\n  success (res) {\n    // tempFilePath可以作为img标签的src属性显示图片\n    const tempFilePaths = res.tempFilePaths\n  }\n})\n```\n*\n* 最低基础库： `2.5.0` */",
        "detail": "function",
        "kind": 9
    },
    "chooseVideo": {
        "prefix": "chooseVideo",
        "body": [
            "wx.chooseVideo({",
            "  camera: ${1:camera},",
            "  complete: (res) => {$2},",
            "  compressed: ${3:true},",
            "  fail: (res) => {$4},",
            "  maxDuration: ${5:0},",
            "  sourceType: [$6],",
            "  success: (result) => {$7},",
            "})"
        ],
        "description": "/** [wx.chooseVideo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/video/wx.chooseVideo.html)\n*\n* 拍摄视频或从手机相册中选视频。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.chooseVideo({\n  sourceType: ['album','camera'],\n  maxDuration: 60,\n  camera: 'back',\n  success(res) {\n    console.log(res.tempFilePath)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "clearStorage": {
        "prefix": "clearStorage",
        "body": [
            "wx.clearStorage({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.clearStorage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.clearStorage.html)\n*\n* 清理本地数据缓存\n*\n* **示例代码**\n*\n*\n* ```js\nwx.clearStorage()\n```\n*\n* ```js\ntry {\n  wx.clearStorageSync()\n} catch(e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "clearStorageSync": {
        "prefix": "clearStorageSync",
        "body": [
            "wx.clearStorageSync()"
        ],
        "description": "/** [wx.clearStorageSync()](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.clearStorageSync.html)\n*\n* [wx.clearStorage](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.clearStorage.html) 的同步版本\n*\n* **示例代码**\n*\n*\n* ```js\nwx.clearStorage()\n```\n*\n* ```js\ntry {\n  wx.clearStorageSync()\n} catch(e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "closeBLEConnection": {
        "prefix": "closeBLEConnection",
        "body": [
            "wx.closeBLEConnection({",
            "  deviceId: '${1:deviceId}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.closeBLEConnection(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.closeBLEConnection.html)\n*\n* 断开与低功耗蓝牙设备的连接。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.closeBLEConnection({\n  deviceId,\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "closeBluetoothAdapter": {
        "prefix": "closeBluetoothAdapter",
        "body": [
            "wx.closeBluetoothAdapter({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.closeBluetoothAdapter(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.closeBluetoothAdapter.html)\n*\n* 关闭蓝牙模块。调用该方法将断开所有已建立的连接并释放系统资源。建议在使用蓝牙流程后，与 [wx.openBluetoothAdapter](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.openBluetoothAdapter.html) 成对调用。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.closeBluetoothAdapter({\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "closeSocket": {
        "prefix": "closeSocket",
        "body": [
            "wx.closeSocket({",
            "  code: ${1:0},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  reason: '${4:reason}',",
            "  success: (res) => {$5},",
            "})"
        ],
        "description": "/** [wx.closeSocket(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/wx.closeSocket.html)\n*\n* 关闭 WebSocket 连接\n*\n* **示例代码**\n*\n*\n* ```js\nwx.connectSocket({\n  url: 'test.php'\n})\n\n//注意这里有时序问题，\n//如果 wx.connectSocket 还没回调 wx.onSocketOpen，而先调用 wx.closeSocket，那么就做不到关闭 WebSocket 的目的。\n//必须在 WebSocket 打开期间调用 wx.closeSocket 才能关闭。\nwx.onSocketOpen(function() {\n  wx.closeSocket()\n})\n\nwx.onSocketClose(function(res) {\n  console.log('WebSocket 已关闭！')\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "compressImage": {
        "prefix": "compressImage",
        "body": [
            "wx.compressImage({",
            "  src: '${1:src}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  quality: ${4:0},",
            "  success: (result) => {$5},",
            "})"
        ],
        "description": "/** [wx.compressImage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.compressImage.html)\n*\n* 压缩图片接口，可选压缩质量\n*\n* **示例代码**\n*\n*\n* ```js\nwx.compressImage({\n  src: '', // 图片路径\n  quality: 80 // 压缩质量\n})\n```\n*\n* 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "connectWifi": {
        "prefix": "connectWifi",
        "body": [
            "wx.connectWifi({",
            "  SSID: '${1:SSID}',",
            "  password: '${2:password}',",
            "  BSSID: '${3:BSSID}',",
            "  complete: (res) => {$4},",
            "  fail: (res) => {$5},",
            "  success: (res) => {$6},",
            "})"
        ],
        "description": "/** [wx.connectWifi(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.connectWifi.html)\n*\n* 连接 Wi-Fi。若已知 Wi-Fi 信息，可以直接利用该接口连接。仅 Android 与 iOS 11 以上版本支持。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.connectWifi({\n  SSID: '',\n  password: '',\n  success (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "createBLEConnection": {
        "prefix": "createBLEConnection",
        "body": [
            "wx.createBLEConnection({",
            "  deviceId: '${1:deviceId}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "  timeout: ${5:0},",
            "})"
        ],
        "description": "/** [wx.createBLEConnection(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.createBLEConnection.html)\n*\n* 连接低功耗蓝牙设备。\n*\n* 若小程序在之前已有搜索过某个蓝牙设备，并成功建立连接，可直接传入之前搜索获取的 deviceId 直接尝试连接该设备，无需进行搜索操作。\n*\n* **注意**\n*\n*\n* - 请保证尽量成对的调用 `createBLEConnection` 和 `closeBLEConnection` 接口。安卓如果多次调用 `createBLEConnection` 创建连接，有可能导致系统持有同一设备多个连接的实例，导致调用 `closeBLEConnection` 的时候并不能真正的断开与设备的连接。\n* - 蓝牙连接随时可能断开，建议监听 [wx.onBLEConnectionStateChange](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.onBLEConnectionStateChange.html) 回调事件，当蓝牙设备断开时按需执行重连操作\n* - 若对未连接的设备或已断开连接的设备调用数据读写操作的接口，会返回 10006 错误，建议进行重连操作。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.createBLEConnection({\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId,\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "getAvailableAudioSources": {
        "prefix": "getAvailableAudioSources",
        "body": [
            "wx.getAvailableAudioSources({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.getAvailableAudioSources(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.getAvailableAudioSources.html)\n         *\n         * 获取当前支持的音频输入源\n         *\n         * 最低基础库： `2.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "getBLEDeviceCharacteristics": {
        "prefix": "getBLEDeviceCharacteristics",
        "body": [
            "wx.getBLEDeviceCharacteristics({",
            "  deviceId: '${1:deviceId}',",
            "  serviceId: '${2:serviceId}',",
            "  complete: (res) => {$3},",
            "  fail: (res) => {$4},",
            "  success: (result) => {$5},",
            "})"
        ],
        "description": "/** [wx.getBLEDeviceCharacteristics(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.getBLEDeviceCharacteristics.html)\n*\n* 获取蓝牙设备某个服务中所有特征值(characteristic)。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getBLEDeviceCharacteristics({\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId,\n  success (res) {\n    console.log('device getBLEDeviceCharacteristics:', res.characteristics)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "getBLEDeviceServices": {
        "prefix": "getBLEDeviceServices",
        "body": [
            "wx.getBLEDeviceServices({",
            "  deviceId: '${1:deviceId}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (result) => {$4},",
            "})"
        ],
        "description": "/** [wx.getBLEDeviceServices(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.getBLEDeviceServices.html)\n*\n* 获取蓝牙设备所有服务(service)。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getBLEDeviceServices({\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId,\n  success (res) {\n    console.log('device services:', res.services)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "getBackgroundAudioPlayerState": {
        "prefix": "getBackgroundAudioPlayerState",
        "body": [
            "wx.getBackgroundAudioPlayerState({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.getBackgroundAudioPlayerState(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.getBackgroundAudioPlayerState.html)\n*\n* 获取后台音乐播放状态。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getBackgroundAudioPlayerState({\n  success (res) {\n    const status = res.status\n    const dataUrl = res.dataUrl\n    const currentPosition = res.currentPosition\n    const duration = res.duration\n    const downloadPercent = res.downloadPercent\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "getBackgroundFetchData": {
        "prefix": "getBackgroundFetchData",
        "body": [
            "wx.getBackgroundFetchData({",
            "  fetchType: '${1:fetchType}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.getBackgroundFetchData(object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/background-fetch/wx.getBackgroundFetchData.html)\n         *\n         * 拉取 backgroundFetch 客户端缓存数据\n         *\n         * 最低基础库： `2.8.0` */",
        "detail": "function",
        "kind": 9
    },
    "getBackgroundFetchToken": {
        "prefix": "getBackgroundFetchToken",
        "body": [
            "wx.getBackgroundFetchToken({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.getBackgroundFetchToken(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/background-fetch/wx.getBackgroundFetchToken.html)\n         *\n         * 获取设置过的自定义登录态。若无，则返回 fail。\n         *\n         * 最低基础库： `2.8.0` */",
        "detail": "function",
        "kind": 9
    },
    "getBatteryInfo": {
        "prefix": "getBatteryInfo",
        "body": [
            "wx.getBatteryInfo({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.getBatteryInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/battery/wx.getBatteryInfo.html)\n         *\n         * 获取设备电量。同步 API [wx.getBatteryInfoSync](https://developers.weixin.qq.com/miniprogram/dev/api/device/battery/wx.getBatteryInfoSync.html) 在 iOS 上不可用。 */",
        "detail": "function",
        "kind": 9
    },
    "getBeacons": {
        "prefix": "getBeacons",
        "body": [
            "wx.getBeacons({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.getBeacons(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/ibeacon/wx.getBeacons.html)\n         *\n         * 获取所有已搜索到的 iBeacon 设备\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "getBluetoothAdapterState": {
        "prefix": "getBluetoothAdapterState",
        "body": [
            "wx.getBluetoothAdapterState({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.getBluetoothAdapterState(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.getBluetoothAdapterState.html)\n*\n* 获取本机蓝牙适配器状态。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getBluetoothAdapterState({\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "getBluetoothDevices": {
        "prefix": "getBluetoothDevices",
        "body": [
            "wx.getBluetoothDevices({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.getBluetoothDevices(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.getBluetoothDevices.html)\n*\n* 获取在蓝牙模块生效期间所有已发现的蓝牙设备。包括已经和本机处于连接状态的设备。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n*\n* ```js\n// ArrayBuffer转16进度字符串示例\nfunction ab2hex(buffer) {\n  var hexArr = Array.prototype.map.call(\n    new Uint8Array(buffer),\n    function(bit) {\n      return ('00' + bit.toString(16)).slice(-2)\n    }\n  )\n  return hexArr.join('');\n}\nwx.getBluetoothDevices({\n  success: function (res) {\n    console.log(res)\n    if (res.devices[0]) {\n      console.log(ab2hex(res.devices[0].advertisData))\n    }\n  }\n})\n```\n*\n* **注意事项**\n*\n*\n* - 该接口获取到的设备列表为**蓝牙模块生效期间所有搜索到的蓝牙设备**，若在蓝牙模块使用流程结束后未及时调用 [wx.closeBluetoothAdapter](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.closeBluetoothAdapter.html) 释放资源，会存在调用该接口会返回之前的蓝牙使用流程中搜索到的蓝牙设备，可能设备已经不在用户身边，无法连接。\n* - 蓝牙设备在被搜索到时，系统返回的 name 字段一般为广播包中的 LocalName 字段中的设备名称，而如果与蓝牙设备建立连接，系统返回的 name 字段会改为从蓝牙设备上获取到的 `GattName`。若需要动态改变设备名称并展示，建议使用 `localName` 字段。\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "getClipboardData": {
        "prefix": "getClipboardData",
        "body": [
            "wx.getClipboardData({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (option) => {$3},",
            "})"
        ],
        "description": "/** [wx.getClipboardData(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/clipboard/wx.getClipboardData.html)\n*\n* 获取系统剪贴板的内容\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getClipboardData({\n  success (res){\n    console.log(res.data)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "getConnectedBluetoothDevices": {
        "prefix": "getConnectedBluetoothDevices",
        "body": [
            "wx.getConnectedBluetoothDevices({",
            "  services: [$1],",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (result) => {$4},",
            "})"
        ],
        "description": "/** [wx.getConnectedBluetoothDevices(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.getConnectedBluetoothDevices.html)\n*\n* 根据 uuid 获取处于已连接状态的设备。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getConnectedBluetoothDevices({\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "getConnectedWifi": {
        "prefix": "getConnectedWifi",
        "body": [
            "wx.getConnectedWifi({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.getConnectedWifi(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.getConnectedWifi.html)\n         *\n         * 获取已连接中的 Wi-Fi 信息。\n         *\n         * 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "getExtConfig": {
        "prefix": "getExtConfig",
        "body": [
            "wx.getExtConfig({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.getExtConfig(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ext/wx.getExtConfig.html)\n*\n* 获取[第三方平台](https://developers.weixin.qq.com/miniprogram/dev/devtools/ext.html)自定义的数据字段。\n*\n* **Tips**\n*\n*\n* 1. 本接口暂时无法通过 [wx.canIUse](https://developers.weixin.qq.com/miniprogram/dev/api/base/wx.canIUse.html) 判断是否兼容，开发者需要自行判断 [wx.getExtConfig](https://developers.weixin.qq.com/miniprogram/dev/api/ext/wx.getExtConfig.html) 是否存在来兼容\n*\n* ****\n*\n* ```js\nif (wx.getExtConfig) {\n  wx.getExtConfig({\n    success (res) {\n      console.log(res.extConfig)\n    }\n  })\n}\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "getFileInfo": {
        "prefix": "getFileInfo",
        "body": [
            "wx.getFileInfo({",
            "  filePath: '${1:filePath}',",
            "  complete: (res) => {$2},",
            "  digestAlgorithm: ${3:digestAlgorithm},",
            "  fail: (res) => {$4},",
            "  success: (result) => {$5},",
            "})"
        ],
        "description": "/** [wx.getFileInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.getFileInfo.html)\n*\n* 获取文件信息\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getFileInfo({\n  success (res) {\n    console.log(res.size)\n    console.log(res.digest)\n  }\n})\n```\n*\n* 最低基础库： `1.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "getHCEState": {
        "prefix": "getHCEState",
        "body": [
            "wx.getHCEState({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.getHCEState(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/nfc/wx.getHCEState.html)\n*\n* 判断当前设备是否支持 HCE 能力。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getHCEState({\n  success (res) {\n    console.log(res.errCode)\n  }\n})\n```\n*\n* 最低基础库： `1.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "getImageInfo": {
        "prefix": "getImageInfo",
        "body": [
            "wx.getImageInfo({",
            "  src: '${1:src}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (result) => {$4},",
            "})"
        ],
        "description": "/** [wx.getImageInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.getImageInfo.html)\n*\n* 获取图片信息。网络图片需先配置download域名才能生效。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/Kd47Sbmr6yYu)\n*\n* ```js\nwx.getImageInfo({\n  src: 'images/a.jpg',\n  success (res) {\n    console.log(res.width)\n    console.log(res.height)\n  }\n})\n\nwx.chooseImage({\n  success (res) {\n    wx.getImageInfo({\n      src: res.tempFilePaths[0],\n      success (res) {\n        console.log(res.width)\n        console.log(res.height)\n      }\n    })\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "getLocation": {
        "prefix": "getLocation",
        "body": [
            "wx.getLocation({",
            "  altitude: '${1:altitude}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  highAccuracyExpireTime: ${4:0},",
            "  isHighAccuracy: ${5:true},",
            "  success: (result) => {$6},",
            "  type: '${7:type}',",
            "})"
        ],
        "description": "/** [wx.getLocation(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.getLocation.html)\n*\n* 获取当前的地理位置、速度。当用户离开小程序后，此接口无法调用。开启高精度定位，接口耗时会增加，可指定 highAccuracyExpireTime 作为超时时间。\n*\n* **示例代码**\n*\n*\n*  ```js\n wx.getLocation({\n  type: 'wgs84',\n  success (res) {\n    const latitude = res.latitude\n    const longitude = res.longitude\n    const speed = res.speed\n    const accuracy = res.accuracy\n  }\n})\n ```\n*\n* **注意**\n*\n*\n* - 工具中定位模拟使用IP定位，可能会有一定误差。且工具目前仅支持 gcj02 坐标。\n* - 使用第三方服务进行逆地址解析时，请确认第三方服务默认的坐标系，正确进行坐标转换。 */",
        "detail": "function",
        "kind": 9
    },
    "getNetworkType": {
        "prefix": "getNetworkType",
        "body": [
            "wx.getNetworkType({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.getNetworkType(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/network/wx.getNetworkType.html)\n*\n* 获取网络类型\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getNetworkType({\n  success (res) {\n    const networkType = res.networkType\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "getSavedFileInfo": {
        "prefix": "getSavedFileInfo",
        "body": [
            "wx.getSavedFileInfo({",
            "  filePath: '${1:filePath}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (result) => {$4},",
            "})"
        ],
        "description": "/** [wx.getSavedFileInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.getSavedFileInfo.html)\n*\n* 获取本地文件的文件信息。此接口只能用于获取已保存到本地的文件，若需要获取临时文件信息，请使用 [wx.getFileInfo()](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.getFileInfo.html) 接口。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getSavedFileList({\n  success (res) {\n    console.log(res.fileList)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "getSavedFileList": {
        "prefix": "getSavedFileList",
        "body": [
            "wx.getSavedFileList({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.getSavedFileList(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.getSavedFileList.html)\n*\n* 获取该小程序下已保存的本地缓存文件列表\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getSavedFileList({\n  success (res) {\n    console.log(res.fileList)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "getScreenBrightness": {
        "prefix": "getScreenBrightness",
        "body": [
            "wx.getScreenBrightness({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (option) => {$3},",
            "})"
        ],
        "description": "/** [wx.getScreenBrightness(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/screen/wx.getScreenBrightness.html)\n         *\n         * 获取屏幕亮度\n         *\n         * **说明**\n         *\n         *\n         * - 若安卓系统设置中开启了自动调节亮度功能，则屏幕亮度会根据光线自动调整，该接口仅能获取自动调节亮度之前的值，而非实时的亮度值。\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "getSelectedTextRange": {
        "prefix": "getSelectedTextRange",
        "body": [
            "wx.getSelectedTextRange({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.getSelectedTextRange(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/keyboard/wx.getSelectedTextRange.html)\n*\n* 在input、textarea等focus之后，获取输入框的光标位置。注意：只有在focus的时候调用此接口才有效。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getSelectedTextRange({\n  complete: res => {\n    console.log('getSelectedTextRange res', res.start, res.end)\n  }\n})\n```\n*\n* 最低基础库： `2.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "getSetting": {
        "prefix": "getSetting",
        "body": [
            "wx.getSetting({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.getSetting(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/setting/wx.getSetting.html)\n*\n* 获取用户的当前设置。**返回值中只会出现小程序已经向用户请求过的[权限](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/authorize.html)**。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getSetting({\n  success (res) {\n    console.log(res.authSetting)\n    // res.authSetting = {\n    //   \"scope.userInfo\": true,\n    //   \"scope.userLocation\": true\n    // }\n  }\n})\n```\n*\n* 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "getShareInfo": {
        "prefix": "getShareInfo",
        "body": [
            "wx.getShareInfo({",
            "  shareTicket: '${1:shareTicket}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (result) => {$4},",
            "  timeout: ${5:0},",
            "})"
        ],
        "description": "/** [wx.getShareInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/share/wx.getShareInfo.html)\n*\n* 获取转发详细信息\n*\n* **示例代码**\n*\n*\n* 敏感数据有两种获取方式，一是使用 [加密数据解密算法]((open-ability/signature#加密数据解密算法)) 。\n* 获取得到的开放数据为以下 json 结构（其中 openGId 为当前群的唯一标识）：\n*\n* ```json\n{\n \"openGId\": \"OPENGID\"\n}\n```\n*\n* **Tips**\n*\n*\n* - 如需要展示群名称，可以使用[开放数据组件](https://developers.weixin.qq.com/miniprogram/dev/component/open-ability/open-data.html)\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "getStorage": {
        "prefix": "getStorage",
        "body": [
            "wx.getStorage({",
            "  key: '${1:key}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (result) => {$4},",
            "})"
        ],
        "description": "/** [wx.getStorage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.getStorage.html)\n*\n* 从本地缓存中异步获取指定 key 的内容\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getStorage({\n  key: 'key',\n  success (res) {\n    console.log(res.data)\n  }\n})\n```\n*\n* ```js\ntry {\n  var value = wx.getStorageSync('key')\n  if (value) {\n    // Do something with return value\n  }\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "getStorageInfo": {
        "prefix": "getStorageInfo",
        "body": [
            "wx.getStorageInfo({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (option) => {$3},",
            "})"
        ],
        "description": "/** [wx.getStorageInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.getStorageInfo.html)\n*\n* 异步获取当前storage的相关信息\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getStorageInfo({\n  success (res) {\n    console.log(res.keys)\n    console.log(res.currentSize)\n    console.log(res.limitSize)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getStorageInfoSync()\n  console.log(res.keys)\n  console.log(res.currentSize)\n  console.log(res.limitSize)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "getSystemInfo": {
        "prefix": "getSystemInfo",
        "body": [
            "wx.getSystemInfo({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.getSystemInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/base/system/system-info/wx.getSystemInfo.html)\n*\n* 获取系统信息\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getSystemInfo({\n  success (res) {\n    console.log(res.model)\n    console.log(res.pixelRatio)\n    console.log(res.windowWidth)\n    console.log(res.windowHeight)\n    console.log(res.language)\n    console.log(res.version)\n    console.log(res.platform)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getSystemInfoSync()\n  console.log(res.model)\n  console.log(res.pixelRatio)\n  console.log(res.windowWidth)\n  console.log(res.windowHeight)\n  console.log(res.language)\n  console.log(res.version)\n  console.log(res.platform)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "getUserInfo": {
        "prefix": "getUserInfo",
        "body": [
            "wx.getUserInfo({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  lang: ${3:lang},",
            "  success: (result) => {$4},",
            "  withCredentials: ${5:true},",
            "})"
        ],
        "description": "/** [wx.getUserInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/user-info/wx.getUserInfo.html)\n*\n* 获取用户信息。\n*\n* **接口调整说明**\n*\n*\n* 在用户未授权过的情况下调用此接口，将不再出现授权弹窗，会直接进入 fail 回调（详见[《公告》](https://developers.weixin.qq.com/community/develop/doc/0000a26e1aca6012e896a517556c01))。在用户已授权的情况下调用此接口，可成功获取用户信息。\n*\n* **示例代码**\n*\n*\n*\n* ```js\n// 必须是在用户已经授权的情况下调用\nwx.getUserInfo({\n  success: function(res) {\n    var userInfo = res.userInfo\n    var nickName = userInfo.nickName\n    var avatarUrl = userInfo.avatarUrl\n    var gender = userInfo.gender //性别 0：未知、1：男、2：女\n    var province = userInfo.province\n    var city = userInfo.city\n    var country = userInfo.country\n  }\n})\n```\n*\n* 敏感数据有两种获取方式，一是使用 [加密数据解密算法]((open-ability/signature#加密数据解密算法)) 。\n* 获取得到的开放数据为以下 json 结构：\n*\n* ```json\n{\n  \"openId\": \"OPENID\",\n  \"nickName\": \"NICKNAME\",\n  \"gender\": GENDER,\n  \"city\": \"CITY\",\n  \"province\": \"PROVINCE\",\n  \"country\": \"COUNTRY\",\n  \"avatarUrl\": \"AVATARURL\",\n  \"unionId\": \"UNIONID\",\n  \"watermark\": {\n    \"appid\":\"APPID\",\n    \"timestamp\":TIMESTAMP\n  }\n}\n```\n*\n* **小程序用户信息组件示例代码**\n*\n*\n* ```html\n* <!-- 如果只是展示用户头像昵称，可以使用 <open-data /> 组件 -->\n* <open-data type=\"userAvatarUrl\"></open-data>\n* <open-data type=\"userNickName\"></open-data>\n* <!-- 需要使用 button 来授权登录 -->\n* <button wx:if=\"{{canIUse}}\" open-type=\"getUserInfo\" bindgetuserinfo=\"bindGetUserInfo\">授权登录</button>\n* <view wx:else>请升级微信版本</view>\n* ```\n*\n* ```js\nPage({\n  data: {\n    canIUse: wx.canIUse('button.open-type.getUserInfo')\n  },\n  onLoad: function() {\n    // 查看是否授权\n    wx.getSetting({\n      success (res){\n        if (res.authSetting['scope.userInfo']) {\n          // 已经授权，可以直接调用 getUserInfo 获取头像昵称\n          wx.getUserInfo({\n            success: function(res) {\n              console.log(res.userInfo)\n            }\n          })\n        }\n      }\n    })\n  },\n  bindGetUserInfo (e) {\n    console.log(e.detail.userInfo)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "getWeRunData": {
        "prefix": "getWeRunData",
        "body": [
            "wx.getWeRunData({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.getWeRunData(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/werun/wx.getWeRunData.html)\n*\n* 获取用户过去三十天微信运动步数。需要先调用 [wx.login](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html) 接口。步数信息会在用户主动进入小程序时更新。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getWeRunData({\n  success (res) {\n    // 拿 encryptedData 到开发者后台解密开放数据\n    const encryptedData = res.encryptedData\n    // 或拿 cloudID 通过云调用直接获取开放数据\n    const cloudID = res.cloudID\n  }\n})\n```\n*\n* **开放数据 JSON 结构**\n*\n*\n*\n* 敏感数据有两种获取方式，一是使用 [加密数据解密算法]((open-ability/signature#加密数据解密算法)) 。\n* 获取得到的开放数据为以下 json 结构：\n*\n* ```json\n{\n  \"stepInfoList\": [\n    {\n      \"timestamp\": 1445866601,\n      \"step\": 100\n    },\n    {\n      \"timestamp\": 1445876601,\n      \"step\": 120\n    }\n  ]\n}\n```\n*\n* stepInfoList 中，每一项结构如下：\n*\n* | 属性 | 类型 | 说明 |\n* | --- | ---- | --- |\n* | timestamp | number | 时间戳，表示数据对应的时间 |\n* | step | number | 微信运动步数 |\n*\n* 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "getWifiList": {
        "prefix": "getWifiList",
        "body": [
            "wx.getWifiList({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.getWifiList(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.getWifiList.html)\n         *\n         * 请求获取 Wi-Fi 列表。在 `onGetWifiList` 注册的回调中返回 `wifiList` 数据。 **Android 调用前需要 [用户授权](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/authorize.html) scope.userLocation。**\n         *\n         * iOS 将跳转到系统的 Wi-Fi 界面，Android 不会跳转。 iOS 11.0 及 iOS 11.1 两个版本因系统问题，该方法失效。但在 iOS 11.2 中已修复。\n         *\n         * 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "hideHomeButton": {
        "prefix": "hideHomeButton",
        "body": [
            "wx.hideHomeButton({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.hideHomeButton(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/navigation-bar/wx.hideHomeButton.html)\n         *\n         * 隐藏返回首页按钮。微信7.0.7版本起，当用户打开的小程序最底层页面是非首页时，默认展示“返回首页”按钮，开发者可在页面 onShow 中调用 hideHomeButton 进行隐藏。\n         *\n         * 最低基础库： `2.8.3` */",
        "detail": "function",
        "kind": 9
    },
    "hideKeyboard": {
        "prefix": "hideKeyboard",
        "body": [
            "wx.hideKeyboard({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.hideKeyboard(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/keyboard/wx.hideKeyboard.html)\n*\n* 在input、textarea等focus拉起键盘之后，手动调用此接口收起键盘\n*\n* **示例代码**\n*\n*\n* ```js\nwx.hideKeyboard({\n  complete: res => {\n    console.log('hideKeyboard res', res)\n  }\n})\n```\n*\n* 最低基础库： `2.8.2` */",
        "detail": "function",
        "kind": 9
    },
    "hideLoading": {
        "prefix": "hideLoading",
        "body": [
            "wx.hideLoading({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.hideLoading(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.hideLoading.html)\n         *\n         * 隐藏 loading 提示框\n         *\n         * 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "hideNavigationBarLoading": {
        "prefix": "hideNavigationBarLoading",
        "body": [
            "wx.hideNavigationBarLoading({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.hideNavigationBarLoading(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/navigation-bar/wx.hideNavigationBarLoading.html)\n         *\n         * 在当前页面隐藏导航条加载动画 */",
        "detail": "function",
        "kind": 9
    },
    "hideShareMenu": {
        "prefix": "hideShareMenu",
        "body": [
            "wx.hideShareMenu({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.hideShareMenu(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/share/wx.hideShareMenu.html)\n*\n* 隐藏转发按钮\n*\n* **示例代码**\n*\n*\n* ```js\nwx.hideShareMenu()\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "hideTabBar": {
        "prefix": "hideTabBar",
        "body": [
            "wx.hideTabBar({",
            "  animation: ${1:true},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.hideTabBar(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.hideTabBar.html)\n         *\n         * 隐藏 tabBar\n         *\n         * 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "hideTabBarRedDot": {
        "prefix": "hideTabBarRedDot",
        "body": [
            "wx.hideTabBarRedDot({",
            "  index: ${1:0},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.hideTabBarRedDot(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.hideTabBarRedDot.html)\n         *\n         * 隐藏 tabBar 某一项的右上角的红点\n         *\n         * 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "hideToast": {
        "prefix": "hideToast",
        "body": [
            "wx.hideToast({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.hideToast(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.hideToast.html)\n         *\n         * 隐藏消息提示框 */",
        "detail": "function",
        "kind": 9
    },
    "loadFontFace": {
        "prefix": "loadFontFace",
        "body": [
            "wx.loadFontFace({",
            "  family: '${1:family}',",
            "  source: '${2:source}',",
            "  complete: (result) => {$3},",
            "  desc: {",
            "    style: '${4:style}',",
            "    variant: '${5:variant}',",
            "    weight: '${6:weight}',",
            "  },",
            "  fail: (result) => {$8},",
            "  success: (result) => {$9},",
            "})"
        ],
        "description": "/** [wx.loadFontFace(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/font/wx.loadFontFace.html)\n*\n* 动态加载网络字体。文件地址需为下载类型。iOS 仅支持 https 格式文件地址。\n*\n* 注意：\n* 1. 字体文件返回的 contet-type 参考 [font](https://www.iana.org/assignments/media-types/media-types.xhtml#font)，格式不正确时会解析失败。\n* 2. 字体链接必须是https（ios不支持http)\n* 3. 字体链接必须是同源下的，或开启了cors支持，小程序的域名是`servicewechat.com`\n* 4. canvas等原生组件不支持使用接口添加的字体\n* 5. 工具里提示 Faild to load font可以忽略\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/b6Zrajm67R2x)\n* ```js\nwx.loadFontFace({\n  family: 'Bitstream Vera Serif Bold',\n  source: 'url(\"https://sungd.github.io/Pacifico.ttf\")',\n  success: console.log\n})\n```\n*\n* 最低基础库： `2.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "login": {
        "prefix": "login",
        "body": [
            "wx.login({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "  timeout: ${4:0},",
            "})"
        ],
        "description": "/** [wx.login(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html)\n*\n* 调用接口获取登录凭证（code）。通过凭证进而换取用户登录态信息，包括用户的唯一标识（openid）及本次登录的会话密钥（session_key）等。用户数据的加解密通讯需要依赖会话密钥完成。更多使用方法详见 [小程序登录](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html)。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.login({\n  success (res) {\n    if (res.code) {\n      //发起网络请求\n      wx.request({\n        url: 'https://test.com/onLogin',\n        data: {\n          code: res.code\n        }\n      })\n    } else {\n      console.log('登录失败！' + res.errMsg)\n    }\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "makePhoneCall": {
        "prefix": "makePhoneCall",
        "body": [
            "wx.makePhoneCall({",
            "  phoneNumber: '${1:phoneNumber}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.makePhoneCall(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/phone/wx.makePhoneCall.html)\n*\n* 拨打电话\n*\n* **示例代码**\n*\n*\n* ```js\nwx.makePhoneCall({\n  phoneNumber: '1340000' //仅为示例，并非真实的电话号码\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "navigateBack": {
        "prefix": "navigateBack",
        "body": [
            "wx.navigateBack({",
            "  complete: (res) => {$1},",
            "  delta: ${2:0},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.navigateBack(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateBack.html)\n         *\n         * 关闭当前页面，返回上一页面或多级页面。可通过 [getCurrentPages](https://developers.weixin.qq.com/miniprogram/dev/reference/api/getCurrentPages.html) 获取当前的页面栈，决定需要返回几层。 */",
        "detail": "function",
        "kind": 9
    },
    "navigateBackMiniProgram": {
        "prefix": "navigateBackMiniProgram",
        "body": [
            "wx.navigateBackMiniProgram({",
            "  complete: (res) => {$1},",
            "  extraData: ${2:extraData},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.navigateBackMiniProgram(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/miniprogram-navigate/wx.navigateBackMiniProgram.html)\n*\n* 返回到上一个小程序。只有在当前小程序是被其他小程序打开时可以调用成功\n*\n* 注意：**微信客户端 iOS 6.5.9，Android 6.5.10 及以上版本支持**\n*\n* **示例代码**\n*\n*\n* ```js\nwx.navigateBackMiniProgram({\n  extraData: {\n  foo: 'bar'\n},\nsuccess(res) {\n  // 返回成功\n}\n})\n```\n*\n* 最低基础库： `1.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "navigateTo": {
        "prefix": "navigateTo",
        "body": [
            "wx.navigateTo({",
            "  url: '${1:url}',",
            "  complete: (res) => {$2},",
            "  events: ${3:events},",
            "  fail: (res) => {$4},",
            "  success: (result) => {$5},",
            "})"
        ],
        "description": "/** [wx.navigateTo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateTo.html)\n*\n* 保留当前页面，跳转到应用内的某个页面。但是不能跳到 tabbar 页面。使用 [wx.navigateBack](https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateBack.html) 可以返回到原页面。小程序中页面栈最多十层。\n*\n* **示例代码**\n*\n*\n*\n* ```js\nwx.navigateTo({\n  url: 'test?id=1',\n  events: {\n    // 为指定事件添加一个监听器，获取被打开页面传送到当前页面的数据\n    acceptDataFromOpenedPage: function(data) {\n      console.log(data)\n    },\n    someEvent: function(data) {\n      console.log(data)\n    }\n    ...\n  },\n  success: function(res) {\n    // 通过eventChannel向被打开页面传送数据\n    res.eventChannel.emit('acceptDataFromOpenerPage', { data: 'test' })\n  }\n})\n```\n*\n* ```javascript\n//test.js\nPage({\n  onLoad: function(option){\n    console.log(option.query)\n    const eventChannel = this.getOpenerEventChannel()\n    eventChannel.emit('acceptDataFromOpenedPage', {data: 'test'});\n    eventChannel.emit('someEvent', {data: 'test'});\n    // 监听acceptDataFromOpenerPage事件，获取上一页面通过eventChannel传送到当前页面的数据\n    eventChannel.on('acceptDataFromOpenerPage', function(data) {\n      console.log(data)\n    })\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "navigateToMiniProgram": {
        "prefix": "navigateToMiniProgram",
        "body": [
            "wx.navigateToMiniProgram({",
            "  appId: '${1:appId}',",
            "  complete: (res) => {$2},",
            "  envVersion: ${3:envVersion},",
            "  extraData: ${4:extraData},",
            "  fail: (res) => {$5},",
            "  path: '${6:path}',",
            "  success: (res) => {$7},",
            "})"
        ],
        "description": "/** [wx.navigateToMiniProgram(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/miniprogram-navigate/wx.navigateToMiniProgram.html)\n*\n* 打开另一个小程序\n*\n* **使用限制**\n*\n*\n* ##### 需要用户触发跳转\n* 从 2.3.0 版本开始，若用户未点击小程序页面任意位置，则开发者将无法调用此接口自动跳转至其他小程序。\n* ##### 需要用户确认跳转\n* 从 2.3.0 版本开始，在跳转至其他小程序前，将统一增加弹窗，询问是否跳转，用户确认后才可以跳转其他小程序。如果用户点击取消，则回调 `fail cancel`。\n* ##### 每个小程序可跳转的其他小程序数量限制为不超过 10 个\n* 从 2.4.0 版本以及指定日期（具体待定）开始，开发者提交新版小程序代码时，如使用了跳转其他小程序功能，则需要在代码配置中声明将要跳转的小程序名单，限定不超过 10 个，否则将无法通过审核。该名单可在发布新版时更新，不支持动态修改。配置方法详见 [小程序全局配置](https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html)。调用此接口时，所跳转的 appId 必须在配置列表中，否则回调 `fail appId \"${appId}\" is not in navigateToMiniProgramAppIdList`。\n*\n* **关于调试**\n*\n*\n* - 在开发者工具上调用此 API 并不会真实的跳转到另外的小程序，但是开发者工具会校验本次调用跳转是否成功。[详情](https://developers.weixin.qq.com/miniprogram/dev/devtools/different.html#跳转小程序调试支持)\n* - 开发者工具上支持被跳转的小程序处理接收参数的调试。[详情](https://developers.weixin.qq.com/miniprogram/dev/devtools/different.html#跳转小程序调试支持)\n*\n* **示例代码**\n*\n*\n* ```js\nwx.navigateToMiniProgram({\n  appId: '',\n  path: 'page/index/index?id=123',\n  extraData: {\n    foo: 'bar'\n  },\n  envVersion: 'develop',\n  success(res) {\n    // 打开成功\n  }\n})\n```\n*\n* 最低基础库： `1.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "nextTick": {
        "prefix": "nextTick",
        "body": [
            "wx.nextTick(${1:callback})"
        ],
        "description": "/** [wx.nextTick(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/custom-component/wx.nextTick.html)\n*\n* 延迟一部分操作到下一个时间片再执行。（类似于 setTimeout）\n*\n* **说明**\n*\n*\n*\n* 因为自定义组件中的 setData 和 triggerEvent 等接口本身是同步的操作，当这几个接口被连续调用时，都是在一个同步流程中执行完的，因此若逻辑不当可能会导致出错。\n*\n* 一个极端的案例：当父组件的 setData 引发了子组件的 triggerEvent，进而使得父组件又进行了一次 setData，期间有通过 wx:if 语句对子组件进行卸载，就有可能引发奇怪的错误，所以对于不需要在一个同步流程内完成的逻辑，可以使用此接口延迟到下一个时间片再执行。\n*\n* **示例代码**\n*\n*\n* ```js\nComponent({\n  doSth() {\n    this.setData({ number: 1 }) // 直接在当前同步流程中执行\n\n    wx.nextTick(() => {\n      this.setData({ number: 3 }) // 在当前同步流程结束后，下一个时间片执行\n    })\n\n    this.setData({ number: 2 }) // 直接在当前同步流程中执行\n  }\n})\n```\n*\n* 最低基础库： `2.2.3` */",
        "detail": "function",
        "kind": 9
    },
    "notifyBLECharacteristicValueChange": {
        "prefix": "notifyBLECharacteristicValueChange",
        "body": [
            "wx.notifyBLECharacteristicValueChange({",
            "  characteristicId: '${1:characteristicId}',",
            "  deviceId: '${2:deviceId}',",
            "  serviceId: '${3:serviceId}',",
            "  state: ${4:true},",
            "  complete: (res) => {$5},",
            "  fail: (res) => {$6},",
            "  success: (res) => {$7},",
            "})"
        ],
        "description": "/** [wx.notifyBLECharacteristicValueChange(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.notifyBLECharacteristicValueChange.html)\n*\n* 启用低功耗蓝牙设备特征值变化时的 notify 功能，订阅特征值。注意：必须设备的特征值支持 notify 或者 indicate 才可以成功调用。\n*\n* 另外，必须先启用 `notifyBLECharacteristicValueChange` 才能监听到设备 `characteristicValueChange` 事件\n*\n* **注意**\n*\n*\n* - 订阅操作成功后需要设备主动更新特征值的 value，才会触发 [wx.onBLECharacteristicValueChange](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.onBLECharacteristicValueChange.html) 回调。\n* - 安卓平台上，在调用 `notifyBLECharacteristicValueChange` 成功后立即调用 `writeBLECharacteristicValue` 接口，在部分机型上会发生 10008 系统错误\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.notifyBLECharacteristicValueChange({\n  state: true, // 启用 notify 功能\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId,\n  // 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取\n  characteristicId,\n  success (res) {\n    console.log('notifyBLECharacteristicValueChange success', res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "offAccelerometerChange": {
        "prefix": "offAccelerometerChange",
        "body": [
            "wx.offAccelerometerChange(${1:callback})"
        ],
        "description": "/** [wx.offAccelerometerChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/accelerometer/wx.offAccelerometerChange.html)\n         *\n         * 取消监听加速度数据事件，参数为空，则取消所有的事件监听。\n         *\n         * 最低基础库： `2.9.3` */",
        "detail": "function",
        "kind": 9
    },
    "offAppHide": {
        "prefix": "offAppHide",
        "body": [
            "wx.offAppHide((res) => {$1})"
        ],
        "description": "/** [wx.offAppHide(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.offAppHide.html)\n         *\n         * 取消监听小程序切后台事件\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "offAppShow": {
        "prefix": "offAppShow",
        "body": [
            "wx.offAppShow((res) => {$1})"
        ],
        "description": "/** [wx.offAppShow(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.offAppShow.html)\n         *\n         * 取消监听小程序切前台事件\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "offAudioInterruptionBegin": {
        "prefix": "offAudioInterruptionBegin",
        "body": [
            "wx.offAudioInterruptionBegin((res) => {$1})"
        ],
        "description": "/** [wx.offAudioInterruptionBegin(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.offAudioInterruptionBegin.html)\n         *\n         * 取消监听音频因为受到系统占用而被中断开始事件\n         *\n         * 最低基础库： `2.6.2` */",
        "detail": "function",
        "kind": 9
    },
    "offAudioInterruptionEnd": {
        "prefix": "offAudioInterruptionEnd",
        "body": [
            "wx.offAudioInterruptionEnd((res) => {$1})"
        ],
        "description": "/** [wx.offAudioInterruptionEnd(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.offAudioInterruptionEnd.html)\n         *\n         * 取消监听音频中断结束事件\n         *\n         * 最低基础库： `2.6.2` */",
        "detail": "function",
        "kind": 9
    },
    "offBLECharacteristicValueChange": {
        "prefix": "offBLECharacteristicValueChange",
        "body": [
            "wx.offBLECharacteristicValueChange(${1:callback})"
        ],
        "description": "/** [wx.offBLECharacteristicValueChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.offBLECharacteristicValueChange.html)\n         *\n         * 取消监听低功耗蓝牙设备的特征值变化事件。\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "offBLEConnectionStateChange": {
        "prefix": "offBLEConnectionStateChange",
        "body": [
            "wx.offBLEConnectionStateChange(${1:callback})"
        ],
        "description": "/** [wx.offBLEConnectionStateChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.offBLEConnectionStateChange.html)\n         *\n         * 取消监听低功耗蓝牙连接状态的改变事件\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "offBeaconServiceChange": {
        "prefix": "offBeaconServiceChange",
        "body": [
            "wx.offBeaconServiceChange((res) => {$1})"
        ],
        "description": "/** [wx.offBeaconServiceChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/ibeacon/wx.offBeaconServiceChange.html)\n         *\n         * 取消监听 iBeacon 服务状态变化事件\n         *\n         * 最低基础库： `2.8.1` */",
        "detail": "function",
        "kind": 9
    },
    "offBeaconUpdate": {
        "prefix": "offBeaconUpdate",
        "body": [
            "wx.offBeaconUpdate((res) => {$1})"
        ],
        "description": "/** [wx.offBeaconUpdate(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/ibeacon/wx.offBeaconUpdate.html)\n         *\n         * 取消监听 iBeacon 设备更新事件\n         *\n         * 最低基础库： `2.8.1` */",
        "detail": "function",
        "kind": 9
    },
    "offBluetoothAdapterStateChange": {
        "prefix": "offBluetoothAdapterStateChange",
        "body": [
            "wx.offBluetoothAdapterStateChange(${1:callback})"
        ],
        "description": "/** [wx.offBluetoothAdapterStateChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.offBluetoothAdapterStateChange.html)\n         *\n         * 取消监听蓝牙适配器状态变化事件。\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "offBluetoothDeviceFound": {
        "prefix": "offBluetoothDeviceFound",
        "body": [
            "wx.offBluetoothDeviceFound(${1:callback})"
        ],
        "description": "/** [wx.offBluetoothDeviceFound(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.offBluetoothDeviceFound.html)\n         *\n         * 取消监听寻找到新设备的事件。\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "offCompassChange": {
        "prefix": "offCompassChange",
        "body": [
            "wx.offCompassChange(${1:callback})"
        ],
        "description": "/** [wx.offCompassChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/compass/wx.offCompassChange.html)\n         *\n         * 取消监听罗盘数据变化事件，参数为空，则取消所有的事件监听。\n         *\n         * 最低基础库： `2.9.3` */",
        "detail": "function",
        "kind": 9
    },
    "offDeviceMotionChange": {
        "prefix": "offDeviceMotionChange",
        "body": [
            "wx.offDeviceMotionChange(${1:callback})"
        ],
        "description": "/** [wx.offDeviceMotionChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/motion/wx.offDeviceMotionChange.html)\n         *\n         * 取消监听设备方向变化事件，参数为空，则取消所有的事件监听。\n         *\n         * 最低基础库： `2.9.3` */",
        "detail": "function",
        "kind": 9
    },
    "offError": {
        "prefix": "offError",
        "body": [
            "wx.offError(${1:callback})"
        ],
        "description": "/** [wx.offError(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.offError.html)\n         *\n         * 取消监听小程序错误事件。\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "offGetWifiList": {
        "prefix": "offGetWifiList",
        "body": [
            "wx.offGetWifiList(${1:callback})"
        ],
        "description": "/** [wx.offGetWifiList(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.offGetWifiList.html)\n         *\n         * 取消监听获取到 Wi-Fi 列表数据事件。\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "offGyroscopeChange": {
        "prefix": "offGyroscopeChange",
        "body": [
            "wx.offGyroscopeChange(${1:callback})"
        ],
        "description": "/** [wx.offGyroscopeChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/gyroscope/wx.offGyroscopeChange.html)\n         *\n         * 取消监听陀螺仪数据变化事件。\n         *\n         * 最低基础库： `2.9.3` */",
        "detail": "function",
        "kind": 9
    },
    "offHCEMessage": {
        "prefix": "offHCEMessage",
        "body": [
            "wx.offHCEMessage(${1:callback})"
        ],
        "description": "/** [wx.offHCEMessage(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/nfc/wx.offHCEMessage.html)\n         *\n         * 接收 NFC 设备消息事件，取消事件监听。\n         *\n         * 最低基础库： `2.8.1` */",
        "detail": "function",
        "kind": 9
    },
    "offKeyboardHeightChange": {
        "prefix": "offKeyboardHeightChange",
        "body": [
            "wx.offKeyboardHeightChange(${1:callback})"
        ],
        "description": "/** [wx.offKeyboardHeightChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/aapi/ui/keyboard/wx.offKeyboardHeightChange.html)\n         *\n         * 取消监听键盘高度变化事件\n         *\n         * 最低基础库： `2.9.2` */",
        "detail": "function",
        "kind": 9
    },
    "offLocalServiceDiscoveryStop": {
        "prefix": "offLocalServiceDiscoveryStop",
        "body": [
            "wx.offLocalServiceDiscoveryStop((res) => {$1})"
        ],
        "description": "/** [wx.offLocalServiceDiscoveryStop(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.offLocalServiceDiscoveryStop.html)\n         *\n         * 取消监听 mDNS 服务停止搜索的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "offLocalServiceFound": {
        "prefix": "offLocalServiceFound",
        "body": [
            "wx.offLocalServiceFound((res) => {$1})"
        ],
        "description": "/** [wx.offLocalServiceFound(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.offLocalServiceFound.html)\n         *\n         * 取消监听 mDNS 服务发现的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "offLocalServiceLost": {
        "prefix": "offLocalServiceLost",
        "body": [
            "wx.offLocalServiceLost((res) => {$1})"
        ],
        "description": "/** [wx.offLocalServiceLost(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.offLocalServiceLost.html)\n         *\n         * 取消监听 mDNS 服务离开的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "offLocalServiceResolveFail": {
        "prefix": "offLocalServiceResolveFail",
        "body": [
            "wx.offLocalServiceResolveFail((res) => {$1})"
        ],
        "description": "/** [wx.offLocalServiceResolveFail(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.offLocalServiceResolveFail.html)\n         *\n         * 取消监听 mDNS 服务解析失败的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "offLocationChange": {
        "prefix": "offLocationChange",
        "body": [
            "wx.offLocationChange((res) => {$1})"
        ],
        "description": "/** [wx.offLocationChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.offLocationChange.html)\n         *\n         * 取消监听实时地理位置变化事件\n         *\n         * 最低基础库： `2.8.1` */",
        "detail": "function",
        "kind": 9
    },
    "offMemoryWarning": {
        "prefix": "offMemoryWarning",
        "body": [
            "wx.offMemoryWarning(${1:callback})"
        ],
        "description": "/** [wx.offMemoryWarning(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/performance/wx.offMemoryWarning.html)\n         *\n         * 取消监听内存不足告警事件。\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "offNetworkStatusChange": {
        "prefix": "offNetworkStatusChange",
        "body": [
            "wx.offNetworkStatusChange(${1:callback})"
        ],
        "description": "/** [wx.offNetworkStatusChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/network/wx.offNetworkStatusChange.html)\n         *\n         * 取消监听网络状态变化事件，参数为空，则取消所有的事件监听。\n         *\n         * 最低基础库： `2.9.3` */",
        "detail": "function",
        "kind": 9
    },
    "offPageNotFound": {
        "prefix": "offPageNotFound",
        "body": [
            "wx.offPageNotFound((res) => {$1})"
        ],
        "description": "/** [wx.offPageNotFound(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.offPageNotFound.html)\n         *\n         * 取消监听小程序要打开的页面不存在事件\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "offUserCaptureScreen": {
        "prefix": "offUserCaptureScreen",
        "body": [
            "wx.offUserCaptureScreen(${1:callback})"
        ],
        "description": "/** [wx.offUserCaptureScreen(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/screen/wx.offUserCaptureScreen.html)\n         *\n         * 用户主动截屏事件。取消事件监听。\n         *\n         * 最低基础库： `2.9.3` */",
        "detail": "function",
        "kind": 9
    },
    "offWifiConnected": {
        "prefix": "offWifiConnected",
        "body": [
            "wx.offWifiConnected(${1:callback})"
        ],
        "description": "/** [wx.offWifiConnected(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.offWifiConnected.html)\n         *\n         * 取消监听连接上 Wi-Fi 的事件。\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "offWindowResize": {
        "prefix": "offWindowResize",
        "body": [
            "wx.offWindowResize((res) => {$1})"
        ],
        "description": "/** [wx.offWindowResize(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/window/wx.offWindowResize.html)\n         *\n         * 取消监听窗口尺寸变化事件\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "onAccelerometerChange": {
        "prefix": "onAccelerometerChange",
        "body": [
            "wx.onAccelerometerChange((result) => {$1})"
        ],
        "description": "/** [wx.onAccelerometerChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/accelerometer/wx.onAccelerometerChange.html)\n*\n* 监听加速度数据事件。频率根据 [wx.startAccelerometer()](https://developers.weixin.qq.com/miniprogram/dev/api/device/accelerometer/wx.startAccelerometer.html) 的 interval 参数, 接口调用后会自动开始监听。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.onAccelerometerChange(callback)\n``` */",
        "detail": "function",
        "kind": 9
    },
    "onAppHide": {
        "prefix": "onAppHide",
        "body": [
            "wx.onAppHide((res) => {$1})"
        ],
        "description": "/** [wx.onAppHide(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onAppHide.html)\n         *\n         * 监听小程序切后台事件。该事件与 [`App.onHide`](https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onhide) 的回调时机一致。\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "onAppShow": {
        "prefix": "onAppShow",
        "body": [
            "wx.onAppShow((result) => {$1})"
        ],
        "description": "/** [wx.onAppShow(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onAppShow.html)\n         *\n         * 监听小程序切前台事件。该事件与 [`App.onShow`](https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onshowobject-object) 的回调参数一致。\n         *\n         * **返回有效 referrerInfo 的场景**\n         *\n         *\n         * | 场景值 | 场景                            | appId含义  |\n         * | ------ | ------------------------------- | ---------- |\n         * | 1020   | 公众号 profile 页相关小程序列表 | 来源公众号 |\n         * | 1035   | 公众号自定义菜单                | 来源公众号 |\n         * | 1036   | App 分享消息卡片                | 来源App    |\n         * | 1037   | 小程序打开小程序                | 来源小程序 |\n         * | 1038   | 从另一个小程序返回              | 来源小程序 |\n         * | 1043   | 公众号模板消息                  | 来源公众号 |\n         *\n         * **注意**\n         *\n         *\n         * 部分版本在无`referrerInfo`的时候会返回 `undefined`，建议使用 `options.referrerInfo && options.referrerInfo.appId` 进行判断。\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "onAudioInterruptionBegin": {
        "prefix": "onAudioInterruptionBegin",
        "body": [
            "wx.onAudioInterruptionBegin((res) => {$1})"
        ],
        "description": "/** [wx.onAudioInterruptionBegin(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onAudioInterruptionBegin.html)\n         *\n         * 监听音频因为受到系统占用而被中断开始事件。以下场景会触发此事件：闹钟、电话、FaceTime 通话、微信语音聊天、微信视频聊天。此事件触发后，小程序内所有音频会暂停。\n         *\n         * 最低基础库： `2.6.2` */",
        "detail": "function",
        "kind": 9
    },
    "onAudioInterruptionEnd": {
        "prefix": "onAudioInterruptionEnd",
        "body": [
            "wx.onAudioInterruptionEnd((res) => {$1})"
        ],
        "description": "/** [wx.onAudioInterruptionEnd(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onAudioInterruptionEnd.html)\n         *\n         * 监听音频中断结束事件。在收到 onAudioInterruptionBegin 事件之后，小程序内所有音频会暂停，收到此事件之后才可再次播放成功\n         *\n         * 最低基础库： `2.6.2` */",
        "detail": "function",
        "kind": 9
    },
    "onBLECharacteristicValueChange": {
        "prefix": "onBLECharacteristicValueChange",
        "body": [
            "wx.onBLECharacteristicValueChange((result) => {$1})"
        ],
        "description": "/** [wx.onBLECharacteristicValueChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.onBLECharacteristicValueChange.html)\n*\n* 监听低功耗蓝牙设备的特征值变化事件。必须先启用 `notifyBLECharacteristicValueChange` 接口才能接收到设备推送的 notification。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n*\n* ```js\n// ArrayBuffer转16进制字符串示例\nfunction ab2hex(buffer) {\n  let hexArr = Array.prototype.map.call(\n    new Uint8Array(buffer),\n    function(bit) {\n      return ('00' + bit.toString(16)).slice(-2)\n    }\n  )\n  return hexArr.join('');\n}\nwx.onBLECharacteristicValueChange(function(res) {\n  console.log(`characteristic ${res.characteristicId} has changed, now is ${res.value}`)\n  console.log(ab2hex(res.value))\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "onBLEConnectionStateChange": {
        "prefix": "onBLEConnectionStateChange",
        "body": [
            "wx.onBLEConnectionStateChange((result) => {$1})"
        ],
        "description": "/** [wx.onBLEConnectionStateChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.onBLEConnectionStateChange.html)\n*\n* 监听低功耗蓝牙连接状态的改变事件。包括开发者主动连接或断开连接，设备丢失，连接异常断开等等\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.onBLEConnectionStateChange(function(res) {\n  // 该方法回调中可以用于处理连接意外断开等异常情况\n  console.log(`device ${res.deviceId} state has changed, connected: ${res.connected}`)\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "onBackgroundAudioPause": {
        "prefix": "onBackgroundAudioPause",
        "body": [
            "wx.onBackgroundAudioPause((res) => {$1})"
        ],
        "description": "/** [wx.onBackgroundAudioPause(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.onBackgroundAudioPause.html)\n         *\n         * 监听音乐暂停事件。 */",
        "detail": "function",
        "kind": 9
    },
    "onBackgroundAudioPlay": {
        "prefix": "onBackgroundAudioPlay",
        "body": [
            "wx.onBackgroundAudioPlay((res) => {$1})"
        ],
        "description": "/** [wx.onBackgroundAudioPlay(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.onBackgroundAudioPlay.html)\n         *\n         * 监听音乐播放事件。 */",
        "detail": "function",
        "kind": 9
    },
    "onBackgroundAudioStop": {
        "prefix": "onBackgroundAudioStop",
        "body": [
            "wx.onBackgroundAudioStop((res) => {$1})"
        ],
        "description": "/** [wx.onBackgroundAudioStop(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.onBackgroundAudioStop.html)\n         *\n         * 监听音乐停止事件。 */",
        "detail": "function",
        "kind": 9
    },
    "onBackgroundFetchData": {
        "prefix": "onBackgroundFetchData",
        "body": [
            "wx.onBackgroundFetchData({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.onBackgroundFetchData(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/background-fetch/wx.onBackgroundFetchData.html)\n         *\n         * 收到 backgroundFetch 数据时的回调\n         *\n         * 最低基础库： `2.8.0` */",
        "detail": "function",
        "kind": 9
    },
    "onBeaconServiceChange": {
        "prefix": "onBeaconServiceChange",
        "body": [
            "wx.onBeaconServiceChange((result) => {$1})"
        ],
        "description": "/** [wx.onBeaconServiceChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/ibeacon/wx.onBeaconServiceChange.html)\n         *\n         * 监听 iBeacon 服务状态变化事件，仅能注册一个监听\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "onBeaconUpdate": {
        "prefix": "onBeaconUpdate",
        "body": [
            "wx.onBeaconUpdate((result) => {$1})"
        ],
        "description": "/** [wx.onBeaconUpdate(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/ibeacon/wx.onBeaconUpdate.html)\n         *\n         * 监听 iBeacon 设备更新事件，仅能注册一个监听\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "onBluetoothAdapterStateChange": {
        "prefix": "onBluetoothAdapterStateChange",
        "body": [
            "wx.onBluetoothAdapterStateChange((result) => {$1})"
        ],
        "description": "/** [wx.onBluetoothAdapterStateChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.onBluetoothAdapterStateChange.html)\n*\n* 监听蓝牙适配器状态变化事件\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.onBluetoothAdapterStateChange(function (res) {\n  console.log('adapterState changed, now is', res)\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "onBluetoothDeviceFound": {
        "prefix": "onBluetoothDeviceFound",
        "body": [
            "wx.onBluetoothDeviceFound((result) => {$1})"
        ],
        "description": "/** [wx.onBluetoothDeviceFound(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.onBluetoothDeviceFound.html)\n*\n* 监听寻找到新设备的事件\n*\n* **注意**\n*\n*\n* - 若在 [wx.onBluetoothDeviceFound](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.onBluetoothDeviceFound.html) 回调了某个设备，则此设备会添加到 [wx.getBluetoothDevices](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.getBluetoothDevices.html) 接口获取到的数组中。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n*\n* ```js\n// ArrayBuffer转16进度字符串示例\nfunction ab2hex(buffer) {\n  var hexArr = Array.prototype.map.call(\n    new Uint8Array(buffer),\n    function(bit) {\n      return ('00' + bit.toString(16)).slice(-2)\n    }\n  )\n  return hexArr.join('');\n}\nwx.onBluetoothDeviceFound(function(res) {\n  var devices = res.devices;\n  console.log('new device list has founded')\n  console.dir(devices)\n  console.log(ab2hex(devices[0].advertisData))\n})\n```\n*\n* **注意**\n*\n*\n* - 安卓下部分机型需要有位置权限才能搜索到设备，需留意是否开启了位置权限\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "onCompassChange": {
        "prefix": "onCompassChange",
        "body": [
            "wx.onCompassChange((result) => {$1})"
        ],
        "description": "/** [wx.onCompassChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/compass/wx.onCompassChange.html)\n         *\n         * 监听罗盘数据变化事件。频率：5 次/秒，接口调用后会自动开始监听，可使用 wx.stopCompass 停止监听。\n         *\n         * **accuracy 在 iOS/Android 的差异**\n         *\n         *\n         * 由于平台差异，accuracy 在 iOS/Android 的值不同。\n         *\n         * - iOS：accuracy 是一个 number 类型的值，表示相对于磁北极的偏差。0 表示设备指向磁北，90 表示指向东，180 表示指向南，依此类推。\n         * - Android：accuracy 是一个 string 类型的枚举值。\n         *\n         * | 值              | 说明                                                                                   |\n         * | --------------- | -------------------------------------------------------------------------------------- |\n         * | high            | 高精度                                                                                 |\n         * | medium          | 中等精度                                                                               |\n         * | low             | 低精度                                                                                 |\n         * | no-contact      | 不可信，传感器失去连接                                                                 |\n         * | unreliable      | 不可信，原因未知                                                                       |\n         * | unknow ${value} | 未知的精度枚举值，即该 Android 系统此时返回的表示精度的 value 不是一个标准的精度枚举值 | */",
        "detail": "function",
        "kind": 9
    },
    "onDeviceMotionChange": {
        "prefix": "onDeviceMotionChange",
        "body": [
            "wx.onDeviceMotionChange((result) => {$1})"
        ],
        "description": "/** [wx.onDeviceMotionChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/motion/wx.onDeviceMotionChange.html)\n         *\n         * 监听设备方向变化事件。频率根据 [wx.startDeviceMotionListening()](https://developers.weixin.qq.com/miniprogram/dev/api/device/motion/wx.startDeviceMotionListening.html) 的 interval 参数。可以使用 [wx.stopDeviceMotionListening()](https://developers.weixin.qq.com/miniprogram/dev/api/device/motion/wx.stopDeviceMotionListening.html) 停止监听。\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "onError": {
        "prefix": "onError",
        "body": [
            "wx.onError((error) => {$1})"
        ],
        "description": "/** [wx.onError(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onError.html)\n         *\n         * 监听小程序错误事件。如脚本错误或 API 调用报错等。该事件与 [`App.onError`](https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onerrorstring-error) 的回调时机与参数一致。\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "onGetWifiList": {
        "prefix": "onGetWifiList",
        "body": [
            "wx.onGetWifiList((result) => {$1})"
        ],
        "description": "/** [wx.onGetWifiList(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.onGetWifiList.html)\n         *\n         * 监听获取到 Wi-Fi 列表数据事件\n         *\n         * 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "onGyroscopeChange": {
        "prefix": "onGyroscopeChange",
        "body": [
            "wx.onGyroscopeChange((result) => {$1})"
        ],
        "description": "/** [wx.onGyroscopeChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/gyroscope/wx.onGyroscopeChange.html)\n         *\n         * 监听陀螺仪数据变化事件。频率根据 [wx.startGyroscope()](https://developers.weixin.qq.com/miniprogram/dev/api/device/gyroscope/wx.startGyroscope.html) 的 interval 参数。可以使用 [wx.stopGyroscope()](https://developers.weixin.qq.com/miniprogram/dev/api/device/gyroscope/wx.stopGyroscope.html) 停止监听。\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "onHCEMessage": {
        "prefix": "onHCEMessage",
        "body": [
            "wx.onHCEMessage((result) => {$1})"
        ],
        "description": "/** [wx.onHCEMessage(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/nfc/wx.onHCEMessage.html)\n         *\n         * 监听接收 NFC 设备消息事件，仅能注册一个监听\n         *\n         * 最低基础库： `1.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "onKeyboardHeightChange": {
        "prefix": "onKeyboardHeightChange",
        "body": [
            "wx.onKeyboardHeightChange((result) => {$1})"
        ],
        "description": "/** [wx.onKeyboardHeightChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/keyboard/wx.onKeyboardHeightChange.html)\n*\n* 监听键盘高度变化\n*\n* **示例代码**\n*\n*\n* ```js\nwx.onKeyboardHeightChange(res => {\n  console.log(res.height)\n})\n```\n*\n* 最低基础库： `2.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "onLocalServiceDiscoveryStop": {
        "prefix": "onLocalServiceDiscoveryStop",
        "body": [
            "wx.onLocalServiceDiscoveryStop((res) => {$1})"
        ],
        "description": "/** [wx.onLocalServiceDiscoveryStop(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.onLocalServiceDiscoveryStop.html)\n         *\n         * 监听 mDNS 服务停止搜索的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "onLocalServiceFound": {
        "prefix": "onLocalServiceFound",
        "body": [
            "wx.onLocalServiceFound((result) => {$1})"
        ],
        "description": "/** [wx.onLocalServiceFound(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.onLocalServiceFound.html)\n         *\n         * 监听 mDNS 服务发现的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "onLocalServiceLost": {
        "prefix": "onLocalServiceLost",
        "body": [
            "wx.onLocalServiceLost((result) => {$1})"
        ],
        "description": "/** [wx.onLocalServiceLost(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.onLocalServiceLost.html)\n         *\n         * 监听 mDNS 服务离开的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "onLocalServiceResolveFail": {
        "prefix": "onLocalServiceResolveFail",
        "body": [
            "wx.onLocalServiceResolveFail((result) => {$1})"
        ],
        "description": "/** [wx.onLocalServiceResolveFail(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.onLocalServiceResolveFail.html)\n         *\n         * 监听 mDNS 服务解析失败的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "onLocationChange": {
        "prefix": "onLocationChange",
        "body": [
            "wx.onLocationChange((result) => {$1})"
        ],
        "description": "/** [wx.onLocationChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.onLocationChange.html)\n*\n* 监听实时地理位置变化事件，需结合 [wx.startLocationUpdateBackground](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.startLocationUpdateBackground.html)、[wx.startLocationUpdate](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.startLocationUpdate.html)使用。\n*\n* **示例代码**\n*\n*\n* ```js\n const _locationChangeFn = function(res) {\n  console.log('location change', res)\n }\n wx.onLocationChange(_locationChangeFn)\n wx.offLocationChange(_locationChangeFn)\n```\n*\n* 最低基础库： `2.8.1` */",
        "detail": "function",
        "kind": 9
    },
    "onMemoryWarning": {
        "prefix": "onMemoryWarning",
        "body": [
            "wx.onMemoryWarning((result) => {$1})"
        ],
        "description": "/** [wx.onMemoryWarning(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/performance/wx.onMemoryWarning.html)\n         *\n         * 监听内存不足告警事件。\n         *\n         * 当 iOS/Android 向小程序进程发出内存警告时，触发该事件。触发该事件不意味小程序被杀，大部分情况下仅仅是告警，开发者可在收到通知后回收一些不必要资源避免进一步加剧内存紧张。\n         *\n         * **示例代码**\n         *\n         *\n         * ```js\n         * wx.onMemoryWarning(function () {\n         *   console.log('onMemoryWarningReceive')\n         * })\n         * ``\n         *\n         * 最低基础库： `2.0.2` */",
        "detail": "function",
        "kind": 9
    },
    "onNetworkStatusChange": {
        "prefix": "onNetworkStatusChange",
        "body": [
            "wx.onNetworkStatusChange((result) => {$1})"
        ],
        "description": "/** [wx.onNetworkStatusChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/network/wx.onNetworkStatusChange.html)\n*\n* 监听网络状态变化事件\n*\n* **示例代码**\n*\n*\n* ```js\nwx.onNetworkStatusChange(function (res) {\n  console.log(res.isConnected)\n  console.log(res.networkType)\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "onPageNotFound": {
        "prefix": "onPageNotFound",
        "body": [
            "wx.onPageNotFound((result) => {$1})"
        ],
        "description": "/** [wx.onPageNotFound(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onPageNotFound.html)\n         *\n         * 监听小程序要打开的页面不存在事件。该事件与 [`App.onPageNotFound`](https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onpagenotfoundobject-object) 的回调时机一致。\n         *\n         * **注意**\n         *\n         *\n         * - 开发者可以在回调中进行页面重定向，但必须在回调中**同步**处理，异步处理（例如 `setTimeout` 异步执行）无效。\n         * - 若开发者没有调用 [wx.onPageNotFound](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onPageNotFound.html) 绑定监听，也没有声明 `App.onPageNotFound`，当跳转页面不存在时，将推入微信客户端原生的页面不存在提示页面。\n         * - 如果回调中又重定向到另一个不存在的页面，将推入微信客户端原生的页面不存在提示页面，并且不再第二次回调。\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "onSocketClose": {
        "prefix": "onSocketClose",
        "body": [
            "wx.onSocketClose((result) => {$1})"
        ],
        "description": "/** [wx.onSocketClose(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/wx.onSocketClose.html)\n         *\n         * 监听 WebSocket 连接关闭事件 */",
        "detail": "function",
        "kind": 9
    },
    "onSocketError": {
        "prefix": "onSocketError",
        "body": [
            "wx.onSocketError((result) => {$1})"
        ],
        "description": "/** [wx.onSocketError(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/wx.onSocketError.html)\n         *\n         * 监听 WebSocket 错误事件 */",
        "detail": "function",
        "kind": 9
    },
    "onSocketMessage": {
        "prefix": "onSocketMessage",
        "body": [
            "wx.onSocketMessage((result) => {$1})"
        ],
        "description": "/** [wx.onSocketMessage(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/wx.onSocketMessage.html)\n         *\n         * 监听 WebSocket 接受到服务器的消息事件 */",
        "detail": "function",
        "kind": 9
    },
    "onSocketOpen": {
        "prefix": "onSocketOpen",
        "body": [
            "wx.onSocketOpen((result) => {$1})"
        ],
        "description": "/** [wx.onSocketOpen(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/wx.onSocketOpen.html)\n         *\n         * 监听 WebSocket 连接打开事件 */",
        "detail": "function",
        "kind": 9
    },
    "onUserCaptureScreen": {
        "prefix": "onUserCaptureScreen",
        "body": [
            "wx.onUserCaptureScreen((res) => {$1})"
        ],
        "description": "/** [wx.onUserCaptureScreen(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/screen/wx.onUserCaptureScreen.html)\n*\n* 监听用户主动截屏事件。用户使用系统截屏按键截屏时触发，只能注册一个监听\n*\n* **示例代码**\n*\n*\n* ```js\nwx.onUserCaptureScreen(function (res) {\n  console.log('用户截屏了')\n})\n```\n*\n* 最低基础库： `1.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "onWifiConnected": {
        "prefix": "onWifiConnected",
        "body": [
            "wx.onWifiConnected((result) => {$1})"
        ],
        "description": "/** [wx.onWifiConnected(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.onWifiConnected.html)\n         *\n         * 监听连接上 Wi-Fi 的事件\n         *\n         * 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "onWindowResize": {
        "prefix": "onWindowResize",
        "body": [
            "wx.onWindowResize((result) => {$1})"
        ],
        "description": "/** [wx.onWindowResize(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/window/wx.onWindowResize.html)\n         *\n         * 监听窗口尺寸变化事件\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "openBluetoothAdapter": {
        "prefix": "openBluetoothAdapter",
        "body": [
            "wx.openBluetoothAdapter({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.openBluetoothAdapter(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.openBluetoothAdapter.html)\n*\n* 初始化蓝牙模块\n*\n* **object.fail 回调函数返回的 state 参数（仅 iOS）**\n*\n*\n* | 状态码 | 说明   |\n* | ------ | ------ |\n* | 0      | 未知   |\n* | 1      | 重置中 |\n* | 2      | 不支持 |\n* | 3      | 未授权 |\n* | 4      | 未开启 |\n*\n* **注意**\n*\n*\n* - 其他蓝牙相关 API 必须在 [wx.openBluetoothAdapter](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.openBluetoothAdapter.html) 调用之后使用。否则 API 会返回错误（errCode=10000）。\n* - 在用户蓝牙开关未开启或者手机不支持蓝牙功能的情况下，调用 [wx.openBluetoothAdapter](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.openBluetoothAdapter.html) 会返回错误（errCode=10001），表示手机蓝牙功能不可用。此时小程序蓝牙模块已经初始化完成，可通过 [wx.onBluetoothAdapterStateChange](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.onBluetoothAdapterStateChange.html) 监听手机蓝牙状态的改变，也可以调用蓝牙模块的所有API。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.openBluetoothAdapter({\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "openCard": {
        "prefix": "openCard",
        "body": [
            "wx.openCard({",
            "  cardList: [$1],",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.openCard(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/card/wx.openCard.html)\n*\n* 查看微信卡包中的卡券。只有通过 [认证](https://developers.weixin.qq.com/miniprogram/product/renzheng.html) 的小程序或文化互动类目的小游戏才能使用。更多文档请参考 [微信卡券接口文档](https://mp.weixin.qq.com/cgi-bin/announce?action=getannouncement&key=1490190158&version=1&lang=zh_CN&platform=2)。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.openCard({\n  cardList: [{\n    cardId: '',\n    code: ''\n  }, {\n    cardId: '',\n    code: ''\n  }],\n  success (res) { }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "openDocument": {
        "prefix": "openDocument",
        "body": [
            "wx.openDocument({",
            "  filePath: '${1:filePath}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  fileType: ${4:fileType},",
            "  success: (res) => {$5},",
            "})"
        ],
        "description": "/** [wx.openDocument(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.openDocument.html)\n         *\n         * 新开页面打开文档 */",
        "detail": "function",
        "kind": 9
    },
    "openLocation": {
        "prefix": "openLocation",
        "body": [
            "wx.openLocation({",
            "  latitude: ${1:0},",
            "  longitude: ${2:0},",
            "  address: '${3:address}',",
            "  complete: (res) => {$4},",
            "  fail: (res) => {$5},",
            "  name: '${6:name}',",
            "  scale: ${7:0},",
            "  success: (res) => {$8},",
            "})"
        ],
        "description": "/** [wx.openLocation(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.openLocation.html)\n*\n* 使用微信内置地图查看位置\n*\n* **示例代码**\n*\n*\n*  ```js\n wx.getLocation({\n  type: 'gcj02', //返回可以用于wx.openLocation的经纬度\n  success (res) {\n    const latitude = res.latitude\n    const longitude = res.longitude\n    wx.openLocation({\n      latitude,\n      longitude,\n      scale: 18\n    })\n  }\n})\n ``` */",
        "detail": "function",
        "kind": 9
    },
    "openSetting": {
        "prefix": "openSetting",
        "body": [
            "wx.openSetting({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.openSetting(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/setting/wx.openSetting.html)\n*\n* 调起客户端小程序设置界面，返回用户设置的操作结果。**设置界面只会出现小程序已经向用户请求过的[权限](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/authorize.html)**。\n*\n*\n* 注意：[2.3.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 版本开始，用户发生点击行为后，才可以跳转打开设置页，管理授权信息。[详情](https://developers.weixin.qq.com/community/develop/doc/000cea2305cc5047af5733de751008)\n*\n* **示例代码**\n*\n*\n* ```js\nwx.openSetting({\n  success (res) {\n    console.log(res.authSetting)\n    // res.authSetting = {\n    //   \"scope.userInfo\": true,\n    //   \"scope.userLocation\": true\n    // }\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "pageScrollTo": {
        "prefix": "pageScrollTo",
        "body": [
            "wx.pageScrollTo({",
            "  complete: (res) => {$1},",
            "  duration: ${2:0},",
            "  fail: (res) => {$3},",
            "  scrollTop: ${4:0},",
            "  selector: '${5:selector}',",
            "  success: (res) => {$6},",
            "})"
        ],
        "description": "/** [wx.pageScrollTo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/scroll/wx.pageScrollTo.html)\n*\n* 将页面滚动到目标位置，支持选择器和滚动距离两种方式定位\n*\n* **selector 语法**\n*\n*\n* selector类似于 CSS 的选择器，但仅支持下列语法。\n*\n* + ID选择器：#the-id\n* + class选择器（可以连续指定多个）：.a-class.another-class\n* + 子元素选择器：.the-parent > .the-child\n* + 后代选择器：.the-ancestor .the-descendant\n* + 跨自定义组件的后代选择器：.the-ancestor >>> .the-descendant\n* + 多选择器的并集：#a-node, .some-other-nodes\n*\n* **示例代码**\n*\n*\n* ```js\nwx.pageScrollTo({\n  scrollTop: 0,\n  duration: 300\n})\n```\n*\n* 最低基础库： `1.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "pauseBackgroundAudio": {
        "prefix": "pauseBackgroundAudio",
        "body": [
            "wx.pauseBackgroundAudio({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.pauseBackgroundAudio(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.pauseBackgroundAudio.html)\n*\n* 暂停播放音乐。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.pauseBackgroundAudio()\n``` */",
        "detail": "function",
        "kind": 9
    },
    "pauseVoice": {
        "prefix": "pauseVoice",
        "body": [
            "wx.pauseVoice({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.pauseVoice(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.pauseVoice.html)\n*\n* 暂停正在播放的语音。再次调用 [wx.playVoice](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.playVoice.html) 播放同一个文件时，会从暂停处开始播放。如果想从头开始播放，需要先调用 [wx.stopVoice](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.stopVoice.html)。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startRecord({\n  success (res) {\n    const tempFilePath = res.tempFilePath\n    wx.playVoice({\n      filePath: tempFilePath\n    })\n\n    setTimeout(() => { wx.pauseVoice() }, 5000)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "playBackgroundAudio": {
        "prefix": "playBackgroundAudio",
        "body": [
            "wx.playBackgroundAudio({",
            "  dataUrl: '${1:dataUrl}',",
            "  complete: (res) => {$2},",
            "  coverImgUrl: '${3:coverImgUrl}',",
            "  fail: (res) => {$4},",
            "  success: (res) => {$5},",
            "  title: '${6:title}',",
            "})"
        ],
        "description": "/** [wx.playBackgroundAudio(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.playBackgroundAudio.html)\n*\n* 使用后台播放器播放音乐。对于微信客户端来说，只能同时有一个后台音乐在播放。当用户离开小程序后，音乐将暂停播放；当用户在其他小程序占用了音乐播放器，原有小程序内的音乐将停止播放。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.playBackgroundAudio({\n  dataUrl: '',\n  title: '',\n  coverImgUrl: ''\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "playVoice": {
        "prefix": "playVoice",
        "body": [
            "wx.playVoice({",
            "  filePath: '${1:filePath}',",
            "  complete: (res) => {$2},",
            "  duration: ${3:0},",
            "  fail: (res) => {$4},",
            "  success: (res) => {$5},",
            "})"
        ],
        "description": "/** [wx.playVoice(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.playVoice.html)\n*\n* 开始播放语音。同时只允许一个语音文件正在播放，如果前一个语音文件还没播放完，将中断前一个语音播放。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startRecord({\n  success (res) {\n    const tempFilePath = res.tempFilePath\n    wx.playVoice({\n      filePath: tempFilePath,\n      complete () { }\n    })\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "previewImage": {
        "prefix": "previewImage",
        "body": [
            "wx.previewImage({",
            "  urls: [$1],",
            "  complete: (res) => {$2},",
            "  current: '${3:current}',",
            "  fail: (res) => {$4},",
            "  success: (res) => {$5},",
            "})"
        ],
        "description": "/** [wx.previewImage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.previewImage.html)\n*\n* 在新页面中全屏预览图片。预览的过程中用户可以进行保存图片、发送给朋友等操作。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.previewImage({\n  current: '', // 当前显示图片的http链接\n  urls: [] // 需要预览的图片http链接列表\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "reLaunch": {
        "prefix": "reLaunch",
        "body": [
            "wx.reLaunch({",
            "  url: '${1:url}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.reLaunch(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.reLaunch.html)\n*\n* 关闭所有页面，打开到应用内的某个页面\n*\n* **示例代码**\n*\n*\n* ```js\nwx.reLaunch({\n  url: 'test?id=1'\n})\n```\n*\n* ```html\n* // test\n* Page({\n*   onLoad (option) {\n*     console.log(option.query)\n*   }\n* })\n* ```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "readBLECharacteristicValue": {
        "prefix": "readBLECharacteristicValue",
        "body": [
            "wx.readBLECharacteristicValue({",
            "  characteristicId: '${1:characteristicId}',",
            "  deviceId: '${2:deviceId}',",
            "  serviceId: '${3:serviceId}',",
            "  complete: (res) => {$4},",
            "  fail: (res) => {$5},",
            "  success: (res) => {$6},",
            "})"
        ],
        "description": "/** [wx.readBLECharacteristicValue(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.readBLECharacteristicValue.html)\n*\n* 读取低功耗蓝牙设备的特征值的二进制数据值。注意：必须设备的特征值支持 read 才可以成功调用。\n*\n* **注意**\n*\n*\n* - 并行调用多次会存在读失败的可能性。\n* - 接口读取到的信息需要在 `onBLECharacteristicValueChange` 方法注册的回调中获取。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\n// 必须在这里的回调才能获取\nwx.onBLECharacteristicValueChange(function(characteristic) {\n  console.log('characteristic value comed:', characteristic)\n})\n\nwx.readBLECharacteristicValue({\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId,\n  // 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取\n  characteristicId,\n  success (res) {\n    console.log('readBLECharacteristicValue:', res.errCode)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "redirectTo": {
        "prefix": "redirectTo",
        "body": [
            "wx.redirectTo({",
            "  url: '${1:url}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.redirectTo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.redirectTo.html)\n*\n* 关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.redirectTo({\n  url: 'test?id=1'\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "removeSavedFile": {
        "prefix": "removeSavedFile",
        "body": [
            "wx.removeSavedFile({",
            "  filePath: '${1:filePath}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.removeSavedFile(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.removeSavedFile.html)\n*\n* 删除本地缓存文件\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getSavedFileList({\n success (res) {\n   if (res.fileList.length > 0){\n     wx.removeSavedFile({\n       filePath: res.fileList[0].filePath,\n       complete (res) {\n         console.log(res)\n       }\n     })\n   }\n }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "removeStorage": {
        "prefix": "removeStorage",
        "body": [
            "wx.removeStorage({",
            "  key: '${1:key}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.removeStorage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.removeStorage.html)\n*\n* 从本地缓存中移除指定 key\n*\n* **示例代码**\n*\n*\n* ```js\nwx.removeStorage({\n  key: 'key',\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* ```js\ntry {\n  wx.removeStorageSync('key')\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "removeStorageSync": {
        "prefix": "removeStorageSync",
        "body": [
            "wx.removeStorageSync('${1:key}')"
        ],
        "description": "/** [wx.removeStorageSync(string key)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.removeStorageSync.html)\n*\n* [wx.removeStorage](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.removeStorage.html) 的同步版本\n*\n* **示例代码**\n*\n*\n* ```js\nwx.removeStorage({\n  key: 'key',\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* ```js\ntry {\n  wx.removeStorageSync('key')\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "removeTabBarBadge": {
        "prefix": "removeTabBarBadge",
        "body": [
            "wx.removeTabBarBadge({",
            "  index: ${1:0},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.removeTabBarBadge(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.removeTabBarBadge.html)\n         *\n         * 移除 tabBar 某一项右上角的文本\n         *\n         * 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "reportAnalytics": {
        "prefix": "reportAnalytics",
        "body": [
            "wx.reportAnalytics('${1:eventName}', ${2:data})"
        ],
        "description": "/** [wx.reportAnalytics(string eventName, Object data)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/data-analysis/wx.reportAnalytics.html)\n*\n* 自定义分析数据上报接口。使用前，需要在小程序管理后台自定义分析中新建事件，配置好事件名与字段。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.reportAnalytics('purchase', {\n  price: 120,\n  color: 'red'\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "reportMonitor": {
        "prefix": "reportMonitor",
        "body": [
            "wx.reportMonitor('${1:name}', ${2:0})"
        ],
        "description": "/** [wx.reportMonitor(string name, number value)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/report/wx.reportMonitor.html)\n*\n* 自定义业务数据监控上报接口。\n*\n* **使用说明**\n*\n*\n* 使用前，需要在「小程序管理后台-运维中心-性能监控-业务数据监控」中新建监控事件，配置监控描述与告警类型。每一个监控事件对应唯一的监控ID，开发者最多可以创建128个监控事件。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.reportMonitor('1', 1)\n```\n*\n* 最低基础库： `2.0.1` */",
        "detail": "function",
        "kind": 9
    },
    "requestPayment": {
        "prefix": "requestPayment",
        "body": [
            "wx.requestPayment({",
            "  nonceStr: '${1:nonceStr}',",
            "  package: '${2:package}',",
            "  paySign: '${3:paySign}',",
            "  timeStamp: '${4:timeStamp}',",
            "  complete: (res) => {$5},",
            "  fail: (res) => {$6},",
            "  signType: ${7:signType},",
            "  success: (res) => {$8},",
            "})"
        ],
        "description": "/** [wx.requestPayment(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/payment/wx.requestPayment.html)\n*\n* 发起微信支付。了解更多信息，请查看[微信支付接口文档](https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_3&index=1)\n*\n* **示例代码**\n*\n*\n* ```js\nwx.requestPayment({\n  timeStamp: '',\n  nonceStr: '',\n  package: '',\n  signType: 'MD5',\n  paySign: '',\n  success (res) { },\n  fail (res) { }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "requestSubscribeMessage": {
        "prefix": "requestSubscribeMessage",
        "body": [
            "wx.requestSubscribeMessage({",
            "  tmplIds: [$1],",
            "  complete: (res) => {$2},",
            "  fail: (result) => {$3},",
            "  success: (result) => {$4},",
            "})"
        ],
        "description": "/** [wx.requestSubscribeMessage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/subscribe-message/wx.requestSubscribeMessage.html)\n*\n* 注意：[2.8.2](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 版本开始，用户发生点击行为或者发起支付回调后，才可以调起订阅消息界面。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.requestSubscribeMessage({\n  tmplIds: [''],\n  success (res) { }\n})\n```\n*\n* 最低基础库： `2.8.2` */",
        "detail": "function",
        "kind": 9
    },
    "saveFile": {
        "prefix": "saveFile",
        "body": [
            "wx.saveFile({",
            "  tempFilePath: '${1:tempFilePath}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (result) => {$4},",
            "})"
        ],
        "description": "/** [wx.saveFile(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.saveFile.html)\n*\n* 保存文件到本地。注意：**saveFile 会把临时文件移动，因此调用成功后传入的 tempFilePath 将不可用**\n*\n* **示例代码**\n*\n*\n* ```js\nwx.chooseImage({\n  success: function(res) {\n    const tempFilePaths = res.tempFilePaths\n    wx.saveFile({\n      tempFilePath: tempFilePaths[0],\n      success (res) {\n        const savedFilePath = res.savedFilePath\n      }\n    })\n  }\n})\n```\n*\n* **注意**\n*\n*\n* 本地文件存储的大小限制为 10M */",
        "detail": "function",
        "kind": 9
    },
    "saveImageToPhotosAlbum": {
        "prefix": "saveImageToPhotosAlbum",
        "body": [
            "wx.saveImageToPhotosAlbum({",
            "  filePath: '${1:filePath}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.saveImageToPhotosAlbum(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.saveImageToPhotosAlbum.html)\n*\n* 保存图片到系统相册。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.saveImageToPhotosAlbum({\n  success(res) { }\n})\n```\n*\n* 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "saveVideoToPhotosAlbum": {
        "prefix": "saveVideoToPhotosAlbum",
        "body": [
            "wx.saveVideoToPhotosAlbum({",
            "  filePath: '${1:filePath}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.saveVideoToPhotosAlbum(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/video/wx.saveVideoToPhotosAlbum.html)\n*\n* 保存视频到系统相册。支持mp4视频格式。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.saveVideoToPhotosAlbum({\n  filePath: 'wxfile://xxx',\n  success (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "scanCode": {
        "prefix": "scanCode",
        "body": [
            "wx.scanCode({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  onlyFromCamera: ${3:true},",
            "  scanType: [$4],",
            "  success: (result) => {$5},",
            "})"
        ],
        "description": "/** [wx.scanCode(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/scan/wx.scanCode.html)\n*\n* 调起客户端扫码界面进行扫码\n*\n* **示例代码**\n*\n*\n* ```js\n// 允许从相机和相册扫码\nwx.scanCode({\n  success (res) {\n    console.log(res)\n  }\n})\n\n// 只允许从相机扫码\nwx.scanCode({\n  onlyFromCamera: true,\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "seekBackgroundAudio": {
        "prefix": "seekBackgroundAudio",
        "body": [
            "wx.seekBackgroundAudio({",
            "  position: ${1:0},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.seekBackgroundAudio(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.seekBackgroundAudio.html)\n*\n* 控制音乐播放进度。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.seekBackgroundAudio({\n  position: 30\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "sendHCEMessage": {
        "prefix": "sendHCEMessage",
        "body": [
            "wx.sendHCEMessage({",
            "  data: ${1:data},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.sendHCEMessage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/nfc/wx.sendHCEMessage.html)\n*\n* 发送 NFC 消息。仅在安卓系统下有效。\n*\n* **示例代码**\n*\n*\n* ```js\nconst buffer = new ArrayBuffer(1)\nconst dataView = new DataView(buffer)\ndataView.setUint8(0, 0)\n\nwx.startHCE({\n  success (res) {\n    wx.onHCEMessage(function(res) {\n      if (res.messageType === 1) {\n        wx.sendHCEMessage({data: buffer})\n      }\n    })\n  }\n})\n```\n*\n* 最低基础库： `1.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "sendSocketMessage": {
        "prefix": "sendSocketMessage",
        "body": [
            "wx.sendSocketMessage({",
            "  data: ${1:data},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.sendSocketMessage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/wx.sendSocketMessage.html)\n*\n* 通过 WebSocket 连接发送数据。需要先 wx.connectSocket，并在 wx.onSocketOpen 回调之后才能发送。\n*\n* **示例代码**\n*\n*\n* ```js\nlet socketOpen = false\nconst socketMsgQueue = []\nwx.connectSocket({\n  url: 'test.php'\n})\n\nwx.onSocketOpen(function(res) {\n  socketOpen = true\n  for (let i = 0; i < socketMsgQueue.length; i++){\n    sendSocketMessage(socketMsgQueue[i])\n  }\n  socketMsgQueue = []\n})\n\nfunction sendSocketMessage(msg) {\n  if (socketOpen) {\n    wx.sendSocketMessage({\n      data:msg\n    })\n  } else {\n    socketMsgQueue.push(msg)\n  }\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "setBackgroundColor": {
        "prefix": "setBackgroundColor",
        "body": [
            "wx.setBackgroundColor({",
            "  backgroundColor: '${1:backgroundColor}',",
            "  backgroundColorBottom: '${2:backgroundColorBottom}',",
            "  backgroundColorTop: '${3:backgroundColorTop}',",
            "  complete: (res) => {$4},",
            "  fail: (res) => {$5},",
            "  success: (res) => {$6},",
            "})"
        ],
        "description": "/** [wx.setBackgroundColor(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/background/wx.setBackgroundColor.html)\n*\n* 动态设置窗口的背景色\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setBackgroundColor({\n  backgroundColor: '#ffffff', // 窗口的背景色为白色\n})\n\nwx.setBackgroundColor({\n  backgroundColorTop: '#ffffff', // 顶部窗口的背景色为白色\n  backgroundColorBottom: '#ffffff', // 底部窗口的背景色为白色\n})\n```\n*\n* 最低基础库： `2.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "setBackgroundFetchToken": {
        "prefix": "setBackgroundFetchToken",
        "body": [
            "wx.setBackgroundFetchToken({",
            "  token: '${1:token}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.setBackgroundFetchToken(object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/background-fetch/wx.setBackgroundFetchToken.html)\n         *\n         * 设置自定义登录态，在周期性拉取数据时带上，便于第三方服务器验证请求合法性\n         *\n         * 最低基础库： `2.8.0` */",
        "detail": "function",
        "kind": 9
    },
    "setBackgroundTextStyle": {
        "prefix": "setBackgroundTextStyle",
        "body": [
            "wx.setBackgroundTextStyle({",
            "  textStyle: ${1:textStyle},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.setBackgroundTextStyle(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/background/wx.setBackgroundTextStyle.html)\n*\n* 动态设置下拉背景字体、loading 图的样式\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setBackgroundTextStyle({\n  textStyle: 'dark' // 下拉背景字体、loading 图的样式为dark\n})\n```\n*\n* 最低基础库： `2.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "setClipboardData": {
        "prefix": "setClipboardData",
        "body": [
            "wx.setClipboardData({",
            "  data: '${1:data}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.setClipboardData(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/clipboard/wx.setClipboardData.html)\n*\n* 设置系统剪贴板的内容。调用成功后，会弹出 toast 提示\"内容已复制\"，持续 1.5s\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setClipboardData({\n  data: 'data',\n  success (res) {\n    wx.getClipboardData({\n      success (res) {\n        console.log(res.data) // data\n      }\n    })\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "setEnableDebug": {
        "prefix": "setEnableDebug",
        "body": [
            "wx.setEnableDebug({",
            "  enableDebug: ${1:true},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.setEnableDebug(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/base/debug/wx.setEnableDebug.html)\n*\n* 设置是否打开调试开关。此开关对正式版也能生效。\n*\n* **示例代码**\n*\n*\n* ```javascript\n// 打开调试\nwx.setEnableDebug({\n  enableDebug: true\n})\n\n// 关闭调试\nwx.setEnableDebug({\n  enableDebug: false\n})\n```\n*\n* **Tips**\n*\n*\n* - 在正式版打开调试还有一种方法，就是先在开发版或体验版打开调试，再切到正式版就能看到vConsole。\n*\n* 最低基础库： `1.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "setInnerAudioOption": {
        "prefix": "setInnerAudioOption",
        "body": [
            "wx.setInnerAudioOption({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  mixWithOther: ${3:true},",
            "  obeyMuteSwitch: ${4:true},",
            "  success: (res) => {$5},",
            "})"
        ],
        "description": "/** [wx.setInnerAudioOption(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.setInnerAudioOption.html)\n         *\n         * 设置 [InnerAudioContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/InnerAudioContext.html) 的播放选项。设置之后对当前小程序全局生效。\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "setKeepScreenOn": {
        "prefix": "setKeepScreenOn",
        "body": [
            "wx.setKeepScreenOn({",
            "  keepScreenOn: ${1:true},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.setKeepScreenOn(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/screen/wx.setKeepScreenOn.html)\n*\n* 设置是否保持常亮状态。仅在当前小程序生效，离开小程序后设置失效。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setKeepScreenOn({\n  keepScreenOn: true\n})\n```\n*\n* 最低基础库： `1.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "setNavigationBarColor": {
        "prefix": "setNavigationBarColor",
        "body": [
            "wx.setNavigationBarColor({",
            "  backgroundColor: '${1:backgroundColor}',",
            "  frontColor: '${2:frontColor}',",
            "  animation: {",
            "    duration: ${3:0},",
            "    timingFunc: ${4:timingFunc},",
            "  },",
            "  complete: (res) => {$6},",
            "  fail: (res) => {$7},",
            "  success: (res) => {$8},",
            "})"
        ],
        "description": "/** [wx.setNavigationBarColor(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/navigation-bar/wx.setNavigationBarColor.html)\n         *\n         * 设置页面导航条颜色\n         *\n         * 最低基础库： `1.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "setNavigationBarTitle": {
        "prefix": "setNavigationBarTitle",
        "body": [
            "wx.setNavigationBarTitle({",
            "  title: '${1:title}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.setNavigationBarTitle(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/navigation-bar/wx.setNavigationBarTitle.html)\n*\n* 动态设置当前页面的标题\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setNavigationBarTitle({\n  title: '当前页面'\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "setScreenBrightness": {
        "prefix": "setScreenBrightness",
        "body": [
            "wx.setScreenBrightness({",
            "  value: ${1:0},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.setScreenBrightness(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/screen/wx.setScreenBrightness.html)\n         *\n         * 设置屏幕亮度\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "setStorage": {
        "prefix": "setStorage",
        "body": [
            "wx.setStorage({",
            "  data: ${1:data},",
            "  key: '${2:key}',",
            "  complete: (res) => {$3},",
            "  fail: (res) => {$4},",
            "  success: (res) => {$5},",
            "})"
        ],
        "description": "/** [wx.setStorage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.setStorage.html)\n*\n* 将数据存储在本地缓存中指定的 key 中。会覆盖掉原来该 key 对应的内容。除非用户主动删除或因存储空间原因被系统清理，否则数据都一直可用。单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setStorage({\n  key:\"key\",\n  data:\"value\"\n})\n```\n* ```js\ntry {\n  wx.setStorageSync('key', 'value')\n} catch (e) { }\n``` */",
        "detail": "function",
        "kind": 9
    },
    "setStorageSync": {
        "prefix": "setStorageSync",
        "body": [
            "wx.setStorageSync('${1:key}', ${2:data})"
        ],
        "description": "/** [wx.setStorageSync(string key, any data)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.setStorageSync.html)\n*\n* [wx.setStorage](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.setStorage.html) 的同步版本\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setStorage({\n  key:\"key\",\n  data:\"value\"\n})\n```\n* ```js\ntry {\n  wx.setStorageSync('key', 'value')\n} catch (e) { }\n``` */",
        "detail": "function",
        "kind": 9
    },
    "setTabBarBadge": {
        "prefix": "setTabBarBadge",
        "body": [
            "wx.setTabBarBadge({",
            "  index: ${1:0},",
            "  text: '${2:text}',",
            "  complete: (res) => {$3},",
            "  fail: (res) => {$4},",
            "  success: (res) => {$5},",
            "})"
        ],
        "description": "/** [wx.setTabBarBadge(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.setTabBarBadge.html)\n*\n* 为 tabBar 某一项的右上角添加文本\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setTabBarBadge({\n  index: 0,\n  text: '1'\n})\n```\n*\n* 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "setTabBarItem": {
        "prefix": "setTabBarItem",
        "body": [
            "wx.setTabBarItem({",
            "  index: ${1:0},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  iconPath: '${4:iconPath}',",
            "  selectedIconPath: '${5:selectedIconPath}',",
            "  success: (res) => {$6},",
            "  text: '${7:text}',",
            "})"
        ],
        "description": "/** [wx.setTabBarItem(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.setTabBarItem.html)\n*\n* 动态设置 tabBar 某一项的内容，`2.7.0` 起图片支持临时文件和网络文件。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setTabBarItem({\n  index: 0,\n  text: 'text',\n  iconPath: '/path/to/iconPath',\n  selectedIconPath: '/path/to/selectedIconPath'\n})\n```\n*\n* 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "setTabBarStyle": {
        "prefix": "setTabBarStyle",
        "body": [
            "wx.setTabBarStyle({",
            "  backgroundColor: '${1:backgroundColor}',",
            "  borderStyle: '${2:borderStyle}',",
            "  color: '${3:color}',",
            "  complete: (res) => {$4},",
            "  fail: (res) => {$5},",
            "  selectedColor: '${6:selectedColor}',",
            "  success: (res) => {$7},",
            "})"
        ],
        "description": "/** [wx.setTabBarStyle(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.setTabBarStyle.html)\n*\n* 动态设置 tabBar 的整体样式\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setTabBarStyle({\n  color: '#FF0000',\n  selectedColor: '#00FF00',\n  backgroundColor: '#0000FF',\n  borderStyle: 'white'\n})\n```\n*\n* 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "setTopBarText": {
        "prefix": "setTopBarText",
        "body": [
            "wx.setTopBarText({",
            "  text: '${1:text}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.setTopBarText(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/sticky/wx.setTopBarText.html)\n*\n* 动态设置置顶栏文字内容。只有当前小程序被置顶时能生效，如果当前小程序没有被置顶，也能调用成功，但是不会立即生效，只有在用户将这个小程序置顶后才换上设置的文字内容.\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setTopBarText({\n  text: 'hello, world!'\n})\n```\n*\n* **注意**\n*\n*\n* - 调用成功后，需间隔 5s 才能再次调用此接口，如果在 5s 内再次调用此接口，会回调 fail，errMsg：\"setTopBarText: fail invoke too frequently\"\n*\n* 最低基础库： `1.4.3` */",
        "detail": "function",
        "kind": 9
    },
    "setWifiList": {
        "prefix": "setWifiList",
        "body": [
            "wx.setWifiList({",
            "  wifiList: [$1],",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.setWifiList(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.setWifiList.html)\n*\n* 设置 `wifiList` 中 AP 的相关信息。在 `onGetWifiList` 回调后调用，**iOS特有接口**。\n*\n* **注意**\n*\n*\n* - 该接口只能在 `onGetWifiList` 回调之后才能调用。\n* - 此时客户端会挂起，等待小程序设置 Wi-Fi 信息，请务必尽快调用该接口，若无数据请传入一个空数组。\n* - 有可能随着周边 Wi-Fi 列表的刷新，单个流程内收到多次带有存在重复的 Wi-Fi 列表的回调。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.onGetWifiList(function(res) {\n  if (res.wifiList.length) {\n    wx.setWifiList({\n      wifiList: [{\n        SSID: res.wifiList[0].SSID,\n        BSSID: res.wifiList[0].BSSID,\n        password: '123456'\n      }]\n    })\n  } else {\n    wx.setWifiList({\n      wifiList: []\n    })\n  }\n})\nwx.getWifiList()\n```\n*\n* 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "showActionSheet": {
        "prefix": "showActionSheet",
        "body": [
            "wx.showActionSheet({",
            "  itemList: [$1],",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  itemColor: '${4:itemColor}',",
            "  success: (result) => {$5},",
            "})"
        ],
        "description": "/** [wx.showActionSheet(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showActionSheet.html)\n*\n* 显示操作菜单\n*\n* **示例代码**\n*\n*\n* ```js\nwx.showActionSheet({\n  itemList: ['A', 'B', 'C'],\n  success (res) {\n    console.log(res.tapIndex)\n  },\n  fail (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* **注意**\n*\n*\n* - Android 6.7.2 以下版本，点击取消或蒙层时，回调 fail, errMsg 为 \"fail cancel\"；\n* - Android 6.7.2 及以上版本 和 iOS 点击蒙层不会关闭模态弹窗，所以尽量避免使用「取消」分支中实现业务逻辑 */",
        "detail": "function",
        "kind": 9
    },
    "showLoading": {
        "prefix": "showLoading",
        "body": [
            "wx.showLoading({",
            "  title: '${1:title}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  mask: ${4:true},",
            "  success: (res) => {$5},",
            "})"
        ],
        "description": "/** [wx.showLoading(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showLoading.html)\n*\n* 显示 loading 提示框。需主动调用 wx.hideLoading 才能关闭提示框\n*\n* **示例代码**\n*\n*\n* ```js\nwx.showLoading({\n  title: '加载中',\n})\n\nsetTimeout(function () {\n  wx.hideLoading()\n}, 2000)\n```\n*\n* **注意**\n*\n*\n* - [wx.showLoading](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showLoading.html) 和 [wx.showToast](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showToast.html) 同时只能显示一个\n* - [wx.showLoading](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showLoading.html) 应与 [wx.hideLoading](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.hideLoading.html) 配对使用\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "showModal": {
        "prefix": "showModal",
        "body": [
            "wx.showModal({",
            "  cancelColor: '${1:cancelColor}',",
            "  cancelText: '${2:cancelText}',",
            "  complete: (res) => {$3},",
            "  confirmColor: '${4:confirmColor}',",
            "  confirmText: '${5:confirmText}',",
            "  content: '${6:content}',",
            "  fail: (res) => {$7},",
            "  showCancel: ${8:true},",
            "  success: (result) => {$9},",
            "  title: '${10:title}',",
            "})"
        ],
        "description": "/** [wx.showModal(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showModal.html)\n*\n* 显示模态对话框\n*\n* **示例代码**\n*\n*\n* ```js\nwx.showModal({\n  title: '提示',\n  content: '这是一个模态弹窗',\n  success (res) {\n    if (res.confirm) {\n      console.log('用户点击确定')\n    } else if (res.cancel) {\n      console.log('用户点击取消')\n    }\n  }\n})\n```\n*\n* **注意**\n*\n*\n* - Android 6.7.2 以下版本，点击取消或蒙层时，回调 fail, errMsg 为 \"fail cancel\"；\n* - Android 6.7.2 及以上版本 和 iOS 点击蒙层不会关闭模态弹窗，所以尽量避免使用「取消」分支中实现业务逻辑 */",
        "detail": "function",
        "kind": 9
    },
    "showNavigationBarLoading": {
        "prefix": "showNavigationBarLoading",
        "body": [
            "wx.showNavigationBarLoading({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.showNavigationBarLoading(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/navigation-bar/wx.showNavigationBarLoading.html)\n         *\n         * 在当前页面显示导航条加载动画 */",
        "detail": "function",
        "kind": 9
    },
    "showShareMenu": {
        "prefix": "showShareMenu",
        "body": [
            "wx.showShareMenu({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "  withShareTicket: ${4:true},",
            "})"
        ],
        "description": "/** [wx.showShareMenu(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/share/wx.showShareMenu.html)\n*\n* 显示当前页面的转发按钮\n*\n* **示例代码**\n*\n*\n* ```js\nwx.showShareMenu({\n  withShareTicket: true\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "showTabBar": {
        "prefix": "showTabBar",
        "body": [
            "wx.showTabBar({",
            "  animation: ${1:true},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.showTabBar(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.showTabBar.html)\n         *\n         * 显示 tabBar\n         *\n         * 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "showTabBarRedDot": {
        "prefix": "showTabBarRedDot",
        "body": [
            "wx.showTabBarRedDot({",
            "  index: ${1:0},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.showTabBarRedDot(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.showTabBarRedDot.html)\n         *\n         * 显示 tabBar 某一项的右上角的红点\n         *\n         * 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "showToast": {
        "prefix": "showToast",
        "body": [
            "wx.showToast({",
            "  title: '${1:title}',",
            "  complete: (res) => {$2},",
            "  duration: ${3:0},",
            "  fail: (res) => {$4},",
            "  icon: ${5:icon},",
            "  image: '${6:image}',",
            "  mask: ${7:true},",
            "  success: (res) => {$8},",
            "})"
        ],
        "description": "/** [wx.showToast(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showToast.html)\n*\n* 显示消息提示框\n*\n* **示例代码**\n*\n*\n* ```js\nwx.showToast({\n  title: '成功',\n  icon: 'success',\n  duration: 2000\n})\n```\n*\n* **注意**\n*\n*\n* - [wx.showLoading](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showLoading.html) 和 [wx.showToast](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showToast.html) 同时只能显示一个\n* - [wx.showToast](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showToast.html) 应与 [wx.hideToast](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.hideToast.html) 配对使用 */",
        "detail": "function",
        "kind": 9
    },
    "startAccelerometer": {
        "prefix": "startAccelerometer",
        "body": [
            "wx.startAccelerometer({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  interval: ${3:interval},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.startAccelerometer(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/accelerometer/wx.startAccelerometer.html)\n*\n* 开始监听加速度数据。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startAccelerometer({\n  interval: 'game'\n})\n```\n*\n* **注意**\n*\n*\n* - 根据机型性能、当前 CPU 与内存的占用情况，`interval` 的设置与实际 `wx.onAccelerometerChange()` 回调函数的执行频率会有一些出入。\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "startBeaconDiscovery": {
        "prefix": "startBeaconDiscovery",
        "body": [
            "wx.startBeaconDiscovery({",
            "  uuids: [$1],",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  ignoreBluetoothAvailable: ${4:true},",
            "  success: (res) => {$5},",
            "})"
        ],
        "description": "/** [wx.startBeaconDiscovery(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/ibeacon/wx.startBeaconDiscovery.html)\n*\n* 开始搜索附近的 iBeacon 设备\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startBeaconDiscovery({\n  success(res) { }\n})\n```\n*\n* 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "startBluetoothDevicesDiscovery": {
        "prefix": "startBluetoothDevicesDiscovery",
        "body": [
            "wx.startBluetoothDevicesDiscovery({",
            "  allowDuplicatesKey: ${1:true},",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  interval: ${4:0},",
            "  services: [$5],",
            "  success: (res) => {$6},",
            "})"
        ],
        "description": "/** [wx.startBluetoothDevicesDiscovery(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.startBluetoothDevicesDiscovery.html)\n*\n* 开始搜寻附近的蓝牙外围设备。**此操作比较耗费系统资源，请在搜索并连接到设备后调用 [wx.stopBluetoothDevicesDiscovery](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.stopBluetoothDevicesDiscovery.html) 方法停止搜索。**\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n*\n* ```js\n// 以微信硬件平台的蓝牙智能灯为例，主服务的 UUID 是 FEE7。传入这个参数，只搜索主服务 UUID 为 FEE7 的设备\nwx.startBluetoothDevicesDiscovery({\n  services: ['FEE7'],\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "startCompass": {
        "prefix": "startCompass",
        "body": [
            "wx.startCompass({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.startCompass(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/compass/wx.startCompass.html)\n*\n* 开始监听罗盘数据\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startCompass()\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "startDeviceMotionListening": {
        "prefix": "startDeviceMotionListening",
        "body": [
            "wx.startDeviceMotionListening({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  interval: ${3:interval},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.startDeviceMotionListening(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/motion/wx.startDeviceMotionListening.html)\n         *\n         * 开始监听设备方向的变化。\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "startGyroscope": {
        "prefix": "startGyroscope",
        "body": [
            "wx.startGyroscope({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  interval: ${3:interval},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.startGyroscope(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/gyroscope/wx.startGyroscope.html)\n         *\n         * 开始监听陀螺仪数据。\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "startHCE": {
        "prefix": "startHCE",
        "body": [
            "wx.startHCE({",
            "  aid_list: [$1],",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.startHCE(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/nfc/wx.startHCE.html)\n*\n* 初始化 NFC 模块。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startHCE({\n  aid_list: ['F222222222'],\n  success (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "startLocalServiceDiscovery": {
        "prefix": "startLocalServiceDiscovery",
        "body": [
            "wx.startLocalServiceDiscovery({",
            "  serviceType: '${1:serviceType}',",
            "  complete: (res) => {$2},",
            "  fail: (result) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.startLocalServiceDiscovery(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.startLocalServiceDiscovery.html)\n         *\n         * 开始搜索局域网下的 mDNS 服务。搜索的结果会通过 wx.onLocalService* 事件返回。\n         *\n         * **注意**\n         *\n         *\n         * 1. wx.startLocalServiceDiscovery 是一个消耗性能的行为，开始 30 秒后会自动 stop 并执行 wx.onLocalServiceDiscoveryStop 注册的回调函数。\n         * 2. 在调用 wx.startLocalServiceDiscovery 后，在这次搜索行为停止后才能发起下次 wx.startLocalServiceDiscovery。停止本次搜索行为的操作包括调用 wx.stopLocalServiceDiscovery 和 30 秒后系统自动 stop 本次搜索。\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "startLocationUpdate": {
        "prefix": "startLocationUpdate",
        "body": [
            "wx.startLocationUpdate({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.startLocationUpdate(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.startLocationUpdate.html)\n         *\n         * 开启小程序进入前台时接收位置消息\n         *\n         * **注意**\n         *\n         *\n         * - 获取位置信息需配置[地理位置用途说明](https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#permission)。\n         *\n         * 最低基础库： `2.8.0` */",
        "detail": "function",
        "kind": 9
    },
    "startLocationUpdateBackground": {
        "prefix": "startLocationUpdateBackground",
        "body": [
            "wx.startLocationUpdateBackground({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.startLocationUpdateBackground(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.startLocationUpdateBackground.html)\n         *\n         * 开启小程序进入前后台时均接收位置消息，需引导用户开启[授权]((open-ability/authorize#后台定位))。授权以后，小程序在运行中或进入后台均可接受位置消息变化。\n         *\n         * **注意**\n         *\n         *\n         * - 安卓微信7.0.6版本，iOS 7.0.5版本起支持该接口\n         * - 需在app.json中配置requiredBackgroundModes: ['location']后使用\n         * - 获取位置信息需配置[地理位置用途说明](https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#permission)。\n         *\n         * 最低基础库： `2.8.0` */",
        "detail": "function",
        "kind": 9
    },
    "startPullDownRefresh": {
        "prefix": "startPullDownRefresh",
        "body": [
            "wx.startPullDownRefresh({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.startPullDownRefresh(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/pull-down-refresh/wx.startPullDownRefresh.html)\n*\n* 开始下拉刷新。调用后触发下拉刷新动画，效果与用户手动下拉刷新一致。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startPullDownRefresh()\n```\n*\n* 最低基础库： `1.5.0` */",
        "detail": "function",
        "kind": 9
    },
    "startRecord": {
        "prefix": "startRecord",
        "body": [
            "wx.startRecord({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (result) => {$3},",
            "})"
        ],
        "description": "/** [wx.startRecord(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/recorder/wx.startRecord.html)\n*\n* 开始录音。当主动调用 [wx.stopRecord](https://developers.weixin.qq.com/miniprogram/dev/api/media/recorder/wx.stopRecord.html)，或者录音超过1分钟时自动结束录音。当用户离开小程序时，此接口无法调用。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startRecord({\n  success (res) {\n    const tempFilePath = res.tempFilePath\n  }\n})\nsetTimeout(function () {\n  wx.stopRecord() // 结束录音\n}, 10000)\n``` */",
        "detail": "function",
        "kind": 9
    },
    "startSoterAuthentication": {
        "prefix": "startSoterAuthentication",
        "body": [
            "wx.startSoterAuthentication({",
            "  challenge: '${1:challenge}',",
            "  requestAuthModes: [$2],",
            "  authContent: '${3:authContent}',",
            "  complete: (res) => {$4},",
            "  fail: (res) => {$5},",
            "  success: (result) => {$6},",
            "})"
        ],
        "description": "/** [wx.startSoterAuthentication(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/soter/wx.startSoterAuthentication.html)\n*\n* 开始 SOTER 生物认证。验证流程请参考[说明](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/bio-auth.html)。\n*\n* **resultJSON 说明**\n*\n*\n* 此数据为设备TEE中，将传入的challenge和TEE内其他安全信息组成的数据进行组装而来的JSON，对下述字段的解释如下表。例子如下：\n* | 字段名  | 说明                                                                                      |\n* |---------|-------------------------------------------------------------------------------------------|\n* | raw     | 调用者传入的challenge                                                                     |\n* | fid     | （仅Android支持）本次生物识别认证的生物信息编号（如指纹识别则是指纹信息在本设备内部编号） |\n* | counter | 防重放特征参数                                                                            |\n* | tee_n   | TEE名称（如高通或者trustonic等）                                                          |\n* | tee_v   | TEE版本号                                                                                 |\n* | fp_n    | 指纹以及相关逻辑模块提供商（如FPC等）                                                     |\n* | fp_v    | 指纹以及相关模块版本号                                                                    |\n* | cpu_id  | 机器唯一识别ID                                                                            |\n* | uid     | 概念同Android系统定义uid，即应用程序编号                                                  |\n*\n* ```json\n{\n  \"raw\":\"msg\",\n  \"fid\":\"2\",\n  \"counter\":123,\n  \"tee_n\":\"TEE Name\",\n  \"tee_v\":\"TEE Version\",\n  \"fp_n\":\"Fingerprint Sensor Name\",\n  \"fp_v\":\"Fingerprint Sensor Version\",\n  \"cpu_id\":\"CPU Id\",\n  \"uid\":\"21\"\n}\n```\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/q3tCKkmJ7g2e)\n* ```js\nwx.startSoterAuthentication({\n   requestAuthModes: ['fingerPrint'],\n   challenge: '123456',\n   authContent: '请用指纹解锁',\n   success(res) {\n   }\n})\n```\n*\n* 最低基础库： `1.5.0` */",
        "detail": "function",
        "kind": 9
    },
    "startWifi": {
        "prefix": "startWifi",
        "body": [
            "wx.startWifi({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.startWifi(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.startWifi.html)\n*\n* 初始化 Wi-Fi 模块。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/8P7zrkmd7r2n)\n* ```js\nwx.startWifi({\n  success (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "stopAccelerometer": {
        "prefix": "stopAccelerometer",
        "body": [
            "wx.stopAccelerometer({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.stopAccelerometer(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/accelerometer/wx.stopAccelerometer.html)\n*\n* 停止监听加速度数据。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.stopAccelerometer()\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "stopBackgroundAudio": {
        "prefix": "stopBackgroundAudio",
        "body": [
            "wx.stopBackgroundAudio({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.stopBackgroundAudio(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.stopBackgroundAudio.html)\n*\n* 停止播放音乐。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.stopBackgroundAudio()\n``` */",
        "detail": "function",
        "kind": 9
    },
    "stopBeaconDiscovery": {
        "prefix": "stopBeaconDiscovery",
        "body": [
            "wx.stopBeaconDiscovery({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.stopBeaconDiscovery(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/ibeacon/wx.stopBeaconDiscovery.html)\n         *\n         * 停止搜索附近的 iBeacon 设备\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "stopBluetoothDevicesDiscovery": {
        "prefix": "stopBluetoothDevicesDiscovery",
        "body": [
            "wx.stopBluetoothDevicesDiscovery({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.stopBluetoothDevicesDiscovery(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.stopBluetoothDevicesDiscovery.html)\n*\n* 停止搜寻附近的蓝牙外围设备。若已经找到需要的蓝牙设备并不需要继续搜索时，建议调用该接口停止蓝牙搜索。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.stopBluetoothDevicesDiscovery({\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "stopCompass": {
        "prefix": "stopCompass",
        "body": [
            "wx.stopCompass({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.stopCompass(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/compass/wx.stopCompass.html)\n*\n* 停止监听罗盘数据\n*\n* **示例代码**\n*\n*\n* ```js\nwx.stopCompass()\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "stopDeviceMotionListening": {
        "prefix": "stopDeviceMotionListening",
        "body": [
            "wx.stopDeviceMotionListening({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.stopDeviceMotionListening(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/motion/wx.stopDeviceMotionListening.html)\n         *\n         * 停止监听设备方向的变化。\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "stopGyroscope": {
        "prefix": "stopGyroscope",
        "body": [
            "wx.stopGyroscope({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.stopGyroscope(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/gyroscope/wx.stopGyroscope.html)\n         *\n         * 停止监听陀螺仪数据。\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "stopHCE": {
        "prefix": "stopHCE",
        "body": [
            "wx.stopHCE({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.stopHCE(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/nfc/wx.stopHCE.html)\n*\n* 关闭 NFC 模块。仅在安卓系统下有效。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.stopHCE({\n  success (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "stopLocalServiceDiscovery": {
        "prefix": "stopLocalServiceDiscovery",
        "body": [
            "wx.stopLocalServiceDiscovery({",
            "  complete: (res) => {$1},",
            "  fail: (result) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.stopLocalServiceDiscovery(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.stopLocalServiceDiscovery.html)\n         *\n         * 停止搜索 mDNS 服务\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "stopLocationUpdate": {
        "prefix": "stopLocationUpdate",
        "body": [
            "wx.stopLocationUpdate({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.stopLocationUpdate(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.stopLocationUpdate.html)\n         *\n         * 关闭监听实时位置变化，前后台都停止消息接收\n         *\n         * 最低基础库： `2.8.0` */",
        "detail": "function",
        "kind": 9
    },
    "stopPullDownRefresh": {
        "prefix": "stopPullDownRefresh",
        "body": [
            "wx.stopPullDownRefresh({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.stopPullDownRefresh(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/pull-down-refresh/wx.stopPullDownRefresh.html)\n*\n* 停止当前页面下拉刷新。\n*\n* **示例代码**\n*\n*\n* ```js\nPage({\n  onPullDownRefresh () {\n    wx.stopPullDownRefresh()\n  }\n})\n```\n*\n* 最低基础库： `1.5.0` */",
        "detail": "function",
        "kind": 9
    },
    "stopRecord": {
        "prefix": "stopRecord",
        "body": [
            "wx.stopRecord({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.stopRecord(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/recorder/wx.stopRecord.html)\n*\n* 停止录音。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startRecord({\n  success (res) {\n    const tempFilePath = res.tempFilePath\n  }\n})\nsetTimeout(function () {\n  wx.stopRecord() // 结束录音\n}, 10000)\n``` */",
        "detail": "function",
        "kind": 9
    },
    "stopVoice": {
        "prefix": "stopVoice",
        "body": [
            "wx.stopVoice({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.stopVoice(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.stopVoice.html)\n*\n* 结束播放语音。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startRecord({\n  success (res) {\n    const tempFilePath = res.tempFilePath\n    wx.playVoice({\n      filePath: tempFilePath,\n    })\n\n    setTimeout(() => { wx.stopVoice() }, 5000)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "stopWifi": {
        "prefix": "stopWifi",
        "body": [
            "wx.stopWifi({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.stopWifi(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.stopWifi.html)\n*\n* 关闭 Wi-Fi 模块。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.stopWifi({\n  success (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "switchTab": {
        "prefix": "switchTab",
        "body": [
            "wx.switchTab({",
            "  url: '${1:url}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  success: (res) => {$4},",
            "})"
        ],
        "description": "/** [wx.switchTab(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.switchTab.html)\n*\n* 跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面\n*\n* **示例代码**\n*\n*\n* ```json\n{\n  \"tabBar\": {\n    \"list\": [{\n      \"pagePath\": \"index\",\n      \"text\": \"首页\"\n    },{\n      \"pagePath\": \"other\",\n      \"text\": \"其他\"\n    }]\n  }\n}\n```\n*\n* ```js\nwx.switchTab({\n  url: '/index'\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "updateShareMenu": {
        "prefix": "updateShareMenu",
        "body": [
            "wx.updateShareMenu({",
            "  activityId: '${1:activityId}',",
            "  complete: (res) => {$2},",
            "  fail: (res) => {$3},",
            "  isUpdatableMessage: ${4:true},",
            "  success: (res) => {$5},",
            "  templateInfo: {",
            "    parameterList: [$6],",
            "  },",
            "  withShareTicket: ${8:true},",
            "})"
        ],
        "description": "/** [wx.updateShareMenu(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/share/wx.updateShareMenu.html)\n*\n* 更新转发属性\n*\n* **示例代码**\n*\n*\n* ```js\nwx.updateShareMenu({\n  withShareTicket: true,\n  success () { }\n})\n```\n*\n* 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "vibrateLong": {
        "prefix": "vibrateLong",
        "body": [
            "wx.vibrateLong({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.vibrateLong(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/vibrate/wx.vibrateLong.html)\n         *\n         * 使手机发生较长时间的振动（400 ms)\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "vibrateShort": {
        "prefix": "vibrateShort",
        "body": [
            "wx.vibrateShort({",
            "  complete: (res) => {$1},",
            "  fail: (res) => {$2},",
            "  success: (res) => {$3},",
            "})"
        ],
        "description": "/** [wx.vibrateShort(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/vibrate/wx.vibrateShort.html)\n         *\n         * 使手机发生较短时间的振动（15 ms）。仅在 iPhone `7 / 7 Plus` 以上及 Android 机型生效\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "writeBLECharacteristicValue": {
        "prefix": "writeBLECharacteristicValue",
        "body": [
            "wx.writeBLECharacteristicValue({",
            "  characteristicId: '${1:characteristicId}',",
            "  deviceId: '${2:deviceId}',",
            "  serviceId: '${3:serviceId}',",
            "  value: ${4:value},",
            "  complete: (res) => {$5},",
            "  fail: (res) => {$6},",
            "  success: (res) => {$7},",
            "})"
        ],
        "description": "/** [wx.writeBLECharacteristicValue(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.writeBLECharacteristicValue.html)\n*\n* 向低功耗蓝牙设备特征值中写入二进制数据。注意：必须设备的特征值支持 write 才可以成功调用。\n*\n* **注意**\n*\n*\n* - 并行调用多次会存在写失败的可能性。\n* - 小程序不会对写入数据包大小做限制，但系统与蓝牙设备会限制蓝牙4.0单次传输的数据大小，超过最大字节数后会发生写入错误，建议每次写入不超过20字节。\n* - 若单次写入数据过长，iOS 上存在系统不会有任何回调的情况（包括错误回调）。\n* - 安卓平台上，在调用 `notifyBLECharacteristicValueChange` 成功后立即调用 `writeBLECharacteristicValue` 接口，在部分机型上会发生 10008 系统错误\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\n// 向蓝牙设备发送一个0x00的16进制数据\nlet buffer = new ArrayBuffer(1)\nlet dataView = new DataView(buffer)\ndataView.setUint8(0, 0)\n\nwx.writeBLECharacteristicValue({\n  // 这里的 deviceId 需要在 getBluetoothDevices 或 onBluetoothDeviceFound 接口中获取\n  deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId,\n  // 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取\n  characteristicId,\n  // 这里的value是ArrayBuffer类型\n  value: buffer,\n  success (res) {\n    console.log('writeBLECharacteristicValue success', res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.base64ToArrayBuffer": {
        "prefix": "wx.base64ToArrayBuffer",
        "body": [
            "wx.base64ToArrayBuffer('${1:base64}')"
        ],
        "description": "/** [ArrayBuffer wx.base64ToArrayBuffer(string base64)](https://developers.weixin.qq.com/miniprogram/dev/api/base/wx.base64ToArrayBuffer.html)\n         *\n         * 将 Base64 字符串转成 ArrayBuffer 对象\n         *\n         * 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getAccountInfoSync": {
        "prefix": "wx.getAccountInfoSync",
        "body": [
            "wx.getAccountInfoSync()"
        ],
        "description": "/** [Object wx.getAccountInfoSync()](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/account-info/wx.getAccountInfoSync.html)\n*\n* 获取当前帐号信息\n*\n* **示例代码**\n*\n*\n* ```js\nconst accountInfo = wx.getAccountInfoSync();\nconsole.log(accountInfo.miniProgram.appId) // 小程序 appId\nconsole.log(accountInfo.plugin.appId) // 插件 appId\nconsole.log(accountInfo.plugin.version) // 插件版本号， 'a.b.c' 这样的形式\n```\n*\n* 最低基础库： `2.2.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getBatteryInfoSync": {
        "prefix": "wx.getBatteryInfoSync",
        "body": [
            "wx.getBatteryInfoSync()"
        ],
        "description": "/** [Object wx.getBatteryInfoSync()](https://developers.weixin.qq.com/miniprogram/dev/api/device/battery/wx.getBatteryInfoSync.html)\n         *\n         * [wx.getBatteryInfo](https://developers.weixin.qq.com/miniprogram/dev/api/device/battery/wx.getBatteryInfo.html) 的同步版本 */",
        "detail": "function",
        "kind": 9
    },
    "wx.getExtConfigSync": {
        "prefix": "wx.getExtConfigSync",
        "body": [
            "wx.getExtConfigSync()"
        ],
        "description": "/** [Object wx.getExtConfigSync()](https://developers.weixin.qq.com/miniprogram/dev/api/ext/wx.getExtConfigSync.html)\n*\n* [wx.getExtConfig](https://developers.weixin.qq.com/miniprogram/dev/api/ext/wx.getExtConfig.html) 的同步版本。\n*\n* **Tips**\n*\n*\n* 1. 本接口暂时无法通过 [wx.canIUse](https://developers.weixin.qq.com/miniprogram/dev/api/base/wx.canIUse.html) 判断是否兼容，开发者需要自行判断 [wx.getExtConfigSync](https://developers.weixin.qq.com/miniprogram/dev/api/ext/wx.getExtConfigSync.html) 是否存在来兼容\n*\n* ****\n*\n* ```js\nlet extConfig = wx.getExtConfigSync? wx.getExtConfigSync(): {}\nconsole.log(extConfig)\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getLaunchOptionsSync": {
        "prefix": "wx.getLaunchOptionsSync",
        "body": [
            "wx.getLaunchOptionsSync()"
        ],
        "description": "/** [Object wx.getLaunchOptionsSync()](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html)\n         *\n         * 获取小程序启动时的参数。与 [`App.onLaunch`](https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onlaunchobject-object) 的回调参数一致。\n         *\n         * **返回有效 referrerInfo 的场景**\n         *\n         *\n         * | 场景值 | 场景                            | appId含义  |\n         * | ------ | ------------------------------- | ---------- |\n         * | 1020   | 公众号 profile 页相关小程序列表 | 来源公众号 |\n         * | 1035   | 公众号自定义菜单                | 来源公众号 |\n         * | 1036   | App 分享消息卡片                | 来源App    |\n         * | 1037   | 小程序打开小程序                | 来源小程序 |\n         * | 1038   | 从另一个小程序返回              | 来源小程序 |\n         * | 1043   | 公众号模板消息                  | 来源公众号 |\n         *\n         * **注意**\n         *\n         *\n         * 部分版本在无`referrerInfo`的时候会返回 `undefined`，建议使用 `options.referrerInfo && options.referrerInfo.appId` 进行判断。\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getMenuButtonBoundingClientRect": {
        "prefix": "wx.getMenuButtonBoundingClientRect",
        "body": [
            "wx.getMenuButtonBoundingClientRect()"
        ],
        "description": "/** [Object wx.getMenuButtonBoundingClientRect()](https://developers.weixin.qq.com/miniprogram/dev/api/ui/menu/wx.getMenuButtonBoundingClientRect.html)\n         *\n         * 获取菜单按钮（右上角胶囊按钮）的布局位置信息。坐标信息以屏幕左上角为原点。\n         *\n         * 最低基础库： `2.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getStorageInfoSync": {
        "prefix": "wx.getStorageInfoSync",
        "body": [
            "wx.getStorageInfoSync()"
        ],
        "description": "/** [Object wx.getStorageInfoSync()](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.getStorageInfoSync.html)\n*\n* [wx.getStorageInfo](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.getStorageInfo.html) 的同步版本\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getStorageInfo({\n  success (res) {\n    console.log(res.keys)\n    console.log(res.currentSize)\n    console.log(res.limitSize)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getStorageInfoSync()\n  console.log(res.keys)\n  console.log(res.currentSize)\n  console.log(res.limitSize)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getSystemInfoSync": {
        "prefix": "wx.getSystemInfoSync",
        "body": [
            "wx.getSystemInfoSync()"
        ],
        "description": "/** [Object wx.getSystemInfoSync()](https://developers.weixin.qq.com/miniprogram/dev/api/base/system/system-info/wx.getSystemInfoSync.html)\n*\n* [wx.getSystemInfo](https://developers.weixin.qq.com/miniprogram/dev/api/base/system/system-info/wx.getSystemInfo.html) 的同步版本\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getSystemInfo({\n  success (res) {\n    console.log(res.model)\n    console.log(res.pixelRatio)\n    console.log(res.windowWidth)\n    console.log(res.windowHeight)\n    console.log(res.language)\n    console.log(res.version)\n    console.log(res.platform)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getSystemInfoSync()\n  console.log(res.model)\n  console.log(res.pixelRatio)\n  console.log(res.windowWidth)\n  console.log(res.windowHeight)\n  console.log(res.language)\n  console.log(res.version)\n  console.log(res.platform)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createAnimation": {
        "prefix": "wx.createAnimation",
        "body": [
            "wx.createAnimation({",
            "  delay: ${1:0},",
            "})"
        ],
        "description": "/** [[Animation](https://developers.weixin.qq.com/miniprogram/dev/api/ui/animation/Animation.html) wx.createAnimation(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/animation/wx.createAnimation.html)\n         *\n         * 创建一个动画实例 [animation](https://developers.weixin.qq.com/miniprogram/dev/api/ui/animation/Animation.html)。调用实例的方法来描述动画。最后通过动画实例的 export 方法导出动画数据传递给组件的 animation 属性。 */",
        "detail": "function",
        "kind": 9
    },
    "wx.createAudioContext": {
        "prefix": "wx.createAudioContext",
        "body": [
            "wx.createAudioContext('${1:id}', ${2:component})"
        ],
        "description": "/** [[AudioContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/AudioContext.html) wx.createAudioContext(string id, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.createAudioContext.html)\n         *\n         * 创建 [audio](https://developers.weixin.qq.com/miniprogram/dev/component/audio.html) 上下文 [AudioContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/AudioContext.html) 对象。 */",
        "detail": "function",
        "kind": 9
    },
    "wx.getBackgroundAudioManager": {
        "prefix": "wx.getBackgroundAudioManager",
        "body": [
            "wx.getBackgroundAudioManager()"
        ],
        "description": "/** [[BackgroundAudioManager](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/BackgroundAudioManager.html) wx.getBackgroundAudioManager()](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.getBackgroundAudioManager.html)\n         *\n         * 获取**全局唯一**的背景音频管理器。\n         * 小程序切入后台，如果音频处于播放状态，可以继续播放。但是后台状态不能通过调用API操纵音频的播放状态。\n         *\n         * 从微信客户端6.7.2版本开始，若需要在小程序切后台后继续播放音频，需要在 [app.json](https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html) 中配置 `requiredBackgroundModes` 属性。开发版和体验版上可以直接生效，正式版还需通过审核。\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createCameraContext": {
        "prefix": "wx.createCameraContext",
        "body": [
            "wx.createCameraContext()"
        ],
        "description": "/** [[CameraContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/camera/CameraContext.html) wx.createCameraContext()](https://developers.weixin.qq.com/miniprogram/dev/api/media/camera/wx.createCameraContext.html)\n         *\n         * 创建 [camera](https://developers.weixin.qq.com/miniprogram/dev/component/camera.html) 上下文 [CameraContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/camera/CameraContext.html) 对象。\n         *\n         * 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createCanvasContext": {
        "prefix": "wx.createCanvasContext",
        "body": [
            "wx.createCanvasContext('${1:canvasId}', ${2:component})"
        ],
        "description": "/** [[CanvasContext](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/CanvasContext.html) wx.createCanvasContext(string canvasId, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/wx.createCanvasContext.html)\n         *\n         * 创建 canvas 的绘图上下文 [CanvasContext](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/CanvasContext.html) 对象 */",
        "detail": "function",
        "kind": 9
    },
    "wx.downloadFile": {
        "prefix": "wx.downloadFile",
        "body": [
            "wx.downloadFile({",
            "  url: '${1:url}',",
            "})"
        ],
        "description": "/** [[DownloadTask](https://developers.weixin.qq.com/miniprogram/dev/api/network/download/DownloadTask.html) wx.downloadFile(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/download/wx.downloadFile.html)\n*\n* 下载文件资源到本地。客户端直接发起一个 HTTPS GET 请求，返回文件的本地临时路径，单次下载允许的最大文件为 50MB。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html)。\n*\n* 注意：请在服务端响应的 header 中指定合理的 `Content-Type` 字段，以保证客户端正确处理文件类型。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.downloadFile({\n  url: 'https://example.com/audio/123', //仅为示例，并非真实的资源\n  success (res) {\n    // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容\n    if (res.statusCode === 200) {\n      wx.playVoice({\n        filePath: res.tempFilePath\n      })\n    }\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getFileSystemManager": {
        "prefix": "wx.getFileSystemManager",
        "body": [
            "wx.getFileSystemManager()"
        ],
        "description": "/** [[FileSystemManager](https://developers.weixin.qq.com/miniprogram/dev/api/file/FileSystemManager.html) wx.getFileSystemManager()](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.getFileSystemManager.html)\n         *\n         * 获取全局唯一的文件管理器\n         *\n         * 最低基础库： `1.9.9` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createInnerAudioContext": {
        "prefix": "wx.createInnerAudioContext",
        "body": [
            "wx.createInnerAudioContext()"
        ],
        "description": "/** [[InnerAudioContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/InnerAudioContext.html) wx.createInnerAudioContext()](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.createInnerAudioContext.html)\n         *\n         * 创建内部 [audio](https://developers.weixin.qq.com/miniprogram/dev/component/audio.html) 上下文 [InnerAudioContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/InnerAudioContext.html) 对象。\n         *\n         * 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createIntersectionObserver": {
        "prefix": "wx.createIntersectionObserver",
        "body": [
            "wx.createIntersectionObserver(${1:component}, {",
            "  initialRatio: ${2:0},",
            "})"
        ],
        "description": "/** [[IntersectionObserver](https://developers.weixin.qq.com/miniprogram/dev/api/wxml/IntersectionObserver.html) wx.createIntersectionObserver(Object component, Object options)](https://developers.weixin.qq.com/miniprogram/dev/api/wxml/wx.createIntersectionObserver.html)\n         *\n         * 创建并返回一个 IntersectionObserver 对象实例。在自定义组件或包含自定义组件的页面中，应使用 `this.createIntersectionObserver([options])` 来代替。\n         *\n         * **示例代码**\n         *\n         *\n         * [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/LAbMxkmI7F2A)\n         *\n         * 最低基础库： `1.9.3` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createInterstitialAd": {
        "prefix": "wx.createInterstitialAd",
        "body": [
            "wx.createInterstitialAd({",
            "  adUnitId: '${1:adUnitId}',",
            "})"
        ],
        "description": "/** [[InterstitialAd](https://developers.weixin.qq.com/miniprogram/dev/api/ad/InterstitialAd.html) wx.createInterstitialAd(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ad/wx.createInterstitialAd.html)\n         *\n         * 创建插屏广告组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/miniprogram/dev/api/base/system/system-info/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号后再使用该 API。每次调用该方法创建插屏广告都会返回一个全新的实例（小程序端的插屏广告实例不允许跨页面使用）。\n         *\n         * 最低基础库： `2.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createLivePlayerContext": {
        "prefix": "wx.createLivePlayerContext",
        "body": [
            "wx.createLivePlayerContext('${1:id}', ${2:component})"
        ],
        "description": "/** [[LivePlayerContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/live/LivePlayerContext.html) wx.createLivePlayerContext(string id, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/media/live/wx.createLivePlayerContext.html)\n         *\n         * 创建 [live-player](https://developers.weixin.qq.com/miniprogram/dev/component/live-player.html) 上下文 [LivePlayerContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/live/LivePlayerContext.html) 对象。\n         *\n         * 最低基础库： `1.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createLivePusherContext": {
        "prefix": "wx.createLivePusherContext",
        "body": [
            "wx.createLivePusherContext()"
        ],
        "description": "/** [[LivePusherContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/live/LivePusherContext.html) wx.createLivePusherContext()](https://developers.weixin.qq.com/miniprogram/dev/api/media/live/wx.createLivePusherContext.html)\n         *\n         * 创建 [live-pusher](https://developers.weixin.qq.com/miniprogram/dev/component/live-pusher.html) 上下文 [LivePusherContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/live/LivePusherContext.html) 对象。\n         *\n         * 最低基础库： `1.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getLogManager": {
        "prefix": "wx.getLogManager",
        "body": [
            "wx.getLogManager({",
            "  level: ${1:0},",
            "})"
        ],
        "description": "/** [[LogManager](https://developers.weixin.qq.com/miniprogram/dev/api/base/debug/LogManager.html) wx.getLogManager(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/base/debug/wx.getLogManager.html)\n*\n* 获取日志管理器对象。\n*\n* **示例代码**\n*\n*\n* ```js\nconst logger = wx.getLogManager({level: 1})\nlogger.log({str: 'hello world'}, 'basic log', 100, [1, 2, 3])\nlogger.info({str: 'hello world'}, 'info log', 100, [1, 2, 3])\nlogger.debug({str: 'hello world'}, 'debug log', 100, [1, 2, 3])\nlogger.warn({str: 'hello world'}, 'warn log', 100, [1, 2, 3])\n```\n*\n* 最低基础库： `2.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createMapContext": {
        "prefix": "wx.createMapContext",
        "body": [
            "wx.createMapContext('${1:mapId}', ${2:component})"
        ],
        "description": "/** [[MapContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/map/MapContext.html) wx.createMapContext(string mapId, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/media/map/wx.createMapContext.html)\n         *\n         * 创建 [map](https://developers.weixin.qq.com/miniprogram/dev/component/map.html) 上下文 [MapContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/map/MapContext.html) 对象。 */",
        "detail": "function",
        "kind": 9
    },
    "wx.createMediaContainer": {
        "prefix": "wx.createMediaContainer",
        "body": [
            "wx.createMediaContainer()"
        ],
        "description": "/** [[MediaContainer](https://developers.weixin.qq.com/miniprogram/dev/api/media/video-processing/MediaContainer.html) wx.createMediaContainer()](https://developers.weixin.qq.com/miniprogram/dev/api/media/video-processing/wx.createMediaContainer.html)\n         *\n         * 创建音视频处理容器，最终可将容器中的轨道合成一个视频\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createOffscreenCanvas": {
        "prefix": "wx.createOffscreenCanvas",
        "body": [
            "wx.createOffscreenCanvas()"
        ],
        "description": "/** [[OffscreenCanvas](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/OffscreenCanvas.html) wx.createOffscreenCanvas()](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/wx.createOffscreenCanvas.html)\n         *\n         * 创建离屏 canvas 实例\n         *\n         * 最低基础库： `2.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getRealtimeLogManager": {
        "prefix": "wx.getRealtimeLogManager",
        "body": [
            "wx.getRealtimeLogManager()"
        ],
        "description": "/** [[RealtimeLogManager](https://developers.weixin.qq.com/miniprogram/dev/api/base/debug/RealtimeLogManager.html) wx.getRealtimeLogManager()](https://developers.weixin.qq.com/miniprogram/dev/api/base/debug/wx.getRealtimeLogManager.html)\n*\n* 获取实时日志管理器对象。\n*\n* **示例代码**\n*\n*\n* ```js\nconst logger = wx.getRealtimeLogManager()\nlogger.info({str: 'hello world'}, 'info log', 100, [1, 2, 3])\nlogger.error({str: 'hello world'}, 'error log', 100, [1, 2, 3])\nlogger.warn({str: 'hello world'}, 'warn log', 100, [1, 2, 3])\n```\n*\n* 最低基础库： `2.7.1` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getRecorderManager": {
        "prefix": "wx.getRecorderManager",
        "body": [
            "wx.getRecorderManager()"
        ],
        "description": "/** [[RecorderManager](https://developers.weixin.qq.com/miniprogram/dev/api/media/recorder/RecorderManager.html) wx.getRecorderManager()](https://developers.weixin.qq.com/miniprogram/dev/api/media/recorder/wx.getRecorderManager.html)\n         *\n         * 获取**全局唯一**的录音管理器 RecorderManager\n         *\n         * 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.request": {
        "prefix": "wx.request",
        "body": [
            "wx.request({",
            "  url: '${1:url}',",
            "})"
        ],
        "description": "/** [[RequestTask](https://developers.weixin.qq.com/miniprogram/dev/api/network/request/RequestTask.html) wx.request(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html)\n*\n* 发起 HTTPS 网络请求。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html)。\n*\n* **data 参数说明**\n*\n*\n* 最终发送给服务器的数据是 String 类型，如果传入的 data 不是 String 类型，会被转换成 String 。转换规则如下：\n* - 对于 `GET` 方法的数据，会将数据转换成 query string（`encodeURIComponent(k)=encodeURIComponent(v)&encodeURIComponent(k)=encodeURIComponent(v)...`）\n* - 对于 `POST` 方法且 `header['content-type']` 为 `application/json` 的数据，会对数据进行 JSON 序列化\n* - 对于 `POST` 方法且 `header['content-type']` 为 `application/x-www-form-urlencoded` 的数据，会将数据转换成 query string `（encodeURIComponent(k)=encodeURIComponent(v)&encodeURIComponent(k)=encodeURIComponent(v)...）`\n*\n* **示例代码**\n*\n*\n* ```js\nwx.request({\n  url: 'test.php', //仅为示例，并非真实的接口地址\n  data: {\n    x: '',\n    y: ''\n  },\n  header: {\n    'content-type': 'application/json' // 默认值\n  },\n  success (res) {\n    console.log(res.data)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createRewardedVideoAd": {
        "prefix": "wx.createRewardedVideoAd",
        "body": [
            "wx.createRewardedVideoAd({",
            "  adUnitId: '${1:adUnitId}',",
            "})"
        ],
        "description": "/** [[RewardedVideoAd](https://developers.weixin.qq.com/miniprogram/dev/api/ad/RewardedVideoAd.html) wx.createRewardedVideoAd(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ad/wx.createRewardedVideoAd.html)\n         *\n         * 创建激励视频广告组件。请通过 [wx.getSystemInfoSync()](https://developers.weixin.qq.com/miniprogram/dev/api/base/system/system-info/wx.getSystemInfoSync.html) 返回对象的 SDKVersion 判断基础库版本号后再使用该 API（小游戏端要求 >= 2.0.4， 小程序端要求 >= 2.6.0）。调用该方法创建的激励视频广告是一个单例（小游戏端是全局单例，小程序端是页面内单例，在小程序端的单例对象不允许跨页面使用）。\n         *\n         * 最低基础库： `2.0.4` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createSelectorQuery": {
        "prefix": "wx.createSelectorQuery",
        "body": [
            "wx.createSelectorQuery()"
        ],
        "description": "/** [[SelectorQuery](https://developers.weixin.qq.com/miniprogram/dev/api/wxml/SelectorQuery.html) wx.createSelectorQuery()](https://developers.weixin.qq.com/miniprogram/dev/api/wxml/wx.createSelectorQuery.html)\n*\n* 返回一个 SelectorQuery 对象实例。在自定义组件或包含自定义组件的页面中，应使用 `this.createSelectorQuery()` 来代替。\n*\n* **示例代码**\n*\n*\n* ```js\nconst query = wx.createSelectorQuery()\nquery.select('#the-id').boundingClientRect()\nquery.selectViewport().scrollOffset()\nquery.exec(function(res){\n  res[0].top       // #the-id节点的上边界坐标\n  res[1].scrollTop // 显示区域的竖直滚动位置\n})\n```\n*\n* 最低基础库： `1.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.connectSocket": {
        "prefix": "wx.connectSocket",
        "body": [
            "wx.connectSocket({",
            "  url: '${1:url}',",
            "})"
        ],
        "description": "/** [[SocketTask](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/SocketTask.html) wx.connectSocket(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/wx.connectSocket.html)\n*\n* 创建一个 WebSocket 连接。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html)。\n*\n* **并发数**\n*\n*\n* - 1.7.0 及以上版本，最多可以同时存在 5 个 WebSocket 连接。\n* - 1.7.0 以下版本，一个小程序同时只能有一个 WebSocket 连接，如果当前已存在一个 WebSocket 连接，会自动关闭该连接，并重新创建一个 WebSocket 连接。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.connectSocket({\n  url: 'wss://example.qq.com',\n  header:{\n    'content-type': 'application/json'\n  },\n  protocols: ['protocol1']\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createUDPSocket": {
        "prefix": "wx.createUDPSocket",
        "body": [
            "wx.createUDPSocket()"
        ],
        "description": "/** [[UDPSocket](https://developers.weixin.qq.com/miniprogram/dev/api/network/udp/UDPSocket.html) wx.createUDPSocket()](https://developers.weixin.qq.com/miniprogram/dev/api/network/udp/wx.createUDPSocket.html)\n         *\n         * 创建一个 UDP Socket 实例。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html)。\n         *\n         * 最低基础库： `2.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getUpdateManager": {
        "prefix": "wx.getUpdateManager",
        "body": [
            "wx.getUpdateManager()"
        ],
        "description": "/** [[UpdateManager](https://developers.weixin.qq.com/miniprogram/dev/api/base/update/UpdateManager.html) wx.getUpdateManager()](https://developers.weixin.qq.com/miniprogram/dev/api/base/update/wx.getUpdateManager.html)\n         *\n         * 获取**全局唯一**的版本更新管理器，用于管理小程序更新。关于小程序的更新机制，可以查看[运行机制](https://developers.weixin.qq.com/miniprogram/dev/framework/runtime/operating-mechanism.html)文档。\n         *\n         * 最低基础库： `1.9.90` */",
        "detail": "function",
        "kind": 9
    },
    "wx.uploadFile": {
        "prefix": "wx.uploadFile",
        "body": [
            "wx.uploadFile({",
            "  filePath: '${1:filePath}',",
            "  name: '${2:name}',",
            "  url: '${3:url}',",
            "})"
        ],
        "description": "/** [[UploadTask](https://developers.weixin.qq.com/miniprogram/dev/api/network/upload/UploadTask.html) wx.uploadFile(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/upload/wx.uploadFile.html)\n*\n* 将本地资源上传到服务器。客户端发起一个 HTTPS POST 请求，其中 `content-type` 为 `multipart/form-data`。使用前请注意阅读[相关说明](https://developers.weixin.qq.com/miniprogram/dev/framework/ability/network.html)。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.chooseImage({\n  success (res) {\n    const tempFilePaths = res.tempFilePaths\n    wx.uploadFile({\n      url: 'https://example.weixin.qq.com/upload', //仅为示例，非真实的接口地址\n      filePath: tempFilePaths[0],\n      name: 'file',\n      formData: {\n        'user': 'test'\n      },\n      success (res){\n        const data = res.data\n        //do something\n      }\n    })\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createVideoContext": {
        "prefix": "wx.createVideoContext",
        "body": [
            "wx.createVideoContext('${1:id}', ${2:component})"
        ],
        "description": "/** [[VideoContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/video/VideoContext.html) wx.createVideoContext(string id, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/media/video/wx.createVideoContext.html)\n         *\n         * 创建 [video](https://developers.weixin.qq.com/miniprogram/dev/component/video.html) 上下文 [VideoContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/video/VideoContext.html) 对象。 */",
        "detail": "function",
        "kind": 9
    },
    "wx.createWorker": {
        "prefix": "wx.createWorker",
        "body": [
            "wx.createWorker('${1:scriptPath}')"
        ],
        "description": "/** [[Worker](https://developers.weixin.qq.com/miniprogram/dev/api/worker/Worker.html) wx.createWorker(string scriptPath)](https://developers.weixin.qq.com/miniprogram/dev/api/worker/wx.createWorker.html)\n         *\n         * 创建一个 [Worker 线程](https://developers.weixin.qq.com/miniprogram/dev/framework/workers.html)。目前限制最多只能创建一个 Worker，创建下一个 Worker 前请先调用 [Worker.terminate](https://developers.weixin.qq.com/miniprogram/dev/api/worker/Worker.terminate.html)\n         *\n         * 最低基础库： `1.9.90` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getStorageSync": {
        "prefix": "wx.getStorageSync",
        "body": [
            "wx.getStorageSync('${1:key}')"
        ],
        "description": "/** [any wx.getStorageSync(string key)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.getStorageSync.html)\n*\n* [wx.getStorage](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.getStorage.html) 的同步版本\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getStorage({\n  key: 'key',\n  success (res) {\n    console.log(res.data)\n  }\n})\n```\n*\n* ```js\ntry {\n  var value = wx.getStorageSync('key')\n  if (value) {\n    // Do something with return value\n  }\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.canIUse": {
        "prefix": "wx.canIUse",
        "body": [
            "wx.canIUse('${1:schema}')"
        ],
        "description": "/** [boolean wx.canIUse(string schema)](https://developers.weixin.qq.com/miniprogram/dev/api/base/wx.canIUse.html)\n*\n* 判断小程序的API，回调，参数，组件等是否在当前版本可用。\n*\n* **参数说明**\n*\n*\n* - `${API}` 代表 API 名字\n* - `${method}` 代表调用方式，有效值为return, success, object, callback\n* - `${param}` 代表参数或者返回值\n* - `${option}` 代表参数的可选值或者返回值的属性\n* - `${component}` 代表组件名字\n* - `${attribute}` 代表组件属性\n* - `${option}` 代表组件属性的可选值\n*\n* **示例代码**\n*\n*\n* ```js\n// 对象的属性或方法\nwx.canIUse('console.log')\nwx.canIUse('CameraContext.onCameraFrame')\nwx.canIUse('CameraFrameListener.start')\nwx.canIUse('Image.src')\n\n// wx接口参数、回调或者返回值\nwx.canIUse('openBluetoothAdapter')\nwx.canIUse('getSystemInfoSync.return.safeArea.left')\nwx.canIUse('getSystemInfo.success.screenWidth')\nwx.canIUse('showToast.object.image')\nwx.canIUse('onCompassChange.callback.direction')\nwx.canIUse('request.object.method.GET')\n\n// 组件的属性\nwx.canIUse('live-player')\nwx.canIUse('text.selectable')\nwx.canIUse('button.open-type.contact')\n```\n*\n* 最低基础库： `1.1.1` */",
        "detail": "function",
        "kind": 9
    },
    "wx.arrayBufferToBase64": {
        "prefix": "wx.arrayBufferToBase64",
        "body": [
            "wx.arrayBufferToBase64(${1:arrayBuffer})"
        ],
        "description": "/** [string wx.arrayBufferToBase64(ArrayBuffer arrayBuffer)](https://developers.weixin.qq.com/miniprogram/dev/api/base/wx.arrayBufferToBase64.html)\n         *\n         * 将 ArrayBuffer 对象转成 Base64 字符串\n         *\n         * 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.addCard": {
        "prefix": "wx.addCard",
        "body": [
            "wx.addCard({",
            "  cardList: [$1],",
            "})"
        ],
        "description": "/** [wx.addCard(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/card/wx.addCard.html)\n*\n* 批量添加卡券。只有通过 [认证](https://developers.weixin.qq.com/miniprogram/product/renzheng.html) 的小程序或文化互动类目的小游戏才能使用。更多文档请参考 [微信卡券接口文档](https://mp.weixin.qq.com/cgi-bin/announce?action=getannouncement&key=1490190158&version=1&lang=zh_CN&platform=2)。\n*\n* **cardExt 说明**\n*\n*\n* cardExt 是卡券的扩展参数，其值是一个 JSON 字符串。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.addCard({\n  cardList: [\n    {\n      cardId: '',\n      cardExt: '{\"code\": \"\", \"openid\": \"\", \"timestamp\": \"\", \"signature\":\"\"}'\n    }, {\n      cardId: '',\n      cardExt: '{\"code\": \"\", \"openid\": \"\", \"timestamp\": \"\", \"signature\":\"\"}'\n    }\n  ],\n  success (res) {\n    console.log(res.cardList) // 卡券添加结果\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.addPhoneContact": {
        "prefix": "wx.addPhoneContact",
        "body": [
            "wx.addPhoneContact({",
            "  firstName: '${1:firstName}',",
            "})"
        ],
        "description": "/** [wx.addPhoneContact(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/contact/wx.addPhoneContact.html)\n         *\n         * 添加手机通讯录联系人。用户可以选择将该表单以「新增联系人」或「添加到已有联系人」的方式，写入手机系统通讯录。\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.authorize": {
        "prefix": "wx.authorize",
        "body": [
            "wx.authorize({",
            "  scope: '${1:scope}',",
            "})"
        ],
        "description": "/** [wx.authorize(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/authorize/wx.authorize.html)\n*\n* 提前向用户发起授权请求。调用后会立刻弹窗询问用户是否同意授权小程序使用某项功能或获取用户的某些数据，但不会实际调用对应接口。如果用户之前已经同意授权，则不会出现弹窗，直接返回成功。更多用法详见 [用户授权](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/authorize.html)。\n*\n* **示例代码**\n*\n*\n* ```js\n// 可以通过 wx.getSetting 先查询一下用户是否授权了 \"scope.record\" 这个 scope\nwx.getSetting({\n  success(res) {\n    if (!res.authSetting['scope.record']) {\n      wx.authorize({\n        scope: 'scope.record',\n        success () {\n          // 用户已经同意小程序使用录音功能，后续调用 wx.startRecord 接口不会弹窗询问\n          wx.startRecord()\n        }\n      })\n    }\n  }\n})\n```\n*\n* 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.canvasGetImageData": {
        "prefix": "wx.canvasGetImageData",
        "body": [
            "wx.canvasGetImageData({",
            "  canvasId: '${1:canvasId}',",
            "  height: ${2:0},",
            "  width: ${3:0},",
            "  x: ${4:0},",
            "  y: ${5:0},",
            "}, ${7:component})"
        ],
        "description": "/** [wx.canvasGetImageData(Object object, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/wx.canvasGetImageData.html)\n*\n* 获取 canvas 区域隐含的像素数据。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/yufmRjmZ7W8f)\n*\n* ```js\nwx.canvasGetImageData({\n  canvasId: 'myCanvas',\n  x: 0,\n  y: 0,\n  width: 100,\n  height: 100,\n  success(res) {\n    console.log(res.width) // 100\n    console.log(res.height) // 100\n    console.log(res.data instanceof Uint8ClampedArray) // true\n    console.log(res.data.length) // 100 * 100 * 4\n  }\n})\n```\n*\n* 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.canvasPutImageData": {
        "prefix": "wx.canvasPutImageData",
        "body": [
            "wx.canvasPutImageData({",
            "  canvasId: '${1:canvasId}',",
            "  data: ${2:data},",
            "  height: ${3:0},",
            "  width: ${4:0},",
            "  x: ${5:0},",
            "  y: ${6:0},",
            "}, ${8:component})"
        ],
        "description": "/** [wx.canvasPutImageData(Object object, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/wx.canvasPutImageData.html)\n         *\n         * 将像素数据绘制到画布。在自定义组件下，第二个参数传入自定义组件实例 this，以操作组件内 <canvas> 组件\n         *\n         * 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.canvasToTempFilePath": {
        "prefix": "wx.canvasToTempFilePath",
        "body": [
            "wx.canvasToTempFilePath({",
            "  canvas: '${1:canvas}',",
            "  canvasId: '${2:canvasId}',",
            "  quality: ${3:0},",
            "}, ${5:component})"
        ],
        "description": "/** [wx.canvasToTempFilePath(Object object, Object this)](https://developers.weixin.qq.com/miniprogram/dev/api/canvas/wx.canvasToTempFilePath.html)\n         *\n         * 把当前画布指定区域的内容导出生成指定大小的图片。在 `draw()` 回调里调用该方法才能保证图片导出成功。 */",
        "detail": "function",
        "kind": 9
    },
    "wx.checkIsSoterEnrolledInDevice": {
        "prefix": "wx.checkIsSoterEnrolledInDevice",
        "body": [
            "wx.checkIsSoterEnrolledInDevice({",
            "  checkAuthMode: ${1:checkAuthMode},",
            "})"
        ],
        "description": "/** [wx.checkIsSoterEnrolledInDevice(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/soter/wx.checkIsSoterEnrolledInDevice.html)\n*\n* 获取设备内是否录入如指纹等生物信息的接口\n*\n* **示例代码**\n*\n*\n* ```js\nwx.checkIsSoterEnrolledInDevice({\n  checkAuthMode: 'fingerPrint',\n  success(res) {\n    console.log(res.isEnrolled)\n  }\n})\n```\n*\n* 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.checkIsSupportSoterAuthentication": {
        "prefix": "wx.checkIsSupportSoterAuthentication",
        "body": [
            "wx.checkIsSupportSoterAuthentication({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.checkIsSupportSoterAuthentication(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/soter/wx.checkIsSupportSoterAuthentication.html)\n*\n* 获取本机支持的 SOTER 生物认证方式\n*\n* **示例代码**\n*\n*\n* ```js\nwx.checkIsSupportSoterAuthentication({\n  success(res) {\n    // res.supportMode = [] 不具备任何被SOTER支持的生物识别方式\n    // res.supportMode = ['fingerPrint'] 只支持指纹识别\n    // res.supportMode = ['fingerPrint', 'facial'] 支持指纹识别和人脸识别\n  }\n})\n```\n*\n* 最低基础库： `1.5.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.checkSession": {
        "prefix": "wx.checkSession",
        "body": [
            "wx.checkSession({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.checkSession(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.checkSession.html)\n*\n* 检查登录态是否过期。\n*\n* 通过 wx.login 接口获得的用户登录态拥有一定的时效性。用户越久未使用小程序，用户登录态越有可能失效。反之如果用户一直在使用小程序，则用户登录态一直保持有效。具体时效逻辑由微信维护，对开发者透明。开发者只需要调用 wx.checkSession 接口检测当前用户登录态是否有效。\n*\n* 登录态过期后开发者可以再调用 wx.login 获取新的用户登录态。调用成功说明当前 session_key 未过期，调用失败说明 session_key 已过期。更多使用方法详见 [小程序登录](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html)。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.checkSession({\n  success () {\n    //session_key 未过期，并且在本生命周期一直有效\n  },\n  fail () {\n    // session_key 已经失效，需要重新执行登录流程\n    wx.login() //重新登录\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.chooseAddress": {
        "prefix": "wx.chooseAddress",
        "body": [
            "wx.chooseAddress({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.chooseAddress(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/address/wx.chooseAddress.html)\n*\n* 获取用户收货地址。调起用户编辑收货地址原生界面，并在编辑完成后返回用户选择的地址。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/024hHnmd772y)\n* ```js\nwx.chooseAddress({\n  success (res) {\n    console.log(res.userName)\n    console.log(res.postalCode)\n    console.log(res.provinceName)\n    console.log(res.cityName)\n    console.log(res.countyName)\n    console.log(res.detailInfo)\n    console.log(res.nationalCode)\n    console.log(res.telNumber)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.chooseImage": {
        "prefix": "wx.chooseImage",
        "body": [
            "wx.chooseImage({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.chooseImage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.chooseImage.html)\n*\n* 从本地相册选择图片或使用相机拍照。\n*\n* ****\n*\n* ```js\nwx.chooseImage({\n  count: 1,\n  sizeType: ['original', 'compressed'],\n  sourceType: ['album', 'camera'],\n  success (res) {\n    // tempFilePath可以作为img标签的src属性显示图片\n    const tempFilePaths = res.tempFilePaths\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.chooseInvoice": {
        "prefix": "wx.chooseInvoice",
        "body": [
            "wx.chooseInvoice({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.chooseInvoice(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/invoice/wx.chooseInvoice.html)\n         *\n         * 选择用户已有的发票。\n         *\n         * **通过 cardId 和 encryptCode 获得报销发票的信息**\n         *\n         *\n         * 请参考[微信电子发票文档](https://mp.weixin.qq.com/wiki?t=resource/res_main&id=21517918939oae3U)中，「查询报销发票信息」部分。\n         * 其中 `access_token` 的获取请参考[auth.getAccessToken](https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html)文档\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.chooseInvoiceTitle": {
        "prefix": "wx.chooseInvoiceTitle",
        "body": [
            "wx.chooseInvoiceTitle({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.chooseInvoiceTitle(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/invoice/wx.chooseInvoiceTitle.html)\n*\n* 选择用户的发票抬头。当前小程序必须关联一个公众号，且这个公众号是完成了[微信认证](https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1496554031_RD4xe)的，才能调用 chooseInvoiceTitle。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/GJ4S9nmQ7x2E)\n*\n* ```js\nwx.chooseInvoiceTitle({\n  success(res) {}\n})\n```\n*\n* 最低基础库： `1.5.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.chooseLocation": {
        "prefix": "wx.chooseLocation",
        "body": [
            "wx.chooseLocation({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.chooseLocation(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.chooseLocation.html)\n         *\n         * 打开地图选择位置。 */",
        "detail": "function",
        "kind": 9
    },
    "wx.chooseMessageFile": {
        "prefix": "wx.chooseMessageFile",
        "body": [
            "wx.chooseMessageFile({",
            "  count: ${1:0},",
            "})"
        ],
        "description": "/** [wx.chooseMessageFile(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.chooseMessageFile.html)\n*\n* 从客户端会话选择文件。\n*\n* ****\n*\n* ```js\nwx.chooseMessageFile({\n  count: 10,\n  type: 'image',\n  success (res) {\n    // tempFilePath可以作为img标签的src属性显示图片\n    const tempFilePaths = res.tempFilePaths\n  }\n})\n```\n*\n* 最低基础库： `2.5.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.chooseVideo": {
        "prefix": "wx.chooseVideo",
        "body": [
            "wx.chooseVideo({",
            "  camera: ${1:camera},",
            "})"
        ],
        "description": "/** [wx.chooseVideo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/video/wx.chooseVideo.html)\n*\n* 拍摄视频或从手机相册中选视频。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.chooseVideo({\n  sourceType: ['album','camera'],\n  maxDuration: 60,\n  camera: 'back',\n  success(res) {\n    console.log(res.tempFilePath)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.clearStorage": {
        "prefix": "wx.clearStorage",
        "body": [
            "wx.clearStorage({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.clearStorage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.clearStorage.html)\n*\n* 清理本地数据缓存\n*\n* **示例代码**\n*\n*\n* ```js\nwx.clearStorage()\n```\n*\n* ```js\ntry {\n  wx.clearStorageSync()\n} catch(e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.clearStorageSync": {
        "prefix": "wx.clearStorageSync",
        "body": [
            "wx.clearStorageSync()"
        ],
        "description": "/** [wx.clearStorageSync()](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.clearStorageSync.html)\n*\n* [wx.clearStorage](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.clearStorage.html) 的同步版本\n*\n* **示例代码**\n*\n*\n* ```js\nwx.clearStorage()\n```\n*\n* ```js\ntry {\n  wx.clearStorageSync()\n} catch(e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.closeBLEConnection": {
        "prefix": "wx.closeBLEConnection",
        "body": [
            "wx.closeBLEConnection({",
            "  deviceId: '${1:deviceId}',",
            "})"
        ],
        "description": "/** [wx.closeBLEConnection(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.closeBLEConnection.html)\n*\n* 断开与低功耗蓝牙设备的连接。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.closeBLEConnection({\n  deviceId,\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.closeBluetoothAdapter": {
        "prefix": "wx.closeBluetoothAdapter",
        "body": [
            "wx.closeBluetoothAdapter({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.closeBluetoothAdapter(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.closeBluetoothAdapter.html)\n*\n* 关闭蓝牙模块。调用该方法将断开所有已建立的连接并释放系统资源。建议在使用蓝牙流程后，与 [wx.openBluetoothAdapter](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.openBluetoothAdapter.html) 成对调用。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.closeBluetoothAdapter({\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.closeSocket": {
        "prefix": "wx.closeSocket",
        "body": [
            "wx.closeSocket({",
            "  code: ${1:0},",
            "})"
        ],
        "description": "/** [wx.closeSocket(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/wx.closeSocket.html)\n*\n* 关闭 WebSocket 连接\n*\n* **示例代码**\n*\n*\n* ```js\nwx.connectSocket({\n  url: 'test.php'\n})\n\n//注意这里有时序问题，\n//如果 wx.connectSocket 还没回调 wx.onSocketOpen，而先调用 wx.closeSocket，那么就做不到关闭 WebSocket 的目的。\n//必须在 WebSocket 打开期间调用 wx.closeSocket 才能关闭。\nwx.onSocketOpen(function() {\n  wx.closeSocket()\n})\n\nwx.onSocketClose(function(res) {\n  console.log('WebSocket 已关闭！')\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.compressImage": {
        "prefix": "wx.compressImage",
        "body": [
            "wx.compressImage({",
            "  src: '${1:src}',",
            "})"
        ],
        "description": "/** [wx.compressImage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.compressImage.html)\n*\n* 压缩图片接口，可选压缩质量\n*\n* **示例代码**\n*\n*\n* ```js\nwx.compressImage({\n  src: '', // 图片路径\n  quality: 80 // 压缩质量\n})\n```\n*\n* 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.connectWifi": {
        "prefix": "wx.connectWifi",
        "body": [
            "wx.connectWifi({",
            "  SSID: '${1:SSID}',",
            "  password: '${2:password}',",
            "})"
        ],
        "description": "/** [wx.connectWifi(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.connectWifi.html)\n*\n* 连接 Wi-Fi。若已知 Wi-Fi 信息，可以直接利用该接口连接。仅 Android 与 iOS 11 以上版本支持。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.connectWifi({\n  SSID: '',\n  password: '',\n  success (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.createBLEConnection": {
        "prefix": "wx.createBLEConnection",
        "body": [
            "wx.createBLEConnection({",
            "  deviceId: '${1:deviceId}',",
            "})"
        ],
        "description": "/** [wx.createBLEConnection(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.createBLEConnection.html)\n*\n* 连接低功耗蓝牙设备。\n*\n* 若小程序在之前已有搜索过某个蓝牙设备，并成功建立连接，可直接传入之前搜索获取的 deviceId 直接尝试连接该设备，无需进行搜索操作。\n*\n* **注意**\n*\n*\n* - 请保证尽量成对的调用 `createBLEConnection` 和 `closeBLEConnection` 接口。安卓如果多次调用 `createBLEConnection` 创建连接，有可能导致系统持有同一设备多个连接的实例，导致调用 `closeBLEConnection` 的时候并不能真正的断开与设备的连接。\n* - 蓝牙连接随时可能断开，建议监听 [wx.onBLEConnectionStateChange](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.onBLEConnectionStateChange.html) 回调事件，当蓝牙设备断开时按需执行重连操作\n* - 若对未连接的设备或已断开连接的设备调用数据读写操作的接口，会返回 10006 错误，建议进行重连操作。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.createBLEConnection({\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId,\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getAvailableAudioSources": {
        "prefix": "wx.getAvailableAudioSources",
        "body": [
            "wx.getAvailableAudioSources({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getAvailableAudioSources(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.getAvailableAudioSources.html)\n         *\n         * 获取当前支持的音频输入源\n         *\n         * 最低基础库： `2.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getBLEDeviceCharacteristics": {
        "prefix": "wx.getBLEDeviceCharacteristics",
        "body": [
            "wx.getBLEDeviceCharacteristics({",
            "  deviceId: '${1:deviceId}',",
            "  serviceId: '${2:serviceId}',",
            "})"
        ],
        "description": "/** [wx.getBLEDeviceCharacteristics(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.getBLEDeviceCharacteristics.html)\n*\n* 获取蓝牙设备某个服务中所有特征值(characteristic)。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getBLEDeviceCharacteristics({\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId,\n  success (res) {\n    console.log('device getBLEDeviceCharacteristics:', res.characteristics)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getBLEDeviceServices": {
        "prefix": "wx.getBLEDeviceServices",
        "body": [
            "wx.getBLEDeviceServices({",
            "  deviceId: '${1:deviceId}',",
            "})"
        ],
        "description": "/** [wx.getBLEDeviceServices(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.getBLEDeviceServices.html)\n*\n* 获取蓝牙设备所有服务(service)。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getBLEDeviceServices({\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId,\n  success (res) {\n    console.log('device services:', res.services)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getBackgroundAudioPlayerState": {
        "prefix": "wx.getBackgroundAudioPlayerState",
        "body": [
            "wx.getBackgroundAudioPlayerState({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getBackgroundAudioPlayerState(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.getBackgroundAudioPlayerState.html)\n*\n* 获取后台音乐播放状态。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getBackgroundAudioPlayerState({\n  success (res) {\n    const status = res.status\n    const dataUrl = res.dataUrl\n    const currentPosition = res.currentPosition\n    const duration = res.duration\n    const downloadPercent = res.downloadPercent\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getBackgroundFetchData": {
        "prefix": "wx.getBackgroundFetchData",
        "body": [
            "wx.getBackgroundFetchData({",
            "  fetchType: '${1:fetchType}',",
            "})"
        ],
        "description": "/** [wx.getBackgroundFetchData(object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/background-fetch/wx.getBackgroundFetchData.html)\n         *\n         * 拉取 backgroundFetch 客户端缓存数据\n         *\n         * 最低基础库： `2.8.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getBackgroundFetchToken": {
        "prefix": "wx.getBackgroundFetchToken",
        "body": [
            "wx.getBackgroundFetchToken({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getBackgroundFetchToken(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/background-fetch/wx.getBackgroundFetchToken.html)\n         *\n         * 获取设置过的自定义登录态。若无，则返回 fail。\n         *\n         * 最低基础库： `2.8.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getBatteryInfo": {
        "prefix": "wx.getBatteryInfo",
        "body": [
            "wx.getBatteryInfo({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getBatteryInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/battery/wx.getBatteryInfo.html)\n         *\n         * 获取设备电量。同步 API [wx.getBatteryInfoSync](https://developers.weixin.qq.com/miniprogram/dev/api/device/battery/wx.getBatteryInfoSync.html) 在 iOS 上不可用。 */",
        "detail": "function",
        "kind": 9
    },
    "wx.getBeacons": {
        "prefix": "wx.getBeacons",
        "body": [
            "wx.getBeacons({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getBeacons(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/ibeacon/wx.getBeacons.html)\n         *\n         * 获取所有已搜索到的 iBeacon 设备\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getBluetoothAdapterState": {
        "prefix": "wx.getBluetoothAdapterState",
        "body": [
            "wx.getBluetoothAdapterState({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getBluetoothAdapterState(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.getBluetoothAdapterState.html)\n*\n* 获取本机蓝牙适配器状态。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getBluetoothAdapterState({\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getBluetoothDevices": {
        "prefix": "wx.getBluetoothDevices",
        "body": [
            "wx.getBluetoothDevices({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getBluetoothDevices(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.getBluetoothDevices.html)\n*\n* 获取在蓝牙模块生效期间所有已发现的蓝牙设备。包括已经和本机处于连接状态的设备。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n*\n* ```js\n// ArrayBuffer转16进度字符串示例\nfunction ab2hex(buffer) {\n  var hexArr = Array.prototype.map.call(\n    new Uint8Array(buffer),\n    function(bit) {\n      return ('00' + bit.toString(16)).slice(-2)\n    }\n  )\n  return hexArr.join('');\n}\nwx.getBluetoothDevices({\n  success: function (res) {\n    console.log(res)\n    if (res.devices[0]) {\n      console.log(ab2hex(res.devices[0].advertisData))\n    }\n  }\n})\n```\n*\n* **注意事项**\n*\n*\n* - 该接口获取到的设备列表为**蓝牙模块生效期间所有搜索到的蓝牙设备**，若在蓝牙模块使用流程结束后未及时调用 [wx.closeBluetoothAdapter](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.closeBluetoothAdapter.html) 释放资源，会存在调用该接口会返回之前的蓝牙使用流程中搜索到的蓝牙设备，可能设备已经不在用户身边，无法连接。\n* - 蓝牙设备在被搜索到时，系统返回的 name 字段一般为广播包中的 LocalName 字段中的设备名称，而如果与蓝牙设备建立连接，系统返回的 name 字段会改为从蓝牙设备上获取到的 `GattName`。若需要动态改变设备名称并展示，建议使用 `localName` 字段。\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getClipboardData": {
        "prefix": "wx.getClipboardData",
        "body": [
            "wx.getClipboardData({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getClipboardData(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/clipboard/wx.getClipboardData.html)\n*\n* 获取系统剪贴板的内容\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getClipboardData({\n  success (res){\n    console.log(res.data)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getConnectedBluetoothDevices": {
        "prefix": "wx.getConnectedBluetoothDevices",
        "body": [
            "wx.getConnectedBluetoothDevices({",
            "  services: [$1],",
            "})"
        ],
        "description": "/** [wx.getConnectedBluetoothDevices(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.getConnectedBluetoothDevices.html)\n*\n* 根据 uuid 获取处于已连接状态的设备。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.getConnectedBluetoothDevices({\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getConnectedWifi": {
        "prefix": "wx.getConnectedWifi",
        "body": [
            "wx.getConnectedWifi({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getConnectedWifi(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.getConnectedWifi.html)\n         *\n         * 获取已连接中的 Wi-Fi 信息。\n         *\n         * 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getExtConfig": {
        "prefix": "wx.getExtConfig",
        "body": [
            "wx.getExtConfig({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getExtConfig(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ext/wx.getExtConfig.html)\n*\n* 获取[第三方平台](https://developers.weixin.qq.com/miniprogram/dev/devtools/ext.html)自定义的数据字段。\n*\n* **Tips**\n*\n*\n* 1. 本接口暂时无法通过 [wx.canIUse](https://developers.weixin.qq.com/miniprogram/dev/api/base/wx.canIUse.html) 判断是否兼容，开发者需要自行判断 [wx.getExtConfig](https://developers.weixin.qq.com/miniprogram/dev/api/ext/wx.getExtConfig.html) 是否存在来兼容\n*\n* ****\n*\n* ```js\nif (wx.getExtConfig) {\n  wx.getExtConfig({\n    success (res) {\n      console.log(res.extConfig)\n    }\n  })\n}\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getFileInfo": {
        "prefix": "wx.getFileInfo",
        "body": [
            "wx.getFileInfo({",
            "  filePath: '${1:filePath}',",
            "})"
        ],
        "description": "/** [wx.getFileInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.getFileInfo.html)\n*\n* 获取文件信息\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getFileInfo({\n  success (res) {\n    console.log(res.size)\n    console.log(res.digest)\n  }\n})\n```\n*\n* 最低基础库： `1.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getHCEState": {
        "prefix": "wx.getHCEState",
        "body": [
            "wx.getHCEState({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getHCEState(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/nfc/wx.getHCEState.html)\n*\n* 判断当前设备是否支持 HCE 能力。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getHCEState({\n  success (res) {\n    console.log(res.errCode)\n  }\n})\n```\n*\n* 最低基础库： `1.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getImageInfo": {
        "prefix": "wx.getImageInfo",
        "body": [
            "wx.getImageInfo({",
            "  src: '${1:src}',",
            "})"
        ],
        "description": "/** [wx.getImageInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.getImageInfo.html)\n*\n* 获取图片信息。网络图片需先配置download域名才能生效。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/Kd47Sbmr6yYu)\n*\n* ```js\nwx.getImageInfo({\n  src: 'images/a.jpg',\n  success (res) {\n    console.log(res.width)\n    console.log(res.height)\n  }\n})\n\nwx.chooseImage({\n  success (res) {\n    wx.getImageInfo({\n      src: res.tempFilePaths[0],\n      success (res) {\n        console.log(res.width)\n        console.log(res.height)\n      }\n    })\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getLocation": {
        "prefix": "wx.getLocation",
        "body": [
            "wx.getLocation({",
            "  altitude: '${1:altitude}',",
            "})"
        ],
        "description": "/** [wx.getLocation(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.getLocation.html)\n*\n* 获取当前的地理位置、速度。当用户离开小程序后，此接口无法调用。开启高精度定位，接口耗时会增加，可指定 highAccuracyExpireTime 作为超时时间。\n*\n* **示例代码**\n*\n*\n*  ```js\n wx.getLocation({\n  type: 'wgs84',\n  success (res) {\n    const latitude = res.latitude\n    const longitude = res.longitude\n    const speed = res.speed\n    const accuracy = res.accuracy\n  }\n})\n ```\n*\n* **注意**\n*\n*\n* - 工具中定位模拟使用IP定位，可能会有一定误差。且工具目前仅支持 gcj02 坐标。\n* - 使用第三方服务进行逆地址解析时，请确认第三方服务默认的坐标系，正确进行坐标转换。 */",
        "detail": "function",
        "kind": 9
    },
    "wx.getNetworkType": {
        "prefix": "wx.getNetworkType",
        "body": [
            "wx.getNetworkType({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getNetworkType(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/network/wx.getNetworkType.html)\n*\n* 获取网络类型\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getNetworkType({\n  success (res) {\n    const networkType = res.networkType\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getSavedFileInfo": {
        "prefix": "wx.getSavedFileInfo",
        "body": [
            "wx.getSavedFileInfo({",
            "  filePath: '${1:filePath}',",
            "})"
        ],
        "description": "/** [wx.getSavedFileInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.getSavedFileInfo.html)\n*\n* 获取本地文件的文件信息。此接口只能用于获取已保存到本地的文件，若需要获取临时文件信息，请使用 [wx.getFileInfo()](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.getFileInfo.html) 接口。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getSavedFileList({\n  success (res) {\n    console.log(res.fileList)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getSavedFileList": {
        "prefix": "wx.getSavedFileList",
        "body": [
            "wx.getSavedFileList({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getSavedFileList(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.getSavedFileList.html)\n*\n* 获取该小程序下已保存的本地缓存文件列表\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getSavedFileList({\n  success (res) {\n    console.log(res.fileList)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getScreenBrightness": {
        "prefix": "wx.getScreenBrightness",
        "body": [
            "wx.getScreenBrightness({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getScreenBrightness(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/screen/wx.getScreenBrightness.html)\n         *\n         * 获取屏幕亮度\n         *\n         * **说明**\n         *\n         *\n         * - 若安卓系统设置中开启了自动调节亮度功能，则屏幕亮度会根据光线自动调整，该接口仅能获取自动调节亮度之前的值，而非实时的亮度值。\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getSelectedTextRange": {
        "prefix": "wx.getSelectedTextRange",
        "body": [
            "wx.getSelectedTextRange({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getSelectedTextRange(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/keyboard/wx.getSelectedTextRange.html)\n*\n* 在input、textarea等focus之后，获取输入框的光标位置。注意：只有在focus的时候调用此接口才有效。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getSelectedTextRange({\n  complete: res => {\n    console.log('getSelectedTextRange res', res.start, res.end)\n  }\n})\n```\n*\n* 最低基础库： `2.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getSetting": {
        "prefix": "wx.getSetting",
        "body": [
            "wx.getSetting({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getSetting(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/setting/wx.getSetting.html)\n*\n* 获取用户的当前设置。**返回值中只会出现小程序已经向用户请求过的[权限](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/authorize.html)**。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getSetting({\n  success (res) {\n    console.log(res.authSetting)\n    // res.authSetting = {\n    //   \"scope.userInfo\": true,\n    //   \"scope.userLocation\": true\n    // }\n  }\n})\n```\n*\n* 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getShareInfo": {
        "prefix": "wx.getShareInfo",
        "body": [
            "wx.getShareInfo({",
            "  shareTicket: '${1:shareTicket}',",
            "})"
        ],
        "description": "/** [wx.getShareInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/share/wx.getShareInfo.html)\n*\n* 获取转发详细信息\n*\n* **示例代码**\n*\n*\n* 敏感数据有两种获取方式，一是使用 [加密数据解密算法]((open-ability/signature#加密数据解密算法)) 。\n* 获取得到的开放数据为以下 json 结构（其中 openGId 为当前群的唯一标识）：\n*\n* ```json\n{\n \"openGId\": \"OPENGID\"\n}\n```\n*\n* **Tips**\n*\n*\n* - 如需要展示群名称，可以使用[开放数据组件](https://developers.weixin.qq.com/miniprogram/dev/component/open-ability/open-data.html)\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getStorage": {
        "prefix": "wx.getStorage",
        "body": [
            "wx.getStorage({",
            "  key: '${1:key}',",
            "})"
        ],
        "description": "/** [wx.getStorage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.getStorage.html)\n*\n* 从本地缓存中异步获取指定 key 的内容\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getStorage({\n  key: 'key',\n  success (res) {\n    console.log(res.data)\n  }\n})\n```\n*\n* ```js\ntry {\n  var value = wx.getStorageSync('key')\n  if (value) {\n    // Do something with return value\n  }\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getStorageInfo": {
        "prefix": "wx.getStorageInfo",
        "body": [
            "wx.getStorageInfo({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getStorageInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.getStorageInfo.html)\n*\n* 异步获取当前storage的相关信息\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getStorageInfo({\n  success (res) {\n    console.log(res.keys)\n    console.log(res.currentSize)\n    console.log(res.limitSize)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getStorageInfoSync()\n  console.log(res.keys)\n  console.log(res.currentSize)\n  console.log(res.limitSize)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getSystemInfo": {
        "prefix": "wx.getSystemInfo",
        "body": [
            "wx.getSystemInfo({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getSystemInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/base/system/system-info/wx.getSystemInfo.html)\n*\n* 获取系统信息\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getSystemInfo({\n  success (res) {\n    console.log(res.model)\n    console.log(res.pixelRatio)\n    console.log(res.windowWidth)\n    console.log(res.windowHeight)\n    console.log(res.language)\n    console.log(res.version)\n    console.log(res.platform)\n  }\n})\n```\n*\n* ```js\ntry {\n  const res = wx.getSystemInfoSync()\n  console.log(res.model)\n  console.log(res.pixelRatio)\n  console.log(res.windowWidth)\n  console.log(res.windowHeight)\n  console.log(res.language)\n  console.log(res.version)\n  console.log(res.platform)\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getUserInfo": {
        "prefix": "wx.getUserInfo",
        "body": [
            "wx.getUserInfo({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getUserInfo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/user-info/wx.getUserInfo.html)\n*\n* 获取用户信息。\n*\n* **接口调整说明**\n*\n*\n* 在用户未授权过的情况下调用此接口，将不再出现授权弹窗，会直接进入 fail 回调（详见[《公告》](https://developers.weixin.qq.com/community/develop/doc/0000a26e1aca6012e896a517556c01))。在用户已授权的情况下调用此接口，可成功获取用户信息。\n*\n* **示例代码**\n*\n*\n*\n* ```js\n// 必须是在用户已经授权的情况下调用\nwx.getUserInfo({\n  success: function(res) {\n    var userInfo = res.userInfo\n    var nickName = userInfo.nickName\n    var avatarUrl = userInfo.avatarUrl\n    var gender = userInfo.gender //性别 0：未知、1：男、2：女\n    var province = userInfo.province\n    var city = userInfo.city\n    var country = userInfo.country\n  }\n})\n```\n*\n* 敏感数据有两种获取方式，一是使用 [加密数据解密算法]((open-ability/signature#加密数据解密算法)) 。\n* 获取得到的开放数据为以下 json 结构：\n*\n* ```json\n{\n  \"openId\": \"OPENID\",\n  \"nickName\": \"NICKNAME\",\n  \"gender\": GENDER,\n  \"city\": \"CITY\",\n  \"province\": \"PROVINCE\",\n  \"country\": \"COUNTRY\",\n  \"avatarUrl\": \"AVATARURL\",\n  \"unionId\": \"UNIONID\",\n  \"watermark\": {\n    \"appid\":\"APPID\",\n    \"timestamp\":TIMESTAMP\n  }\n}\n```\n*\n* **小程序用户信息组件示例代码**\n*\n*\n* ```html\n* <!-- 如果只是展示用户头像昵称，可以使用 <open-data /> 组件 -->\n* <open-data type=\"userAvatarUrl\"></open-data>\n* <open-data type=\"userNickName\"></open-data>\n* <!-- 需要使用 button 来授权登录 -->\n* <button wx:if=\"{{canIUse}}\" open-type=\"getUserInfo\" bindgetuserinfo=\"bindGetUserInfo\">授权登录</button>\n* <view wx:else>请升级微信版本</view>\n* ```\n*\n* ```js\nPage({\n  data: {\n    canIUse: wx.canIUse('button.open-type.getUserInfo')\n  },\n  onLoad: function() {\n    // 查看是否授权\n    wx.getSetting({\n      success (res){\n        if (res.authSetting['scope.userInfo']) {\n          // 已经授权，可以直接调用 getUserInfo 获取头像昵称\n          wx.getUserInfo({\n            success: function(res) {\n              console.log(res.userInfo)\n            }\n          })\n        }\n      }\n    })\n  },\n  bindGetUserInfo (e) {\n    console.log(e.detail.userInfo)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getWeRunData": {
        "prefix": "wx.getWeRunData",
        "body": [
            "wx.getWeRunData({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getWeRunData(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/werun/wx.getWeRunData.html)\n*\n* 获取用户过去三十天微信运动步数。需要先调用 [wx.login](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html) 接口。步数信息会在用户主动进入小程序时更新。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getWeRunData({\n  success (res) {\n    // 拿 encryptedData 到开发者后台解密开放数据\n    const encryptedData = res.encryptedData\n    // 或拿 cloudID 通过云调用直接获取开放数据\n    const cloudID = res.cloudID\n  }\n})\n```\n*\n* **开放数据 JSON 结构**\n*\n*\n*\n* 敏感数据有两种获取方式，一是使用 [加密数据解密算法]((open-ability/signature#加密数据解密算法)) 。\n* 获取得到的开放数据为以下 json 结构：\n*\n* ```json\n{\n  \"stepInfoList\": [\n    {\n      \"timestamp\": 1445866601,\n      \"step\": 100\n    },\n    {\n      \"timestamp\": 1445876601,\n      \"step\": 120\n    }\n  ]\n}\n```\n*\n* stepInfoList 中，每一项结构如下：\n*\n* | 属性 | 类型 | 说明 |\n* | --- | ---- | --- |\n* | timestamp | number | 时间戳，表示数据对应的时间 |\n* | step | number | 微信运动步数 |\n*\n* 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.getWifiList": {
        "prefix": "wx.getWifiList",
        "body": [
            "wx.getWifiList({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.getWifiList(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.getWifiList.html)\n         *\n         * 请求获取 Wi-Fi 列表。在 `onGetWifiList` 注册的回调中返回 `wifiList` 数据。 **Android 调用前需要 [用户授权](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/authorize.html) scope.userLocation。**\n         *\n         * iOS 将跳转到系统的 Wi-Fi 界面，Android 不会跳转。 iOS 11.0 及 iOS 11.1 两个版本因系统问题，该方法失效。但在 iOS 11.2 中已修复。\n         *\n         * 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.hideHomeButton": {
        "prefix": "wx.hideHomeButton",
        "body": [
            "wx.hideHomeButton({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.hideHomeButton(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/navigation-bar/wx.hideHomeButton.html)\n         *\n         * 隐藏返回首页按钮。微信7.0.7版本起，当用户打开的小程序最底层页面是非首页时，默认展示“返回首页”按钮，开发者可在页面 onShow 中调用 hideHomeButton 进行隐藏。\n         *\n         * 最低基础库： `2.8.3` */",
        "detail": "function",
        "kind": 9
    },
    "wx.hideKeyboard": {
        "prefix": "wx.hideKeyboard",
        "body": [
            "wx.hideKeyboard({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.hideKeyboard(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/keyboard/wx.hideKeyboard.html)\n*\n* 在input、textarea等focus拉起键盘之后，手动调用此接口收起键盘\n*\n* **示例代码**\n*\n*\n* ```js\nwx.hideKeyboard({\n  complete: res => {\n    console.log('hideKeyboard res', res)\n  }\n})\n```\n*\n* 最低基础库： `2.8.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.hideLoading": {
        "prefix": "wx.hideLoading",
        "body": [
            "wx.hideLoading({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.hideLoading(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.hideLoading.html)\n         *\n         * 隐藏 loading 提示框\n         *\n         * 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.hideNavigationBarLoading": {
        "prefix": "wx.hideNavigationBarLoading",
        "body": [
            "wx.hideNavigationBarLoading({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.hideNavigationBarLoading(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/navigation-bar/wx.hideNavigationBarLoading.html)\n         *\n         * 在当前页面隐藏导航条加载动画 */",
        "detail": "function",
        "kind": 9
    },
    "wx.hideShareMenu": {
        "prefix": "wx.hideShareMenu",
        "body": [
            "wx.hideShareMenu({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.hideShareMenu(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/share/wx.hideShareMenu.html)\n*\n* 隐藏转发按钮\n*\n* **示例代码**\n*\n*\n* ```js\nwx.hideShareMenu()\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.hideTabBar": {
        "prefix": "wx.hideTabBar",
        "body": [
            "wx.hideTabBar({",
            "  animation: ${1:true},",
            "})"
        ],
        "description": "/** [wx.hideTabBar(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.hideTabBar.html)\n         *\n         * 隐藏 tabBar\n         *\n         * 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.hideTabBarRedDot": {
        "prefix": "wx.hideTabBarRedDot",
        "body": [
            "wx.hideTabBarRedDot({",
            "  index: ${1:0},",
            "})"
        ],
        "description": "/** [wx.hideTabBarRedDot(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.hideTabBarRedDot.html)\n         *\n         * 隐藏 tabBar 某一项的右上角的红点\n         *\n         * 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.hideToast": {
        "prefix": "wx.hideToast",
        "body": [
            "wx.hideToast({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.hideToast(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.hideToast.html)\n         *\n         * 隐藏消息提示框 */",
        "detail": "function",
        "kind": 9
    },
    "wx.loadFontFace": {
        "prefix": "wx.loadFontFace",
        "body": [
            "wx.loadFontFace({",
            "  family: '${1:family}',",
            "  source: '${2:source}',",
            "})"
        ],
        "description": "/** [wx.loadFontFace(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/font/wx.loadFontFace.html)\n*\n* 动态加载网络字体。文件地址需为下载类型。iOS 仅支持 https 格式文件地址。\n*\n* 注意：\n* 1. 字体文件返回的 contet-type 参考 [font](https://www.iana.org/assignments/media-types/media-types.xhtml#font)，格式不正确时会解析失败。\n* 2. 字体链接必须是https（ios不支持http)\n* 3. 字体链接必须是同源下的，或开启了cors支持，小程序的域名是`servicewechat.com`\n* 4. canvas等原生组件不支持使用接口添加的字体\n* 5. 工具里提示 Faild to load font可以忽略\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/b6Zrajm67R2x)\n* ```js\nwx.loadFontFace({\n  family: 'Bitstream Vera Serif Bold',\n  source: 'url(\"https://sungd.github.io/Pacifico.ttf\")',\n  success: console.log\n})\n```\n*\n* 最低基础库： `2.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.login": {
        "prefix": "wx.login",
        "body": [
            "wx.login({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.login(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html)\n*\n* 调用接口获取登录凭证（code）。通过凭证进而换取用户登录态信息，包括用户的唯一标识（openid）及本次登录的会话密钥（session_key）等。用户数据的加解密通讯需要依赖会话密钥完成。更多使用方法详见 [小程序登录](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/login.html)。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.login({\n  success (res) {\n    if (res.code) {\n      //发起网络请求\n      wx.request({\n        url: 'https://test.com/onLogin',\n        data: {\n          code: res.code\n        }\n      })\n    } else {\n      console.log('登录失败！' + res.errMsg)\n    }\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.makePhoneCall": {
        "prefix": "wx.makePhoneCall",
        "body": [
            "wx.makePhoneCall({",
            "  phoneNumber: '${1:phoneNumber}',",
            "})"
        ],
        "description": "/** [wx.makePhoneCall(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/phone/wx.makePhoneCall.html)\n*\n* 拨打电话\n*\n* **示例代码**\n*\n*\n* ```js\nwx.makePhoneCall({\n  phoneNumber: '1340000' //仅为示例，并非真实的电话号码\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.navigateBack": {
        "prefix": "wx.navigateBack",
        "body": [
            "wx.navigateBack({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.navigateBack(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateBack.html)\n         *\n         * 关闭当前页面，返回上一页面或多级页面。可通过 [getCurrentPages](https://developers.weixin.qq.com/miniprogram/dev/reference/api/getCurrentPages.html) 获取当前的页面栈，决定需要返回几层。 */",
        "detail": "function",
        "kind": 9
    },
    "wx.navigateBackMiniProgram": {
        "prefix": "wx.navigateBackMiniProgram",
        "body": [
            "wx.navigateBackMiniProgram({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.navigateBackMiniProgram(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/miniprogram-navigate/wx.navigateBackMiniProgram.html)\n*\n* 返回到上一个小程序。只有在当前小程序是被其他小程序打开时可以调用成功\n*\n* 注意：**微信客户端 iOS 6.5.9，Android 6.5.10 及以上版本支持**\n*\n* **示例代码**\n*\n*\n* ```js\nwx.navigateBackMiniProgram({\n  extraData: {\n  foo: 'bar'\n},\nsuccess(res) {\n  // 返回成功\n}\n})\n```\n*\n* 最低基础库： `1.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.navigateTo": {
        "prefix": "wx.navigateTo",
        "body": [
            "wx.navigateTo({",
            "  url: '${1:url}',",
            "})"
        ],
        "description": "/** [wx.navigateTo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateTo.html)\n*\n* 保留当前页面，跳转到应用内的某个页面。但是不能跳到 tabbar 页面。使用 [wx.navigateBack](https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateBack.html) 可以返回到原页面。小程序中页面栈最多十层。\n*\n* **示例代码**\n*\n*\n*\n* ```js\nwx.navigateTo({\n  url: 'test?id=1',\n  events: {\n    // 为指定事件添加一个监听器，获取被打开页面传送到当前页面的数据\n    acceptDataFromOpenedPage: function(data) {\n      console.log(data)\n    },\n    someEvent: function(data) {\n      console.log(data)\n    }\n    ...\n  },\n  success: function(res) {\n    // 通过eventChannel向被打开页面传送数据\n    res.eventChannel.emit('acceptDataFromOpenerPage', { data: 'test' })\n  }\n})\n```\n*\n* ```javascript\n//test.js\nPage({\n  onLoad: function(option){\n    console.log(option.query)\n    const eventChannel = this.getOpenerEventChannel()\n    eventChannel.emit('acceptDataFromOpenedPage', {data: 'test'});\n    eventChannel.emit('someEvent', {data: 'test'});\n    // 监听acceptDataFromOpenerPage事件，获取上一页面通过eventChannel传送到当前页面的数据\n    eventChannel.on('acceptDataFromOpenerPage', function(data) {\n      console.log(data)\n    })\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.navigateToMiniProgram": {
        "prefix": "wx.navigateToMiniProgram",
        "body": [
            "wx.navigateToMiniProgram({",
            "  appId: '${1:appId}',",
            "})"
        ],
        "description": "/** [wx.navigateToMiniProgram(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/miniprogram-navigate/wx.navigateToMiniProgram.html)\n*\n* 打开另一个小程序\n*\n* **使用限制**\n*\n*\n* ##### 需要用户触发跳转\n* 从 2.3.0 版本开始，若用户未点击小程序页面任意位置，则开发者将无法调用此接口自动跳转至其他小程序。\n* ##### 需要用户确认跳转\n* 从 2.3.0 版本开始，在跳转至其他小程序前，将统一增加弹窗，询问是否跳转，用户确认后才可以跳转其他小程序。如果用户点击取消，则回调 `fail cancel`。\n* ##### 每个小程序可跳转的其他小程序数量限制为不超过 10 个\n* 从 2.4.0 版本以及指定日期（具体待定）开始，开发者提交新版小程序代码时，如使用了跳转其他小程序功能，则需要在代码配置中声明将要跳转的小程序名单，限定不超过 10 个，否则将无法通过审核。该名单可在发布新版时更新，不支持动态修改。配置方法详见 [小程序全局配置](https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html)。调用此接口时，所跳转的 appId 必须在配置列表中，否则回调 `fail appId \"${appId}\" is not in navigateToMiniProgramAppIdList`。\n*\n* **关于调试**\n*\n*\n* - 在开发者工具上调用此 API 并不会真实的跳转到另外的小程序，但是开发者工具会校验本次调用跳转是否成功。[详情](https://developers.weixin.qq.com/miniprogram/dev/devtools/different.html#跳转小程序调试支持)\n* - 开发者工具上支持被跳转的小程序处理接收参数的调试。[详情](https://developers.weixin.qq.com/miniprogram/dev/devtools/different.html#跳转小程序调试支持)\n*\n* **示例代码**\n*\n*\n* ```js\nwx.navigateToMiniProgram({\n  appId: '',\n  path: 'page/index/index?id=123',\n  extraData: {\n    foo: 'bar'\n  },\n  envVersion: 'develop',\n  success(res) {\n    // 打开成功\n  }\n})\n```\n*\n* 最低基础库： `1.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.nextTick": {
        "prefix": "wx.nextTick",
        "body": [
            "wx.nextTick(${1:callback})"
        ],
        "description": "/** [wx.nextTick(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/custom-component/wx.nextTick.html)\n*\n* 延迟一部分操作到下一个时间片再执行。（类似于 setTimeout）\n*\n* **说明**\n*\n*\n*\n* 因为自定义组件中的 setData 和 triggerEvent 等接口本身是同步的操作，当这几个接口被连续调用时，都是在一个同步流程中执行完的，因此若逻辑不当可能会导致出错。\n*\n* 一个极端的案例：当父组件的 setData 引发了子组件的 triggerEvent，进而使得父组件又进行了一次 setData，期间有通过 wx:if 语句对子组件进行卸载，就有可能引发奇怪的错误，所以对于不需要在一个同步流程内完成的逻辑，可以使用此接口延迟到下一个时间片再执行。\n*\n* **示例代码**\n*\n*\n* ```js\nComponent({\n  doSth() {\n    this.setData({ number: 1 }) // 直接在当前同步流程中执行\n\n    wx.nextTick(() => {\n      this.setData({ number: 3 }) // 在当前同步流程结束后，下一个时间片执行\n    })\n\n    this.setData({ number: 2 }) // 直接在当前同步流程中执行\n  }\n})\n```\n*\n* 最低基础库： `2.2.3` */",
        "detail": "function",
        "kind": 9
    },
    "wx.notifyBLECharacteristicValueChange": {
        "prefix": "wx.notifyBLECharacteristicValueChange",
        "body": [
            "wx.notifyBLECharacteristicValueChange({",
            "  characteristicId: '${1:characteristicId}',",
            "  deviceId: '${2:deviceId}',",
            "  serviceId: '${3:serviceId}',",
            "  state: ${4:true},",
            "})"
        ],
        "description": "/** [wx.notifyBLECharacteristicValueChange(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.notifyBLECharacteristicValueChange.html)\n*\n* 启用低功耗蓝牙设备特征值变化时的 notify 功能，订阅特征值。注意：必须设备的特征值支持 notify 或者 indicate 才可以成功调用。\n*\n* 另外，必须先启用 `notifyBLECharacteristicValueChange` 才能监听到设备 `characteristicValueChange` 事件\n*\n* **注意**\n*\n*\n* - 订阅操作成功后需要设备主动更新特征值的 value，才会触发 [wx.onBLECharacteristicValueChange](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.onBLECharacteristicValueChange.html) 回调。\n* - 安卓平台上，在调用 `notifyBLECharacteristicValueChange` 成功后立即调用 `writeBLECharacteristicValue` 接口，在部分机型上会发生 10008 系统错误\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.notifyBLECharacteristicValueChange({\n  state: true, // 启用 notify 功能\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId,\n  // 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取\n  characteristicId,\n  success (res) {\n    console.log('notifyBLECharacteristicValueChange success', res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offAccelerometerChange": {
        "prefix": "wx.offAccelerometerChange",
        "body": [
            "wx.offAccelerometerChange(${1:callback})"
        ],
        "description": "/** [wx.offAccelerometerChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/accelerometer/wx.offAccelerometerChange.html)\n         *\n         * 取消监听加速度数据事件，参数为空，则取消所有的事件监听。\n         *\n         * 最低基础库： `2.9.3` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offAppHide": {
        "prefix": "wx.offAppHide",
        "body": [
            "wx.offAppHide((res) => {$1})"
        ],
        "description": "/** [wx.offAppHide(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.offAppHide.html)\n         *\n         * 取消监听小程序切后台事件\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offAppShow": {
        "prefix": "wx.offAppShow",
        "body": [
            "wx.offAppShow((res) => {$1})"
        ],
        "description": "/** [wx.offAppShow(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.offAppShow.html)\n         *\n         * 取消监听小程序切前台事件\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offAudioInterruptionBegin": {
        "prefix": "wx.offAudioInterruptionBegin",
        "body": [
            "wx.offAudioInterruptionBegin((res) => {$1})"
        ],
        "description": "/** [wx.offAudioInterruptionBegin(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.offAudioInterruptionBegin.html)\n         *\n         * 取消监听音频因为受到系统占用而被中断开始事件\n         *\n         * 最低基础库： `2.6.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offAudioInterruptionEnd": {
        "prefix": "wx.offAudioInterruptionEnd",
        "body": [
            "wx.offAudioInterruptionEnd((res) => {$1})"
        ],
        "description": "/** [wx.offAudioInterruptionEnd(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.offAudioInterruptionEnd.html)\n         *\n         * 取消监听音频中断结束事件\n         *\n         * 最低基础库： `2.6.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offBLECharacteristicValueChange": {
        "prefix": "wx.offBLECharacteristicValueChange",
        "body": [
            "wx.offBLECharacteristicValueChange(${1:callback})"
        ],
        "description": "/** [wx.offBLECharacteristicValueChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.offBLECharacteristicValueChange.html)\n         *\n         * 取消监听低功耗蓝牙设备的特征值变化事件。\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offBLEConnectionStateChange": {
        "prefix": "wx.offBLEConnectionStateChange",
        "body": [
            "wx.offBLEConnectionStateChange(${1:callback})"
        ],
        "description": "/** [wx.offBLEConnectionStateChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.offBLEConnectionStateChange.html)\n         *\n         * 取消监听低功耗蓝牙连接状态的改变事件\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offBeaconServiceChange": {
        "prefix": "wx.offBeaconServiceChange",
        "body": [
            "wx.offBeaconServiceChange((res) => {$1})"
        ],
        "description": "/** [wx.offBeaconServiceChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/ibeacon/wx.offBeaconServiceChange.html)\n         *\n         * 取消监听 iBeacon 服务状态变化事件\n         *\n         * 最低基础库： `2.8.1` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offBeaconUpdate": {
        "prefix": "wx.offBeaconUpdate",
        "body": [
            "wx.offBeaconUpdate((res) => {$1})"
        ],
        "description": "/** [wx.offBeaconUpdate(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/ibeacon/wx.offBeaconUpdate.html)\n         *\n         * 取消监听 iBeacon 设备更新事件\n         *\n         * 最低基础库： `2.8.1` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offBluetoothAdapterStateChange": {
        "prefix": "wx.offBluetoothAdapterStateChange",
        "body": [
            "wx.offBluetoothAdapterStateChange(${1:callback})"
        ],
        "description": "/** [wx.offBluetoothAdapterStateChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.offBluetoothAdapterStateChange.html)\n         *\n         * 取消监听蓝牙适配器状态变化事件。\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offBluetoothDeviceFound": {
        "prefix": "wx.offBluetoothDeviceFound",
        "body": [
            "wx.offBluetoothDeviceFound(${1:callback})"
        ],
        "description": "/** [wx.offBluetoothDeviceFound(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.offBluetoothDeviceFound.html)\n         *\n         * 取消监听寻找到新设备的事件。\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offCompassChange": {
        "prefix": "wx.offCompassChange",
        "body": [
            "wx.offCompassChange(${1:callback})"
        ],
        "description": "/** [wx.offCompassChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/compass/wx.offCompassChange.html)\n         *\n         * 取消监听罗盘数据变化事件，参数为空，则取消所有的事件监听。\n         *\n         * 最低基础库： `2.9.3` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offDeviceMotionChange": {
        "prefix": "wx.offDeviceMotionChange",
        "body": [
            "wx.offDeviceMotionChange(${1:callback})"
        ],
        "description": "/** [wx.offDeviceMotionChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/motion/wx.offDeviceMotionChange.html)\n         *\n         * 取消监听设备方向变化事件，参数为空，则取消所有的事件监听。\n         *\n         * 最低基础库： `2.9.3` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offError": {
        "prefix": "wx.offError",
        "body": [
            "wx.offError(${1:callback})"
        ],
        "description": "/** [wx.offError(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.offError.html)\n         *\n         * 取消监听小程序错误事件。\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offGetWifiList": {
        "prefix": "wx.offGetWifiList",
        "body": [
            "wx.offGetWifiList(${1:callback})"
        ],
        "description": "/** [wx.offGetWifiList(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.offGetWifiList.html)\n         *\n         * 取消监听获取到 Wi-Fi 列表数据事件。\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offGyroscopeChange": {
        "prefix": "wx.offGyroscopeChange",
        "body": [
            "wx.offGyroscopeChange(${1:callback})"
        ],
        "description": "/** [wx.offGyroscopeChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/gyroscope/wx.offGyroscopeChange.html)\n         *\n         * 取消监听陀螺仪数据变化事件。\n         *\n         * 最低基础库： `2.9.3` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offHCEMessage": {
        "prefix": "wx.offHCEMessage",
        "body": [
            "wx.offHCEMessage(${1:callback})"
        ],
        "description": "/** [wx.offHCEMessage(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/nfc/wx.offHCEMessage.html)\n         *\n         * 接收 NFC 设备消息事件，取消事件监听。\n         *\n         * 最低基础库： `2.8.1` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offKeyboardHeightChange": {
        "prefix": "wx.offKeyboardHeightChange",
        "body": [
            "wx.offKeyboardHeightChange(${1:callback})"
        ],
        "description": "/** [wx.offKeyboardHeightChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/aapi/ui/keyboard/wx.offKeyboardHeightChange.html)\n         *\n         * 取消监听键盘高度变化事件\n         *\n         * 最低基础库： `2.9.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offLocalServiceDiscoveryStop": {
        "prefix": "wx.offLocalServiceDiscoveryStop",
        "body": [
            "wx.offLocalServiceDiscoveryStop((res) => {$1})"
        ],
        "description": "/** [wx.offLocalServiceDiscoveryStop(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.offLocalServiceDiscoveryStop.html)\n         *\n         * 取消监听 mDNS 服务停止搜索的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offLocalServiceFound": {
        "prefix": "wx.offLocalServiceFound",
        "body": [
            "wx.offLocalServiceFound((res) => {$1})"
        ],
        "description": "/** [wx.offLocalServiceFound(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.offLocalServiceFound.html)\n         *\n         * 取消监听 mDNS 服务发现的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offLocalServiceLost": {
        "prefix": "wx.offLocalServiceLost",
        "body": [
            "wx.offLocalServiceLost((res) => {$1})"
        ],
        "description": "/** [wx.offLocalServiceLost(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.offLocalServiceLost.html)\n         *\n         * 取消监听 mDNS 服务离开的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offLocalServiceResolveFail": {
        "prefix": "wx.offLocalServiceResolveFail",
        "body": [
            "wx.offLocalServiceResolveFail((res) => {$1})"
        ],
        "description": "/** [wx.offLocalServiceResolveFail(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.offLocalServiceResolveFail.html)\n         *\n         * 取消监听 mDNS 服务解析失败的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offLocationChange": {
        "prefix": "wx.offLocationChange",
        "body": [
            "wx.offLocationChange((res) => {$1})"
        ],
        "description": "/** [wx.offLocationChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.offLocationChange.html)\n         *\n         * 取消监听实时地理位置变化事件\n         *\n         * 最低基础库： `2.8.1` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offMemoryWarning": {
        "prefix": "wx.offMemoryWarning",
        "body": [
            "wx.offMemoryWarning(${1:callback})"
        ],
        "description": "/** [wx.offMemoryWarning(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/performance/wx.offMemoryWarning.html)\n         *\n         * 取消监听内存不足告警事件。\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offNetworkStatusChange": {
        "prefix": "wx.offNetworkStatusChange",
        "body": [
            "wx.offNetworkStatusChange(${1:callback})"
        ],
        "description": "/** [wx.offNetworkStatusChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/network/wx.offNetworkStatusChange.html)\n         *\n         * 取消监听网络状态变化事件，参数为空，则取消所有的事件监听。\n         *\n         * 最低基础库： `2.9.3` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offPageNotFound": {
        "prefix": "wx.offPageNotFound",
        "body": [
            "wx.offPageNotFound((res) => {$1})"
        ],
        "description": "/** [wx.offPageNotFound(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.offPageNotFound.html)\n         *\n         * 取消监听小程序要打开的页面不存在事件\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offUserCaptureScreen": {
        "prefix": "wx.offUserCaptureScreen",
        "body": [
            "wx.offUserCaptureScreen(${1:callback})"
        ],
        "description": "/** [wx.offUserCaptureScreen(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/screen/wx.offUserCaptureScreen.html)\n         *\n         * 用户主动截屏事件。取消事件监听。\n         *\n         * 最低基础库： `2.9.3` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offWifiConnected": {
        "prefix": "wx.offWifiConnected",
        "body": [
            "wx.offWifiConnected(${1:callback})"
        ],
        "description": "/** [wx.offWifiConnected(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.offWifiConnected.html)\n         *\n         * 取消监听连接上 Wi-Fi 的事件。\n         *\n         * 最低基础库： `2.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.offWindowResize": {
        "prefix": "wx.offWindowResize",
        "body": [
            "wx.offWindowResize((res) => {$1})"
        ],
        "description": "/** [wx.offWindowResize(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/window/wx.offWindowResize.html)\n         *\n         * 取消监听窗口尺寸变化事件\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onAccelerometerChange": {
        "prefix": "wx.onAccelerometerChange",
        "body": [
            "wx.onAccelerometerChange((result) => {$1})"
        ],
        "description": "/** [wx.onAccelerometerChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/accelerometer/wx.onAccelerometerChange.html)\n*\n* 监听加速度数据事件。频率根据 [wx.startAccelerometer()](https://developers.weixin.qq.com/miniprogram/dev/api/device/accelerometer/wx.startAccelerometer.html) 的 interval 参数, 接口调用后会自动开始监听。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.onAccelerometerChange(callback)\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onAppHide": {
        "prefix": "wx.onAppHide",
        "body": [
            "wx.onAppHide((res) => {$1})"
        ],
        "description": "/** [wx.onAppHide(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onAppHide.html)\n         *\n         * 监听小程序切后台事件。该事件与 [`App.onHide`](https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onhide) 的回调时机一致。\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onAppShow": {
        "prefix": "wx.onAppShow",
        "body": [
            "wx.onAppShow((result) => {$1})"
        ],
        "description": "/** [wx.onAppShow(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onAppShow.html)\n         *\n         * 监听小程序切前台事件。该事件与 [`App.onShow`](https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onshowobject-object) 的回调参数一致。\n         *\n         * **返回有效 referrerInfo 的场景**\n         *\n         *\n         * | 场景值 | 场景                            | appId含义  |\n         * | ------ | ------------------------------- | ---------- |\n         * | 1020   | 公众号 profile 页相关小程序列表 | 来源公众号 |\n         * | 1035   | 公众号自定义菜单                | 来源公众号 |\n         * | 1036   | App 分享消息卡片                | 来源App    |\n         * | 1037   | 小程序打开小程序                | 来源小程序 |\n         * | 1038   | 从另一个小程序返回              | 来源小程序 |\n         * | 1043   | 公众号模板消息                  | 来源公众号 |\n         *\n         * **注意**\n         *\n         *\n         * 部分版本在无`referrerInfo`的时候会返回 `undefined`，建议使用 `options.referrerInfo && options.referrerInfo.appId` 进行判断。\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onAudioInterruptionBegin": {
        "prefix": "wx.onAudioInterruptionBegin",
        "body": [
            "wx.onAudioInterruptionBegin((res) => {$1})"
        ],
        "description": "/** [wx.onAudioInterruptionBegin(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onAudioInterruptionBegin.html)\n         *\n         * 监听音频因为受到系统占用而被中断开始事件。以下场景会触发此事件：闹钟、电话、FaceTime 通话、微信语音聊天、微信视频聊天。此事件触发后，小程序内所有音频会暂停。\n         *\n         * 最低基础库： `2.6.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onAudioInterruptionEnd": {
        "prefix": "wx.onAudioInterruptionEnd",
        "body": [
            "wx.onAudioInterruptionEnd((res) => {$1})"
        ],
        "description": "/** [wx.onAudioInterruptionEnd(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onAudioInterruptionEnd.html)\n         *\n         * 监听音频中断结束事件。在收到 onAudioInterruptionBegin 事件之后，小程序内所有音频会暂停，收到此事件之后才可再次播放成功\n         *\n         * 最低基础库： `2.6.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onBLECharacteristicValueChange": {
        "prefix": "wx.onBLECharacteristicValueChange",
        "body": [
            "wx.onBLECharacteristicValueChange((result) => {$1})"
        ],
        "description": "/** [wx.onBLECharacteristicValueChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.onBLECharacteristicValueChange.html)\n*\n* 监听低功耗蓝牙设备的特征值变化事件。必须先启用 `notifyBLECharacteristicValueChange` 接口才能接收到设备推送的 notification。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n*\n* ```js\n// ArrayBuffer转16进制字符串示例\nfunction ab2hex(buffer) {\n  let hexArr = Array.prototype.map.call(\n    new Uint8Array(buffer),\n    function(bit) {\n      return ('00' + bit.toString(16)).slice(-2)\n    }\n  )\n  return hexArr.join('');\n}\nwx.onBLECharacteristicValueChange(function(res) {\n  console.log(`characteristic ${res.characteristicId} has changed, now is ${res.value}`)\n  console.log(ab2hex(res.value))\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onBLEConnectionStateChange": {
        "prefix": "wx.onBLEConnectionStateChange",
        "body": [
            "wx.onBLEConnectionStateChange((result) => {$1})"
        ],
        "description": "/** [wx.onBLEConnectionStateChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.onBLEConnectionStateChange.html)\n*\n* 监听低功耗蓝牙连接状态的改变事件。包括开发者主动连接或断开连接，设备丢失，连接异常断开等等\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.onBLEConnectionStateChange(function(res) {\n  // 该方法回调中可以用于处理连接意外断开等异常情况\n  console.log(`device ${res.deviceId} state has changed, connected: ${res.connected}`)\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onBackgroundAudioPause": {
        "prefix": "wx.onBackgroundAudioPause",
        "body": [
            "wx.onBackgroundAudioPause((res) => {$1})"
        ],
        "description": "/** [wx.onBackgroundAudioPause(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.onBackgroundAudioPause.html)\n         *\n         * 监听音乐暂停事件。 */",
        "detail": "function",
        "kind": 9
    },
    "wx.onBackgroundAudioPlay": {
        "prefix": "wx.onBackgroundAudioPlay",
        "body": [
            "wx.onBackgroundAudioPlay((res) => {$1})"
        ],
        "description": "/** [wx.onBackgroundAudioPlay(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.onBackgroundAudioPlay.html)\n         *\n         * 监听音乐播放事件。 */",
        "detail": "function",
        "kind": 9
    },
    "wx.onBackgroundAudioStop": {
        "prefix": "wx.onBackgroundAudioStop",
        "body": [
            "wx.onBackgroundAudioStop((res) => {$1})"
        ],
        "description": "/** [wx.onBackgroundAudioStop(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.onBackgroundAudioStop.html)\n         *\n         * 监听音乐停止事件。 */",
        "detail": "function",
        "kind": 9
    },
    "wx.onBackgroundFetchData": {
        "prefix": "wx.onBackgroundFetchData",
        "body": [
            "wx.onBackgroundFetchData({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.onBackgroundFetchData(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/background-fetch/wx.onBackgroundFetchData.html)\n         *\n         * 收到 backgroundFetch 数据时的回调\n         *\n         * 最低基础库： `2.8.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onBeaconServiceChange": {
        "prefix": "wx.onBeaconServiceChange",
        "body": [
            "wx.onBeaconServiceChange((result) => {$1})"
        ],
        "description": "/** [wx.onBeaconServiceChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/ibeacon/wx.onBeaconServiceChange.html)\n         *\n         * 监听 iBeacon 服务状态变化事件，仅能注册一个监听\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onBeaconUpdate": {
        "prefix": "wx.onBeaconUpdate",
        "body": [
            "wx.onBeaconUpdate((result) => {$1})"
        ],
        "description": "/** [wx.onBeaconUpdate(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/ibeacon/wx.onBeaconUpdate.html)\n         *\n         * 监听 iBeacon 设备更新事件，仅能注册一个监听\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onBluetoothAdapterStateChange": {
        "prefix": "wx.onBluetoothAdapterStateChange",
        "body": [
            "wx.onBluetoothAdapterStateChange((result) => {$1})"
        ],
        "description": "/** [wx.onBluetoothAdapterStateChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.onBluetoothAdapterStateChange.html)\n*\n* 监听蓝牙适配器状态变化事件\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.onBluetoothAdapterStateChange(function (res) {\n  console.log('adapterState changed, now is', res)\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onBluetoothDeviceFound": {
        "prefix": "wx.onBluetoothDeviceFound",
        "body": [
            "wx.onBluetoothDeviceFound((result) => {$1})"
        ],
        "description": "/** [wx.onBluetoothDeviceFound(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.onBluetoothDeviceFound.html)\n*\n* 监听寻找到新设备的事件\n*\n* **注意**\n*\n*\n* - 若在 [wx.onBluetoothDeviceFound](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.onBluetoothDeviceFound.html) 回调了某个设备，则此设备会添加到 [wx.getBluetoothDevices](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.getBluetoothDevices.html) 接口获取到的数组中。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n*\n* ```js\n// ArrayBuffer转16进度字符串示例\nfunction ab2hex(buffer) {\n  var hexArr = Array.prototype.map.call(\n    new Uint8Array(buffer),\n    function(bit) {\n      return ('00' + bit.toString(16)).slice(-2)\n    }\n  )\n  return hexArr.join('');\n}\nwx.onBluetoothDeviceFound(function(res) {\n  var devices = res.devices;\n  console.log('new device list has founded')\n  console.dir(devices)\n  console.log(ab2hex(devices[0].advertisData))\n})\n```\n*\n* **注意**\n*\n*\n* - 安卓下部分机型需要有位置权限才能搜索到设备，需留意是否开启了位置权限\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onCompassChange": {
        "prefix": "wx.onCompassChange",
        "body": [
            "wx.onCompassChange((result) => {$1})"
        ],
        "description": "/** [wx.onCompassChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/compass/wx.onCompassChange.html)\n         *\n         * 监听罗盘数据变化事件。频率：5 次/秒，接口调用后会自动开始监听，可使用 wx.stopCompass 停止监听。\n         *\n         * **accuracy 在 iOS/Android 的差异**\n         *\n         *\n         * 由于平台差异，accuracy 在 iOS/Android 的值不同。\n         *\n         * - iOS：accuracy 是一个 number 类型的值，表示相对于磁北极的偏差。0 表示设备指向磁北，90 表示指向东，180 表示指向南，依此类推。\n         * - Android：accuracy 是一个 string 类型的枚举值。\n         *\n         * | 值              | 说明                                                                                   |\n         * | --------------- | -------------------------------------------------------------------------------------- |\n         * | high            | 高精度                                                                                 |\n         * | medium          | 中等精度                                                                               |\n         * | low             | 低精度                                                                                 |\n         * | no-contact      | 不可信，传感器失去连接                                                                 |\n         * | unreliable      | 不可信，原因未知                                                                       |\n         * | unknow ${value} | 未知的精度枚举值，即该 Android 系统此时返回的表示精度的 value 不是一个标准的精度枚举值 | */",
        "detail": "function",
        "kind": 9
    },
    "wx.onDeviceMotionChange": {
        "prefix": "wx.onDeviceMotionChange",
        "body": [
            "wx.onDeviceMotionChange((result) => {$1})"
        ],
        "description": "/** [wx.onDeviceMotionChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/motion/wx.onDeviceMotionChange.html)\n         *\n         * 监听设备方向变化事件。频率根据 [wx.startDeviceMotionListening()](https://developers.weixin.qq.com/miniprogram/dev/api/device/motion/wx.startDeviceMotionListening.html) 的 interval 参数。可以使用 [wx.stopDeviceMotionListening()](https://developers.weixin.qq.com/miniprogram/dev/api/device/motion/wx.stopDeviceMotionListening.html) 停止监听。\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onError": {
        "prefix": "wx.onError",
        "body": [
            "wx.onError((error) => {$1})"
        ],
        "description": "/** [wx.onError(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onError.html)\n         *\n         * 监听小程序错误事件。如脚本错误或 API 调用报错等。该事件与 [`App.onError`](https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onerrorstring-error) 的回调时机与参数一致。\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onGetWifiList": {
        "prefix": "wx.onGetWifiList",
        "body": [
            "wx.onGetWifiList((result) => {$1})"
        ],
        "description": "/** [wx.onGetWifiList(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.onGetWifiList.html)\n         *\n         * 监听获取到 Wi-Fi 列表数据事件\n         *\n         * 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onGyroscopeChange": {
        "prefix": "wx.onGyroscopeChange",
        "body": [
            "wx.onGyroscopeChange((result) => {$1})"
        ],
        "description": "/** [wx.onGyroscopeChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/gyroscope/wx.onGyroscopeChange.html)\n         *\n         * 监听陀螺仪数据变化事件。频率根据 [wx.startGyroscope()](https://developers.weixin.qq.com/miniprogram/dev/api/device/gyroscope/wx.startGyroscope.html) 的 interval 参数。可以使用 [wx.stopGyroscope()](https://developers.weixin.qq.com/miniprogram/dev/api/device/gyroscope/wx.stopGyroscope.html) 停止监听。\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onHCEMessage": {
        "prefix": "wx.onHCEMessage",
        "body": [
            "wx.onHCEMessage((result) => {$1})"
        ],
        "description": "/** [wx.onHCEMessage(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/nfc/wx.onHCEMessage.html)\n         *\n         * 监听接收 NFC 设备消息事件，仅能注册一个监听\n         *\n         * 最低基础库： `1.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onKeyboardHeightChange": {
        "prefix": "wx.onKeyboardHeightChange",
        "body": [
            "wx.onKeyboardHeightChange((result) => {$1})"
        ],
        "description": "/** [wx.onKeyboardHeightChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/keyboard/wx.onKeyboardHeightChange.html)\n*\n* 监听键盘高度变化\n*\n* **示例代码**\n*\n*\n* ```js\nwx.onKeyboardHeightChange(res => {\n  console.log(res.height)\n})\n```\n*\n* 最低基础库： `2.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onLocalServiceDiscoveryStop": {
        "prefix": "wx.onLocalServiceDiscoveryStop",
        "body": [
            "wx.onLocalServiceDiscoveryStop((res) => {$1})"
        ],
        "description": "/** [wx.onLocalServiceDiscoveryStop(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.onLocalServiceDiscoveryStop.html)\n         *\n         * 监听 mDNS 服务停止搜索的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onLocalServiceFound": {
        "prefix": "wx.onLocalServiceFound",
        "body": [
            "wx.onLocalServiceFound((result) => {$1})"
        ],
        "description": "/** [wx.onLocalServiceFound(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.onLocalServiceFound.html)\n         *\n         * 监听 mDNS 服务发现的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onLocalServiceLost": {
        "prefix": "wx.onLocalServiceLost",
        "body": [
            "wx.onLocalServiceLost((result) => {$1})"
        ],
        "description": "/** [wx.onLocalServiceLost(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.onLocalServiceLost.html)\n         *\n         * 监听 mDNS 服务离开的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onLocalServiceResolveFail": {
        "prefix": "wx.onLocalServiceResolveFail",
        "body": [
            "wx.onLocalServiceResolveFail((result) => {$1})"
        ],
        "description": "/** [wx.onLocalServiceResolveFail(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.onLocalServiceResolveFail.html)\n         *\n         * 监听 mDNS 服务解析失败的事件\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onLocationChange": {
        "prefix": "wx.onLocationChange",
        "body": [
            "wx.onLocationChange((result) => {$1})"
        ],
        "description": "/** [wx.onLocationChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.onLocationChange.html)\n*\n* 监听实时地理位置变化事件，需结合 [wx.startLocationUpdateBackground](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.startLocationUpdateBackground.html)、[wx.startLocationUpdate](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.startLocationUpdate.html)使用。\n*\n* **示例代码**\n*\n*\n* ```js\n const _locationChangeFn = function(res) {\n  console.log('location change', res)\n }\n wx.onLocationChange(_locationChangeFn)\n wx.offLocationChange(_locationChangeFn)\n```\n*\n* 最低基础库： `2.8.1` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onMemoryWarning": {
        "prefix": "wx.onMemoryWarning",
        "body": [
            "wx.onMemoryWarning((result) => {$1})"
        ],
        "description": "/** [wx.onMemoryWarning(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/performance/wx.onMemoryWarning.html)\n         *\n         * 监听内存不足告警事件。\n         *\n         * 当 iOS/Android 向小程序进程发出内存警告时，触发该事件。触发该事件不意味小程序被杀，大部分情况下仅仅是告警，开发者可在收到通知后回收一些不必要资源避免进一步加剧内存紧张。\n         *\n         * **示例代码**\n         *\n         *\n         * ```js\n         * wx.onMemoryWarning(function () {\n         *   console.log('onMemoryWarningReceive')\n         * })\n         * ``\n         *\n         * 最低基础库： `2.0.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onNetworkStatusChange": {
        "prefix": "wx.onNetworkStatusChange",
        "body": [
            "wx.onNetworkStatusChange((result) => {$1})"
        ],
        "description": "/** [wx.onNetworkStatusChange(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/network/wx.onNetworkStatusChange.html)\n*\n* 监听网络状态变化事件\n*\n* **示例代码**\n*\n*\n* ```js\nwx.onNetworkStatusChange(function (res) {\n  console.log(res.isConnected)\n  console.log(res.networkType)\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onPageNotFound": {
        "prefix": "wx.onPageNotFound",
        "body": [
            "wx.onPageNotFound((result) => {$1})"
        ],
        "description": "/** [wx.onPageNotFound(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onPageNotFound.html)\n         *\n         * 监听小程序要打开的页面不存在事件。该事件与 [`App.onPageNotFound`](https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onpagenotfoundobject-object) 的回调时机一致。\n         *\n         * **注意**\n         *\n         *\n         * - 开发者可以在回调中进行页面重定向，但必须在回调中**同步**处理，异步处理（例如 `setTimeout` 异步执行）无效。\n         * - 若开发者没有调用 [wx.onPageNotFound](https://developers.weixin.qq.com/miniprogram/dev/api/base/app/app-event/wx.onPageNotFound.html) 绑定监听，也没有声明 `App.onPageNotFound`，当跳转页面不存在时，将推入微信客户端原生的页面不存在提示页面。\n         * - 如果回调中又重定向到另一个不存在的页面，将推入微信客户端原生的页面不存在提示页面，并且不再第二次回调。\n         *\n         * 最低基础库： `2.1.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onSocketClose": {
        "prefix": "wx.onSocketClose",
        "body": [
            "wx.onSocketClose((result) => {$1})"
        ],
        "description": "/** [wx.onSocketClose(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/wx.onSocketClose.html)\n         *\n         * 监听 WebSocket 连接关闭事件 */",
        "detail": "function",
        "kind": 9
    },
    "wx.onSocketError": {
        "prefix": "wx.onSocketError",
        "body": [
            "wx.onSocketError((result) => {$1})"
        ],
        "description": "/** [wx.onSocketError(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/wx.onSocketError.html)\n         *\n         * 监听 WebSocket 错误事件 */",
        "detail": "function",
        "kind": 9
    },
    "wx.onSocketMessage": {
        "prefix": "wx.onSocketMessage",
        "body": [
            "wx.onSocketMessage((result) => {$1})"
        ],
        "description": "/** [wx.onSocketMessage(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/wx.onSocketMessage.html)\n         *\n         * 监听 WebSocket 接受到服务器的消息事件 */",
        "detail": "function",
        "kind": 9
    },
    "wx.onSocketOpen": {
        "prefix": "wx.onSocketOpen",
        "body": [
            "wx.onSocketOpen((result) => {$1})"
        ],
        "description": "/** [wx.onSocketOpen(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/wx.onSocketOpen.html)\n         *\n         * 监听 WebSocket 连接打开事件 */",
        "detail": "function",
        "kind": 9
    },
    "wx.onUserCaptureScreen": {
        "prefix": "wx.onUserCaptureScreen",
        "body": [
            "wx.onUserCaptureScreen((res) => {$1})"
        ],
        "description": "/** [wx.onUserCaptureScreen(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/screen/wx.onUserCaptureScreen.html)\n*\n* 监听用户主动截屏事件。用户使用系统截屏按键截屏时触发，只能注册一个监听\n*\n* **示例代码**\n*\n*\n* ```js\nwx.onUserCaptureScreen(function (res) {\n  console.log('用户截屏了')\n})\n```\n*\n* 最低基础库： `1.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onWifiConnected": {
        "prefix": "wx.onWifiConnected",
        "body": [
            "wx.onWifiConnected((result) => {$1})"
        ],
        "description": "/** [wx.onWifiConnected(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.onWifiConnected.html)\n         *\n         * 监听连接上 Wi-Fi 的事件\n         *\n         * 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.onWindowResize": {
        "prefix": "wx.onWindowResize",
        "body": [
            "wx.onWindowResize((result) => {$1})"
        ],
        "description": "/** [wx.onWindowResize(function callback)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/window/wx.onWindowResize.html)\n         *\n         * 监听窗口尺寸变化事件\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.openBluetoothAdapter": {
        "prefix": "wx.openBluetoothAdapter",
        "body": [
            "wx.openBluetoothAdapter({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.openBluetoothAdapter(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.openBluetoothAdapter.html)\n*\n* 初始化蓝牙模块\n*\n* **object.fail 回调函数返回的 state 参数（仅 iOS）**\n*\n*\n* | 状态码 | 说明   |\n* | ------ | ------ |\n* | 0      | 未知   |\n* | 1      | 重置中 |\n* | 2      | 不支持 |\n* | 3      | 未授权 |\n* | 4      | 未开启 |\n*\n* **注意**\n*\n*\n* - 其他蓝牙相关 API 必须在 [wx.openBluetoothAdapter](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.openBluetoothAdapter.html) 调用之后使用。否则 API 会返回错误（errCode=10000）。\n* - 在用户蓝牙开关未开启或者手机不支持蓝牙功能的情况下，调用 [wx.openBluetoothAdapter](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.openBluetoothAdapter.html) 会返回错误（errCode=10001），表示手机蓝牙功能不可用。此时小程序蓝牙模块已经初始化完成，可通过 [wx.onBluetoothAdapterStateChange](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.onBluetoothAdapterStateChange.html) 监听手机蓝牙状态的改变，也可以调用蓝牙模块的所有API。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.openBluetoothAdapter({\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.openCard": {
        "prefix": "wx.openCard",
        "body": [
            "wx.openCard({",
            "  cardList: [$1],",
            "})"
        ],
        "description": "/** [wx.openCard(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/card/wx.openCard.html)\n*\n* 查看微信卡包中的卡券。只有通过 [认证](https://developers.weixin.qq.com/miniprogram/product/renzheng.html) 的小程序或文化互动类目的小游戏才能使用。更多文档请参考 [微信卡券接口文档](https://mp.weixin.qq.com/cgi-bin/announce?action=getannouncement&key=1490190158&version=1&lang=zh_CN&platform=2)。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.openCard({\n  cardList: [{\n    cardId: '',\n    code: ''\n  }, {\n    cardId: '',\n    code: ''\n  }],\n  success (res) { }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.openDocument": {
        "prefix": "wx.openDocument",
        "body": [
            "wx.openDocument({",
            "  filePath: '${1:filePath}',",
            "})"
        ],
        "description": "/** [wx.openDocument(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.openDocument.html)\n         *\n         * 新开页面打开文档 */",
        "detail": "function",
        "kind": 9
    },
    "wx.openLocation": {
        "prefix": "wx.openLocation",
        "body": [
            "wx.openLocation({",
            "  latitude: ${1:0},",
            "  longitude: ${2:0},",
            "})"
        ],
        "description": "/** [wx.openLocation(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.openLocation.html)\n*\n* 使用微信内置地图查看位置\n*\n* **示例代码**\n*\n*\n*  ```js\n wx.getLocation({\n  type: 'gcj02', //返回可以用于wx.openLocation的经纬度\n  success (res) {\n    const latitude = res.latitude\n    const longitude = res.longitude\n    wx.openLocation({\n      latitude,\n      longitude,\n      scale: 18\n    })\n  }\n})\n ``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.openSetting": {
        "prefix": "wx.openSetting",
        "body": [
            "wx.openSetting({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.openSetting(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/setting/wx.openSetting.html)\n*\n* 调起客户端小程序设置界面，返回用户设置的操作结果。**设置界面只会出现小程序已经向用户请求过的[权限](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/authorize.html)**。\n*\n*\n* 注意：[2.3.0](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 版本开始，用户发生点击行为后，才可以跳转打开设置页，管理授权信息。[详情](https://developers.weixin.qq.com/community/develop/doc/000cea2305cc5047af5733de751008)\n*\n* **示例代码**\n*\n*\n* ```js\nwx.openSetting({\n  success (res) {\n    console.log(res.authSetting)\n    // res.authSetting = {\n    //   \"scope.userInfo\": true,\n    //   \"scope.userLocation\": true\n    // }\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.pageScrollTo": {
        "prefix": "wx.pageScrollTo",
        "body": [
            "wx.pageScrollTo({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.pageScrollTo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/scroll/wx.pageScrollTo.html)\n*\n* 将页面滚动到目标位置，支持选择器和滚动距离两种方式定位\n*\n* **selector 语法**\n*\n*\n* selector类似于 CSS 的选择器，但仅支持下列语法。\n*\n* + ID选择器：#the-id\n* + class选择器（可以连续指定多个）：.a-class.another-class\n* + 子元素选择器：.the-parent > .the-child\n* + 后代选择器：.the-ancestor .the-descendant\n* + 跨自定义组件的后代选择器：.the-ancestor >>> .the-descendant\n* + 多选择器的并集：#a-node, .some-other-nodes\n*\n* **示例代码**\n*\n*\n* ```js\nwx.pageScrollTo({\n  scrollTop: 0,\n  duration: 300\n})\n```\n*\n* 最低基础库： `1.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.pauseBackgroundAudio": {
        "prefix": "wx.pauseBackgroundAudio",
        "body": [
            "wx.pauseBackgroundAudio({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.pauseBackgroundAudio(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.pauseBackgroundAudio.html)\n*\n* 暂停播放音乐。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.pauseBackgroundAudio()\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.pauseVoice": {
        "prefix": "wx.pauseVoice",
        "body": [
            "wx.pauseVoice({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.pauseVoice(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.pauseVoice.html)\n*\n* 暂停正在播放的语音。再次调用 [wx.playVoice](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.playVoice.html) 播放同一个文件时，会从暂停处开始播放。如果想从头开始播放，需要先调用 [wx.stopVoice](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.stopVoice.html)。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startRecord({\n  success (res) {\n    const tempFilePath = res.tempFilePath\n    wx.playVoice({\n      filePath: tempFilePath\n    })\n\n    setTimeout(() => { wx.pauseVoice() }, 5000)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.playBackgroundAudio": {
        "prefix": "wx.playBackgroundAudio",
        "body": [
            "wx.playBackgroundAudio({",
            "  dataUrl: '${1:dataUrl}',",
            "})"
        ],
        "description": "/** [wx.playBackgroundAudio(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.playBackgroundAudio.html)\n*\n* 使用后台播放器播放音乐。对于微信客户端来说，只能同时有一个后台音乐在播放。当用户离开小程序后，音乐将暂停播放；当用户在其他小程序占用了音乐播放器，原有小程序内的音乐将停止播放。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.playBackgroundAudio({\n  dataUrl: '',\n  title: '',\n  coverImgUrl: ''\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.playVoice": {
        "prefix": "wx.playVoice",
        "body": [
            "wx.playVoice({",
            "  filePath: '${1:filePath}',",
            "})"
        ],
        "description": "/** [wx.playVoice(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.playVoice.html)\n*\n* 开始播放语音。同时只允许一个语音文件正在播放，如果前一个语音文件还没播放完，将中断前一个语音播放。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startRecord({\n  success (res) {\n    const tempFilePath = res.tempFilePath\n    wx.playVoice({\n      filePath: tempFilePath,\n      complete () { }\n    })\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.previewImage": {
        "prefix": "wx.previewImage",
        "body": [
            "wx.previewImage({",
            "  urls: [$1],",
            "})"
        ],
        "description": "/** [wx.previewImage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.previewImage.html)\n*\n* 在新页面中全屏预览图片。预览的过程中用户可以进行保存图片、发送给朋友等操作。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.previewImage({\n  current: '', // 当前显示图片的http链接\n  urls: [] // 需要预览的图片http链接列表\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.reLaunch": {
        "prefix": "wx.reLaunch",
        "body": [
            "wx.reLaunch({",
            "  url: '${1:url}',",
            "})"
        ],
        "description": "/** [wx.reLaunch(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.reLaunch.html)\n*\n* 关闭所有页面，打开到应用内的某个页面\n*\n* **示例代码**\n*\n*\n* ```js\nwx.reLaunch({\n  url: 'test?id=1'\n})\n```\n*\n* ```html\n* // test\n* Page({\n*   onLoad (option) {\n*     console.log(option.query)\n*   }\n* })\n* ```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.readBLECharacteristicValue": {
        "prefix": "wx.readBLECharacteristicValue",
        "body": [
            "wx.readBLECharacteristicValue({",
            "  characteristicId: '${1:characteristicId}',",
            "  deviceId: '${2:deviceId}',",
            "  serviceId: '${3:serviceId}',",
            "})"
        ],
        "description": "/** [wx.readBLECharacteristicValue(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.readBLECharacteristicValue.html)\n*\n* 读取低功耗蓝牙设备的特征值的二进制数据值。注意：必须设备的特征值支持 read 才可以成功调用。\n*\n* **注意**\n*\n*\n* - 并行调用多次会存在读失败的可能性。\n* - 接口读取到的信息需要在 `onBLECharacteristicValueChange` 方法注册的回调中获取。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\n// 必须在这里的回调才能获取\nwx.onBLECharacteristicValueChange(function(characteristic) {\n  console.log('characteristic value comed:', characteristic)\n})\n\nwx.readBLECharacteristicValue({\n  // 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接\n  deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId,\n  // 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取\n  characteristicId,\n  success (res) {\n    console.log('readBLECharacteristicValue:', res.errCode)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.redirectTo": {
        "prefix": "wx.redirectTo",
        "body": [
            "wx.redirectTo({",
            "  url: '${1:url}',",
            "})"
        ],
        "description": "/** [wx.redirectTo(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.redirectTo.html)\n*\n* 关闭当前页面，跳转到应用内的某个页面。但是不允许跳转到 tabbar 页面。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.redirectTo({\n  url: 'test?id=1'\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.removeSavedFile": {
        "prefix": "wx.removeSavedFile",
        "body": [
            "wx.removeSavedFile({",
            "  filePath: '${1:filePath}',",
            "})"
        ],
        "description": "/** [wx.removeSavedFile(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.removeSavedFile.html)\n*\n* 删除本地缓存文件\n*\n* **示例代码**\n*\n*\n* ```js\nwx.getSavedFileList({\n success (res) {\n   if (res.fileList.length > 0){\n     wx.removeSavedFile({\n       filePath: res.fileList[0].filePath,\n       complete (res) {\n         console.log(res)\n       }\n     })\n   }\n }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.removeStorage": {
        "prefix": "wx.removeStorage",
        "body": [
            "wx.removeStorage({",
            "  key: '${1:key}',",
            "})"
        ],
        "description": "/** [wx.removeStorage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.removeStorage.html)\n*\n* 从本地缓存中移除指定 key\n*\n* **示例代码**\n*\n*\n* ```js\nwx.removeStorage({\n  key: 'key',\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* ```js\ntry {\n  wx.removeStorageSync('key')\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.removeStorageSync": {
        "prefix": "wx.removeStorageSync",
        "body": [
            "wx.removeStorageSync('${1:key}')"
        ],
        "description": "/** [wx.removeStorageSync(string key)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.removeStorageSync.html)\n*\n* [wx.removeStorage](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.removeStorage.html) 的同步版本\n*\n* **示例代码**\n*\n*\n* ```js\nwx.removeStorage({\n  key: 'key',\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* ```js\ntry {\n  wx.removeStorageSync('key')\n} catch (e) {\n  // Do something when catch error\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.removeTabBarBadge": {
        "prefix": "wx.removeTabBarBadge",
        "body": [
            "wx.removeTabBarBadge({",
            "  index: ${1:0},",
            "})"
        ],
        "description": "/** [wx.removeTabBarBadge(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.removeTabBarBadge.html)\n         *\n         * 移除 tabBar 某一项右上角的文本\n         *\n         * 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.reportAnalytics": {
        "prefix": "wx.reportAnalytics",
        "body": [
            "wx.reportAnalytics('${1:eventName}', ${2:data})"
        ],
        "description": "/** [wx.reportAnalytics(string eventName, Object data)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/data-analysis/wx.reportAnalytics.html)\n*\n* 自定义分析数据上报接口。使用前，需要在小程序管理后台自定义分析中新建事件，配置好事件名与字段。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.reportAnalytics('purchase', {\n  price: 120,\n  color: 'red'\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.reportMonitor": {
        "prefix": "wx.reportMonitor",
        "body": [
            "wx.reportMonitor('${1:name}', ${2:0})"
        ],
        "description": "/** [wx.reportMonitor(string name, number value)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/report/wx.reportMonitor.html)\n*\n* 自定义业务数据监控上报接口。\n*\n* **使用说明**\n*\n*\n* 使用前，需要在「小程序管理后台-运维中心-性能监控-业务数据监控」中新建监控事件，配置监控描述与告警类型。每一个监控事件对应唯一的监控ID，开发者最多可以创建128个监控事件。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.reportMonitor('1', 1)\n```\n*\n* 最低基础库： `2.0.1` */",
        "detail": "function",
        "kind": 9
    },
    "wx.requestPayment": {
        "prefix": "wx.requestPayment",
        "body": [
            "wx.requestPayment({",
            "  nonceStr: '${1:nonceStr}',",
            "  package: '${2:package}',",
            "  paySign: '${3:paySign}',",
            "  timeStamp: '${4:timeStamp}',",
            "})"
        ],
        "description": "/** [wx.requestPayment(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/payment/wx.requestPayment.html)\n*\n* 发起微信支付。了解更多信息，请查看[微信支付接口文档](https://pay.weixin.qq.com/wiki/doc/api/wxa/wxa_api.php?chapter=7_3&index=1)\n*\n* **示例代码**\n*\n*\n* ```js\nwx.requestPayment({\n  timeStamp: '',\n  nonceStr: '',\n  package: '',\n  signType: 'MD5',\n  paySign: '',\n  success (res) { },\n  fail (res) { }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.requestSubscribeMessage": {
        "prefix": "wx.requestSubscribeMessage",
        "body": [
            "wx.requestSubscribeMessage({",
            "  tmplIds: [$1],",
            "})"
        ],
        "description": "/** [wx.requestSubscribeMessage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/subscribe-message/wx.requestSubscribeMessage.html)\n*\n* 注意：[2.8.2](https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html) 版本开始，用户发生点击行为或者发起支付回调后，才可以调起订阅消息界面。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.requestSubscribeMessage({\n  tmplIds: [''],\n  success (res) { }\n})\n```\n*\n* 最低基础库： `2.8.2` */",
        "detail": "function",
        "kind": 9
    },
    "wx.saveFile": {
        "prefix": "wx.saveFile",
        "body": [
            "wx.saveFile({",
            "  tempFilePath: '${1:tempFilePath}',",
            "})"
        ],
        "description": "/** [wx.saveFile(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/file/wx.saveFile.html)\n*\n* 保存文件到本地。注意：**saveFile 会把临时文件移动，因此调用成功后传入的 tempFilePath 将不可用**\n*\n* **示例代码**\n*\n*\n* ```js\nwx.chooseImage({\n  success: function(res) {\n    const tempFilePaths = res.tempFilePaths\n    wx.saveFile({\n      tempFilePath: tempFilePaths[0],\n      success (res) {\n        const savedFilePath = res.savedFilePath\n      }\n    })\n  }\n})\n```\n*\n* **注意**\n*\n*\n* 本地文件存储的大小限制为 10M */",
        "detail": "function",
        "kind": 9
    },
    "wx.saveImageToPhotosAlbum": {
        "prefix": "wx.saveImageToPhotosAlbum",
        "body": [
            "wx.saveImageToPhotosAlbum({",
            "  filePath: '${1:filePath}',",
            "})"
        ],
        "description": "/** [wx.saveImageToPhotosAlbum(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.saveImageToPhotosAlbum.html)\n*\n* 保存图片到系统相册。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.saveImageToPhotosAlbum({\n  success(res) { }\n})\n```\n*\n* 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.saveVideoToPhotosAlbum": {
        "prefix": "wx.saveVideoToPhotosAlbum",
        "body": [
            "wx.saveVideoToPhotosAlbum({",
            "  filePath: '${1:filePath}',",
            "})"
        ],
        "description": "/** [wx.saveVideoToPhotosAlbum(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/video/wx.saveVideoToPhotosAlbum.html)\n*\n* 保存视频到系统相册。支持mp4视频格式。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.saveVideoToPhotosAlbum({\n  filePath: 'wxfile://xxx',\n  success (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.scanCode": {
        "prefix": "wx.scanCode",
        "body": [
            "wx.scanCode({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.scanCode(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/scan/wx.scanCode.html)\n*\n* 调起客户端扫码界面进行扫码\n*\n* **示例代码**\n*\n*\n* ```js\n// 允许从相机和相册扫码\nwx.scanCode({\n  success (res) {\n    console.log(res)\n  }\n})\n\n// 只允许从相机扫码\nwx.scanCode({\n  onlyFromCamera: true,\n  success (res) {\n    console.log(res)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.seekBackgroundAudio": {
        "prefix": "wx.seekBackgroundAudio",
        "body": [
            "wx.seekBackgroundAudio({",
            "  position: ${1:0},",
            "})"
        ],
        "description": "/** [wx.seekBackgroundAudio(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.seekBackgroundAudio.html)\n*\n* 控制音乐播放进度。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.seekBackgroundAudio({\n  position: 30\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.sendHCEMessage": {
        "prefix": "wx.sendHCEMessage",
        "body": [
            "wx.sendHCEMessage({",
            "  data: ${1:data},",
            "})"
        ],
        "description": "/** [wx.sendHCEMessage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/nfc/wx.sendHCEMessage.html)\n*\n* 发送 NFC 消息。仅在安卓系统下有效。\n*\n* **示例代码**\n*\n*\n* ```js\nconst buffer = new ArrayBuffer(1)\nconst dataView = new DataView(buffer)\ndataView.setUint8(0, 0)\n\nwx.startHCE({\n  success (res) {\n    wx.onHCEMessage(function(res) {\n      if (res.messageType === 1) {\n        wx.sendHCEMessage({data: buffer})\n      }\n    })\n  }\n})\n```\n*\n* 最低基础库： `1.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.sendSocketMessage": {
        "prefix": "wx.sendSocketMessage",
        "body": [
            "wx.sendSocketMessage({",
            "  data: ${1:data},",
            "})"
        ],
        "description": "/** [wx.sendSocketMessage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/websocket/wx.sendSocketMessage.html)\n*\n* 通过 WebSocket 连接发送数据。需要先 wx.connectSocket，并在 wx.onSocketOpen 回调之后才能发送。\n*\n* **示例代码**\n*\n*\n* ```js\nlet socketOpen = false\nconst socketMsgQueue = []\nwx.connectSocket({\n  url: 'test.php'\n})\n\nwx.onSocketOpen(function(res) {\n  socketOpen = true\n  for (let i = 0; i < socketMsgQueue.length; i++){\n    sendSocketMessage(socketMsgQueue[i])\n  }\n  socketMsgQueue = []\n})\n\nfunction sendSocketMessage(msg) {\n  if (socketOpen) {\n    wx.sendSocketMessage({\n      data:msg\n    })\n  } else {\n    socketMsgQueue.push(msg)\n  }\n}\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setBackgroundColor": {
        "prefix": "wx.setBackgroundColor",
        "body": [
            "wx.setBackgroundColor({",
            "  backgroundColor: '${1:backgroundColor}',",
            "})"
        ],
        "description": "/** [wx.setBackgroundColor(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/background/wx.setBackgroundColor.html)\n*\n* 动态设置窗口的背景色\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setBackgroundColor({\n  backgroundColor: '#ffffff', // 窗口的背景色为白色\n})\n\nwx.setBackgroundColor({\n  backgroundColorTop: '#ffffff', // 顶部窗口的背景色为白色\n  backgroundColorBottom: '#ffffff', // 底部窗口的背景色为白色\n})\n```\n*\n* 最低基础库： `2.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setBackgroundFetchToken": {
        "prefix": "wx.setBackgroundFetchToken",
        "body": [
            "wx.setBackgroundFetchToken({",
            "  token: '${1:token}',",
            "})"
        ],
        "description": "/** [wx.setBackgroundFetchToken(object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/background-fetch/wx.setBackgroundFetchToken.html)\n         *\n         * 设置自定义登录态，在周期性拉取数据时带上，便于第三方服务器验证请求合法性\n         *\n         * 最低基础库： `2.8.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setBackgroundTextStyle": {
        "prefix": "wx.setBackgroundTextStyle",
        "body": [
            "wx.setBackgroundTextStyle({",
            "  textStyle: ${1:textStyle},",
            "})"
        ],
        "description": "/** [wx.setBackgroundTextStyle(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/background/wx.setBackgroundTextStyle.html)\n*\n* 动态设置下拉背景字体、loading 图的样式\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setBackgroundTextStyle({\n  textStyle: 'dark' // 下拉背景字体、loading 图的样式为dark\n})\n```\n*\n* 最低基础库： `2.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setClipboardData": {
        "prefix": "wx.setClipboardData",
        "body": [
            "wx.setClipboardData({",
            "  data: '${1:data}',",
            "})"
        ],
        "description": "/** [wx.setClipboardData(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/clipboard/wx.setClipboardData.html)\n*\n* 设置系统剪贴板的内容。调用成功后，会弹出 toast 提示\"内容已复制\"，持续 1.5s\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setClipboardData({\n  data: 'data',\n  success (res) {\n    wx.getClipboardData({\n      success (res) {\n        console.log(res.data) // data\n      }\n    })\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setEnableDebug": {
        "prefix": "wx.setEnableDebug",
        "body": [
            "wx.setEnableDebug({",
            "  enableDebug: ${1:true},",
            "})"
        ],
        "description": "/** [wx.setEnableDebug(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/base/debug/wx.setEnableDebug.html)\n*\n* 设置是否打开调试开关。此开关对正式版也能生效。\n*\n* **示例代码**\n*\n*\n* ```javascript\n// 打开调试\nwx.setEnableDebug({\n  enableDebug: true\n})\n\n// 关闭调试\nwx.setEnableDebug({\n  enableDebug: false\n})\n```\n*\n* **Tips**\n*\n*\n* - 在正式版打开调试还有一种方法，就是先在开发版或体验版打开调试，再切到正式版就能看到vConsole。\n*\n* 最低基础库： `1.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setInnerAudioOption": {
        "prefix": "wx.setInnerAudioOption",
        "body": [
            "wx.setInnerAudioOption({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.setInnerAudioOption(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.setInnerAudioOption.html)\n         *\n         * 设置 [InnerAudioContext](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/InnerAudioContext.html) 的播放选项。设置之后对当前小程序全局生效。\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setKeepScreenOn": {
        "prefix": "wx.setKeepScreenOn",
        "body": [
            "wx.setKeepScreenOn({",
            "  keepScreenOn: ${1:true},",
            "})"
        ],
        "description": "/** [wx.setKeepScreenOn(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/screen/wx.setKeepScreenOn.html)\n*\n* 设置是否保持常亮状态。仅在当前小程序生效，离开小程序后设置失效。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setKeepScreenOn({\n  keepScreenOn: true\n})\n```\n*\n* 最低基础库： `1.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setNavigationBarColor": {
        "prefix": "wx.setNavigationBarColor",
        "body": [
            "wx.setNavigationBarColor({",
            "  backgroundColor: '${1:backgroundColor}',",
            "  frontColor: '${2:frontColor}',",
            "})"
        ],
        "description": "/** [wx.setNavigationBarColor(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/navigation-bar/wx.setNavigationBarColor.html)\n         *\n         * 设置页面导航条颜色\n         *\n         * 最低基础库： `1.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setNavigationBarTitle": {
        "prefix": "wx.setNavigationBarTitle",
        "body": [
            "wx.setNavigationBarTitle({",
            "  title: '${1:title}',",
            "})"
        ],
        "description": "/** [wx.setNavigationBarTitle(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/navigation-bar/wx.setNavigationBarTitle.html)\n*\n* 动态设置当前页面的标题\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setNavigationBarTitle({\n  title: '当前页面'\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setScreenBrightness": {
        "prefix": "wx.setScreenBrightness",
        "body": [
            "wx.setScreenBrightness({",
            "  value: ${1:0},",
            "})"
        ],
        "description": "/** [wx.setScreenBrightness(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/screen/wx.setScreenBrightness.html)\n         *\n         * 设置屏幕亮度\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setStorage": {
        "prefix": "wx.setStorage",
        "body": [
            "wx.setStorage({",
            "  data: ${1:data},",
            "  key: '${2:key}',",
            "})"
        ],
        "description": "/** [wx.setStorage(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.setStorage.html)\n*\n* 将数据存储在本地缓存中指定的 key 中。会覆盖掉原来该 key 对应的内容。除非用户主动删除或因存储空间原因被系统清理，否则数据都一直可用。单个 key 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setStorage({\n  key:\"key\",\n  data:\"value\"\n})\n```\n* ```js\ntry {\n  wx.setStorageSync('key', 'value')\n} catch (e) { }\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setStorageSync": {
        "prefix": "wx.setStorageSync",
        "body": [
            "wx.setStorageSync('${1:key}', ${2:data})"
        ],
        "description": "/** [wx.setStorageSync(string key, any data)](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.setStorageSync.html)\n*\n* [wx.setStorage](https://developers.weixin.qq.com/miniprogram/dev/api/storage/wx.setStorage.html) 的同步版本\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setStorage({\n  key:\"key\",\n  data:\"value\"\n})\n```\n* ```js\ntry {\n  wx.setStorageSync('key', 'value')\n} catch (e) { }\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setTabBarBadge": {
        "prefix": "wx.setTabBarBadge",
        "body": [
            "wx.setTabBarBadge({",
            "  index: ${1:0},",
            "  text: '${2:text}',",
            "})"
        ],
        "description": "/** [wx.setTabBarBadge(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.setTabBarBadge.html)\n*\n* 为 tabBar 某一项的右上角添加文本\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setTabBarBadge({\n  index: 0,\n  text: '1'\n})\n```\n*\n* 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setTabBarItem": {
        "prefix": "wx.setTabBarItem",
        "body": [
            "wx.setTabBarItem({",
            "  index: ${1:0},",
            "})"
        ],
        "description": "/** [wx.setTabBarItem(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.setTabBarItem.html)\n*\n* 动态设置 tabBar 某一项的内容，`2.7.0` 起图片支持临时文件和网络文件。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setTabBarItem({\n  index: 0,\n  text: 'text',\n  iconPath: '/path/to/iconPath',\n  selectedIconPath: '/path/to/selectedIconPath'\n})\n```\n*\n* 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setTabBarStyle": {
        "prefix": "wx.setTabBarStyle",
        "body": [
            "wx.setTabBarStyle({",
            "  backgroundColor: '${1:backgroundColor}',",
            "})"
        ],
        "description": "/** [wx.setTabBarStyle(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.setTabBarStyle.html)\n*\n* 动态设置 tabBar 的整体样式\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setTabBarStyle({\n  color: '#FF0000',\n  selectedColor: '#00FF00',\n  backgroundColor: '#0000FF',\n  borderStyle: 'white'\n})\n```\n*\n* 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setTopBarText": {
        "prefix": "wx.setTopBarText",
        "body": [
            "wx.setTopBarText({",
            "  text: '${1:text}',",
            "})"
        ],
        "description": "/** [wx.setTopBarText(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/sticky/wx.setTopBarText.html)\n*\n* 动态设置置顶栏文字内容。只有当前小程序被置顶时能生效，如果当前小程序没有被置顶，也能调用成功，但是不会立即生效，只有在用户将这个小程序置顶后才换上设置的文字内容.\n*\n* **示例代码**\n*\n*\n* ```js\nwx.setTopBarText({\n  text: 'hello, world!'\n})\n```\n*\n* **注意**\n*\n*\n* - 调用成功后，需间隔 5s 才能再次调用此接口，如果在 5s 内再次调用此接口，会回调 fail，errMsg：\"setTopBarText: fail invoke too frequently\"\n*\n* 最低基础库： `1.4.3` */",
        "detail": "function",
        "kind": 9
    },
    "wx.setWifiList": {
        "prefix": "wx.setWifiList",
        "body": [
            "wx.setWifiList({",
            "  wifiList: [$1],",
            "})"
        ],
        "description": "/** [wx.setWifiList(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.setWifiList.html)\n*\n* 设置 `wifiList` 中 AP 的相关信息。在 `onGetWifiList` 回调后调用，**iOS特有接口**。\n*\n* **注意**\n*\n*\n* - 该接口只能在 `onGetWifiList` 回调之后才能调用。\n* - 此时客户端会挂起，等待小程序设置 Wi-Fi 信息，请务必尽快调用该接口，若无数据请传入一个空数组。\n* - 有可能随着周边 Wi-Fi 列表的刷新，单个流程内收到多次带有存在重复的 Wi-Fi 列表的回调。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.onGetWifiList(function(res) {\n  if (res.wifiList.length) {\n    wx.setWifiList({\n      wifiList: [{\n        SSID: res.wifiList[0].SSID,\n        BSSID: res.wifiList[0].BSSID,\n        password: '123456'\n      }]\n    })\n  } else {\n    wx.setWifiList({\n      wifiList: []\n    })\n  }\n})\nwx.getWifiList()\n```\n*\n* 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.showActionSheet": {
        "prefix": "wx.showActionSheet",
        "body": [
            "wx.showActionSheet({",
            "  itemList: [$1],",
            "})"
        ],
        "description": "/** [wx.showActionSheet(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showActionSheet.html)\n*\n* 显示操作菜单\n*\n* **示例代码**\n*\n*\n* ```js\nwx.showActionSheet({\n  itemList: ['A', 'B', 'C'],\n  success (res) {\n    console.log(res.tapIndex)\n  },\n  fail (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* **注意**\n*\n*\n* - Android 6.7.2 以下版本，点击取消或蒙层时，回调 fail, errMsg 为 \"fail cancel\"；\n* - Android 6.7.2 及以上版本 和 iOS 点击蒙层不会关闭模态弹窗，所以尽量避免使用「取消」分支中实现业务逻辑 */",
        "detail": "function",
        "kind": 9
    },
    "wx.showLoading": {
        "prefix": "wx.showLoading",
        "body": [
            "wx.showLoading({",
            "  title: '${1:title}',",
            "})"
        ],
        "description": "/** [wx.showLoading(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showLoading.html)\n*\n* 显示 loading 提示框。需主动调用 wx.hideLoading 才能关闭提示框\n*\n* **示例代码**\n*\n*\n* ```js\nwx.showLoading({\n  title: '加载中',\n})\n\nsetTimeout(function () {\n  wx.hideLoading()\n}, 2000)\n```\n*\n* **注意**\n*\n*\n* - [wx.showLoading](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showLoading.html) 和 [wx.showToast](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showToast.html) 同时只能显示一个\n* - [wx.showLoading](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showLoading.html) 应与 [wx.hideLoading](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.hideLoading.html) 配对使用\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.showModal": {
        "prefix": "wx.showModal",
        "body": [
            "wx.showModal({",
            "  cancelColor: '${1:cancelColor}',",
            "})"
        ],
        "description": "/** [wx.showModal(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showModal.html)\n*\n* 显示模态对话框\n*\n* **示例代码**\n*\n*\n* ```js\nwx.showModal({\n  title: '提示',\n  content: '这是一个模态弹窗',\n  success (res) {\n    if (res.confirm) {\n      console.log('用户点击确定')\n    } else if (res.cancel) {\n      console.log('用户点击取消')\n    }\n  }\n})\n```\n*\n* **注意**\n*\n*\n* - Android 6.7.2 以下版本，点击取消或蒙层时，回调 fail, errMsg 为 \"fail cancel\"；\n* - Android 6.7.2 及以上版本 和 iOS 点击蒙层不会关闭模态弹窗，所以尽量避免使用「取消」分支中实现业务逻辑 */",
        "detail": "function",
        "kind": 9
    },
    "wx.showNavigationBarLoading": {
        "prefix": "wx.showNavigationBarLoading",
        "body": [
            "wx.showNavigationBarLoading({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.showNavigationBarLoading(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/navigation-bar/wx.showNavigationBarLoading.html)\n         *\n         * 在当前页面显示导航条加载动画 */",
        "detail": "function",
        "kind": 9
    },
    "wx.showShareMenu": {
        "prefix": "wx.showShareMenu",
        "body": [
            "wx.showShareMenu({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.showShareMenu(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/share/wx.showShareMenu.html)\n*\n* 显示当前页面的转发按钮\n*\n* **示例代码**\n*\n*\n* ```js\nwx.showShareMenu({\n  withShareTicket: true\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.showTabBar": {
        "prefix": "wx.showTabBar",
        "body": [
            "wx.showTabBar({",
            "  animation: ${1:true},",
            "})"
        ],
        "description": "/** [wx.showTabBar(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.showTabBar.html)\n         *\n         * 显示 tabBar\n         *\n         * 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.showTabBarRedDot": {
        "prefix": "wx.showTabBarRedDot",
        "body": [
            "wx.showTabBarRedDot({",
            "  index: ${1:0},",
            "})"
        ],
        "description": "/** [wx.showTabBarRedDot(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/tab-bar/wx.showTabBarRedDot.html)\n         *\n         * 显示 tabBar 某一项的右上角的红点\n         *\n         * 最低基础库： `1.9.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.showToast": {
        "prefix": "wx.showToast",
        "body": [
            "wx.showToast({",
            "  title: '${1:title}',",
            "})"
        ],
        "description": "/** [wx.showToast(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showToast.html)\n*\n* 显示消息提示框\n*\n* **示例代码**\n*\n*\n* ```js\nwx.showToast({\n  title: '成功',\n  icon: 'success',\n  duration: 2000\n})\n```\n*\n* **注意**\n*\n*\n* - [wx.showLoading](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showLoading.html) 和 [wx.showToast](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showToast.html) 同时只能显示一个\n* - [wx.showToast](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showToast.html) 应与 [wx.hideToast](https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.hideToast.html) 配对使用 */",
        "detail": "function",
        "kind": 9
    },
    "wx.startAccelerometer": {
        "prefix": "wx.startAccelerometer",
        "body": [
            "wx.startAccelerometer({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.startAccelerometer(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/accelerometer/wx.startAccelerometer.html)\n*\n* 开始监听加速度数据。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startAccelerometer({\n  interval: 'game'\n})\n```\n*\n* **注意**\n*\n*\n* - 根据机型性能、当前 CPU 与内存的占用情况，`interval` 的设置与实际 `wx.onAccelerometerChange()` 回调函数的执行频率会有一些出入。\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.startBeaconDiscovery": {
        "prefix": "wx.startBeaconDiscovery",
        "body": [
            "wx.startBeaconDiscovery({",
            "  uuids: [$1],",
            "})"
        ],
        "description": "/** [wx.startBeaconDiscovery(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/ibeacon/wx.startBeaconDiscovery.html)\n*\n* 开始搜索附近的 iBeacon 设备\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startBeaconDiscovery({\n  success(res) { }\n})\n```\n*\n* 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.startBluetoothDevicesDiscovery": {
        "prefix": "wx.startBluetoothDevicesDiscovery",
        "body": [
            "wx.startBluetoothDevicesDiscovery({",
            "  allowDuplicatesKey: ${1:true},",
            "})"
        ],
        "description": "/** [wx.startBluetoothDevicesDiscovery(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.startBluetoothDevicesDiscovery.html)\n*\n* 开始搜寻附近的蓝牙外围设备。**此操作比较耗费系统资源，请在搜索并连接到设备后调用 [wx.stopBluetoothDevicesDiscovery](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.stopBluetoothDevicesDiscovery.html) 方法停止搜索。**\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n*\n* ```js\n// 以微信硬件平台的蓝牙智能灯为例，主服务的 UUID 是 FEE7。传入这个参数，只搜索主服务 UUID 为 FEE7 的设备\nwx.startBluetoothDevicesDiscovery({\n  services: ['FEE7'],\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.startCompass": {
        "prefix": "wx.startCompass",
        "body": [
            "wx.startCompass({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.startCompass(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/compass/wx.startCompass.html)\n*\n* 开始监听罗盘数据\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startCompass()\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.startDeviceMotionListening": {
        "prefix": "wx.startDeviceMotionListening",
        "body": [
            "wx.startDeviceMotionListening({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.startDeviceMotionListening(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/motion/wx.startDeviceMotionListening.html)\n         *\n         * 开始监听设备方向的变化。\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.startGyroscope": {
        "prefix": "wx.startGyroscope",
        "body": [
            "wx.startGyroscope({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.startGyroscope(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/gyroscope/wx.startGyroscope.html)\n         *\n         * 开始监听陀螺仪数据。\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.startHCE": {
        "prefix": "wx.startHCE",
        "body": [
            "wx.startHCE({",
            "  aid_list: [$1],",
            "})"
        ],
        "description": "/** [wx.startHCE(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/nfc/wx.startHCE.html)\n*\n* 初始化 NFC 模块。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startHCE({\n  aid_list: ['F222222222'],\n  success (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.startLocalServiceDiscovery": {
        "prefix": "wx.startLocalServiceDiscovery",
        "body": [
            "wx.startLocalServiceDiscovery({",
            "  serviceType: '${1:serviceType}',",
            "})"
        ],
        "description": "/** [wx.startLocalServiceDiscovery(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.startLocalServiceDiscovery.html)\n         *\n         * 开始搜索局域网下的 mDNS 服务。搜索的结果会通过 wx.onLocalService* 事件返回。\n         *\n         * **注意**\n         *\n         *\n         * 1. wx.startLocalServiceDiscovery 是一个消耗性能的行为，开始 30 秒后会自动 stop 并执行 wx.onLocalServiceDiscoveryStop 注册的回调函数。\n         * 2. 在调用 wx.startLocalServiceDiscovery 后，在这次搜索行为停止后才能发起下次 wx.startLocalServiceDiscovery。停止本次搜索行为的操作包括调用 wx.stopLocalServiceDiscovery 和 30 秒后系统自动 stop 本次搜索。\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.startLocationUpdate": {
        "prefix": "wx.startLocationUpdate",
        "body": [
            "wx.startLocationUpdate({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.startLocationUpdate(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.startLocationUpdate.html)\n         *\n         * 开启小程序进入前台时接收位置消息\n         *\n         * **注意**\n         *\n         *\n         * - 获取位置信息需配置[地理位置用途说明](https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#permission)。\n         *\n         * 最低基础库： `2.8.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.startLocationUpdateBackground": {
        "prefix": "wx.startLocationUpdateBackground",
        "body": [
            "wx.startLocationUpdateBackground({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.startLocationUpdateBackground(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.startLocationUpdateBackground.html)\n         *\n         * 开启小程序进入前后台时均接收位置消息，需引导用户开启[授权]((open-ability/authorize#后台定位))。授权以后，小程序在运行中或进入后台均可接受位置消息变化。\n         *\n         * **注意**\n         *\n         *\n         * - 安卓微信7.0.6版本，iOS 7.0.5版本起支持该接口\n         * - 需在app.json中配置requiredBackgroundModes: ['location']后使用\n         * - 获取位置信息需配置[地理位置用途说明](https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#permission)。\n         *\n         * 最低基础库： `2.8.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.startPullDownRefresh": {
        "prefix": "wx.startPullDownRefresh",
        "body": [
            "wx.startPullDownRefresh({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.startPullDownRefresh(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/pull-down-refresh/wx.startPullDownRefresh.html)\n*\n* 开始下拉刷新。调用后触发下拉刷新动画，效果与用户手动下拉刷新一致。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startPullDownRefresh()\n```\n*\n* 最低基础库： `1.5.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.startRecord": {
        "prefix": "wx.startRecord",
        "body": [
            "wx.startRecord({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.startRecord(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/recorder/wx.startRecord.html)\n*\n* 开始录音。当主动调用 [wx.stopRecord](https://developers.weixin.qq.com/miniprogram/dev/api/media/recorder/wx.stopRecord.html)，或者录音超过1分钟时自动结束录音。当用户离开小程序时，此接口无法调用。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startRecord({\n  success (res) {\n    const tempFilePath = res.tempFilePath\n  }\n})\nsetTimeout(function () {\n  wx.stopRecord() // 结束录音\n}, 10000)\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.startSoterAuthentication": {
        "prefix": "wx.startSoterAuthentication",
        "body": [
            "wx.startSoterAuthentication({",
            "  challenge: '${1:challenge}',",
            "  requestAuthModes: [$2],",
            "})"
        ],
        "description": "/** [wx.startSoterAuthentication(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/soter/wx.startSoterAuthentication.html)\n*\n* 开始 SOTER 生物认证。验证流程请参考[说明](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/bio-auth.html)。\n*\n* **resultJSON 说明**\n*\n*\n* 此数据为设备TEE中，将传入的challenge和TEE内其他安全信息组成的数据进行组装而来的JSON，对下述字段的解释如下表。例子如下：\n* | 字段名  | 说明                                                                                      |\n* |---------|-------------------------------------------------------------------------------------------|\n* | raw     | 调用者传入的challenge                                                                     |\n* | fid     | （仅Android支持）本次生物识别认证的生物信息编号（如指纹识别则是指纹信息在本设备内部编号） |\n* | counter | 防重放特征参数                                                                            |\n* | tee_n   | TEE名称（如高通或者trustonic等）                                                          |\n* | tee_v   | TEE版本号                                                                                 |\n* | fp_n    | 指纹以及相关逻辑模块提供商（如FPC等）                                                     |\n* | fp_v    | 指纹以及相关模块版本号                                                                    |\n* | cpu_id  | 机器唯一识别ID                                                                            |\n* | uid     | 概念同Android系统定义uid，即应用程序编号                                                  |\n*\n* ```json\n{\n  \"raw\":\"msg\",\n  \"fid\":\"2\",\n  \"counter\":123,\n  \"tee_n\":\"TEE Name\",\n  \"tee_v\":\"TEE Version\",\n  \"fp_n\":\"Fingerprint Sensor Name\",\n  \"fp_v\":\"Fingerprint Sensor Version\",\n  \"cpu_id\":\"CPU Id\",\n  \"uid\":\"21\"\n}\n```\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/q3tCKkmJ7g2e)\n* ```js\nwx.startSoterAuthentication({\n   requestAuthModes: ['fingerPrint'],\n   challenge: '123456',\n   authContent: '请用指纹解锁',\n   success(res) {\n   }\n})\n```\n*\n* 最低基础库： `1.5.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.startWifi": {
        "prefix": "wx.startWifi",
        "body": [
            "wx.startWifi({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.startWifi(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.startWifi.html)\n*\n* 初始化 Wi-Fi 模块。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/8P7zrkmd7r2n)\n* ```js\nwx.startWifi({\n  success (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.stopAccelerometer": {
        "prefix": "wx.stopAccelerometer",
        "body": [
            "wx.stopAccelerometer({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.stopAccelerometer(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/accelerometer/wx.stopAccelerometer.html)\n*\n* 停止监听加速度数据。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.stopAccelerometer()\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.stopBackgroundAudio": {
        "prefix": "wx.stopBackgroundAudio",
        "body": [
            "wx.stopBackgroundAudio({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.stopBackgroundAudio(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/background-audio/wx.stopBackgroundAudio.html)\n*\n* 停止播放音乐。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.stopBackgroundAudio()\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.stopBeaconDiscovery": {
        "prefix": "wx.stopBeaconDiscovery",
        "body": [
            "wx.stopBeaconDiscovery({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.stopBeaconDiscovery(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/ibeacon/wx.stopBeaconDiscovery.html)\n         *\n         * 停止搜索附近的 iBeacon 设备\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.stopBluetoothDevicesDiscovery": {
        "prefix": "wx.stopBluetoothDevicesDiscovery",
        "body": [
            "wx.stopBluetoothDevicesDiscovery({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.stopBluetoothDevicesDiscovery(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth/wx.stopBluetoothDevicesDiscovery.html)\n*\n* 停止搜寻附近的蓝牙外围设备。若已经找到需要的蓝牙设备并不需要继续搜索时，建议调用该接口停止蓝牙搜索。\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\nwx.stopBluetoothDevicesDiscovery({\n  success (res) {\n    console.log(res)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.stopCompass": {
        "prefix": "wx.stopCompass",
        "body": [
            "wx.stopCompass({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.stopCompass(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/compass/wx.stopCompass.html)\n*\n* 停止监听罗盘数据\n*\n* **示例代码**\n*\n*\n* ```js\nwx.stopCompass()\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.stopDeviceMotionListening": {
        "prefix": "wx.stopDeviceMotionListening",
        "body": [
            "wx.stopDeviceMotionListening({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.stopDeviceMotionListening(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/motion/wx.stopDeviceMotionListening.html)\n         *\n         * 停止监听设备方向的变化。\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.stopGyroscope": {
        "prefix": "wx.stopGyroscope",
        "body": [
            "wx.stopGyroscope({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.stopGyroscope(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/gyroscope/wx.stopGyroscope.html)\n         *\n         * 停止监听陀螺仪数据。\n         *\n         * 最低基础库： `2.3.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.stopHCE": {
        "prefix": "wx.stopHCE",
        "body": [
            "wx.stopHCE({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.stopHCE(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/nfc/wx.stopHCE.html)\n*\n* 关闭 NFC 模块。仅在安卓系统下有效。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.stopHCE({\n  success (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.7.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.stopLocalServiceDiscovery": {
        "prefix": "wx.stopLocalServiceDiscovery",
        "body": [
            "wx.stopLocalServiceDiscovery({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.stopLocalServiceDiscovery(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/network/mdns/wx.stopLocalServiceDiscovery.html)\n         *\n         * 停止搜索 mDNS 服务\n         *\n         * 最低基础库： `2.4.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.stopLocationUpdate": {
        "prefix": "wx.stopLocationUpdate",
        "body": [
            "wx.stopLocationUpdate({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.stopLocationUpdate(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/location/wx.stopLocationUpdate.html)\n         *\n         * 关闭监听实时位置变化，前后台都停止消息接收\n         *\n         * 最低基础库： `2.8.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.stopPullDownRefresh": {
        "prefix": "wx.stopPullDownRefresh",
        "body": [
            "wx.stopPullDownRefresh({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.stopPullDownRefresh(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/ui/pull-down-refresh/wx.stopPullDownRefresh.html)\n*\n* 停止当前页面下拉刷新。\n*\n* **示例代码**\n*\n*\n* ```js\nPage({\n  onPullDownRefresh () {\n    wx.stopPullDownRefresh()\n  }\n})\n```\n*\n* 最低基础库： `1.5.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.stopRecord": {
        "prefix": "wx.stopRecord",
        "body": [
            "wx.stopRecord({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.stopRecord(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/recorder/wx.stopRecord.html)\n*\n* 停止录音。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startRecord({\n  success (res) {\n    const tempFilePath = res.tempFilePath\n  }\n})\nsetTimeout(function () {\n  wx.stopRecord() // 结束录音\n}, 10000)\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.stopVoice": {
        "prefix": "wx.stopVoice",
        "body": [
            "wx.stopVoice({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.stopVoice(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/media/audio/wx.stopVoice.html)\n*\n* 结束播放语音。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.startRecord({\n  success (res) {\n    const tempFilePath = res.tempFilePath\n    wx.playVoice({\n      filePath: tempFilePath,\n    })\n\n    setTimeout(() => { wx.stopVoice() }, 5000)\n  }\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.stopWifi": {
        "prefix": "wx.stopWifi",
        "body": [
            "wx.stopWifi({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.stopWifi(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/wifi/wx.stopWifi.html)\n*\n* 关闭 Wi-Fi 模块。\n*\n* **示例代码**\n*\n*\n* ```js\nwx.stopWifi({\n  success (res) {\n    console.log(res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.6.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.switchTab": {
        "prefix": "wx.switchTab",
        "body": [
            "wx.switchTab({",
            "  url: '${1:url}',",
            "})"
        ],
        "description": "/** [wx.switchTab(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.switchTab.html)\n*\n* 跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面\n*\n* **示例代码**\n*\n*\n* ```json\n{\n  \"tabBar\": {\n    \"list\": [{\n      \"pagePath\": \"index\",\n      \"text\": \"首页\"\n    },{\n      \"pagePath\": \"other\",\n      \"text\": \"其他\"\n    }]\n  }\n}\n```\n*\n* ```js\nwx.switchTab({\n  url: '/index'\n})\n``` */",
        "detail": "function",
        "kind": 9
    },
    "wx.updateShareMenu": {
        "prefix": "wx.updateShareMenu",
        "body": [
            "wx.updateShareMenu({",
            "  activityId: '${1:activityId}',",
            "})"
        ],
        "description": "/** [wx.updateShareMenu(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/share/wx.updateShareMenu.html)\n*\n* 更新转发属性\n*\n* **示例代码**\n*\n*\n* ```js\nwx.updateShareMenu({\n  withShareTicket: true,\n  success () { }\n})\n```\n*\n* 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.vibrateLong": {
        "prefix": "wx.vibrateLong",
        "body": [
            "wx.vibrateLong({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.vibrateLong(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/vibrate/wx.vibrateLong.html)\n         *\n         * 使手机发生较长时间的振动（400 ms)\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.vibrateShort": {
        "prefix": "wx.vibrateShort",
        "body": [
            "wx.vibrateShort({",
            "  complete: (res) => {$1},",
            "})"
        ],
        "description": "/** [wx.vibrateShort(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/vibrate/wx.vibrateShort.html)\n         *\n         * 使手机发生较短时间的振动（15 ms）。仅在 iPhone `7 / 7 Plus` 以上及 Android 机型生效\n         *\n         * 最低基础库： `1.2.0` */",
        "detail": "function",
        "kind": 9
    },
    "wx.writeBLECharacteristicValue": {
        "prefix": "wx.writeBLECharacteristicValue",
        "body": [
            "wx.writeBLECharacteristicValue({",
            "  characteristicId: '${1:characteristicId}',",
            "  deviceId: '${2:deviceId}',",
            "  serviceId: '${3:serviceId}',",
            "  value: ${4:value},",
            "})"
        ],
        "description": "/** [wx.writeBLECharacteristicValue(Object object)](https://developers.weixin.qq.com/miniprogram/dev/api/device/bluetooth-ble/wx.writeBLECharacteristicValue.html)\n*\n* 向低功耗蓝牙设备特征值中写入二进制数据。注意：必须设备的特征值支持 write 才可以成功调用。\n*\n* **注意**\n*\n*\n* - 并行调用多次会存在写失败的可能性。\n* - 小程序不会对写入数据包大小做限制，但系统与蓝牙设备会限制蓝牙4.0单次传输的数据大小，超过最大字节数后会发生写入错误，建议每次写入不超过20字节。\n* - 若单次写入数据过长，iOS 上存在系统不会有任何回调的情况（包括错误回调）。\n* - 安卓平台上，在调用 `notifyBLECharacteristicValueChange` 成功后立即调用 `writeBLECharacteristicValue` 接口，在部分机型上会发生 10008 系统错误\n*\n* **示例代码**\n*\n*\n* [在微信开发者工具中查看示例](https://developers.weixin.qq.com/s/pQU51zmz7a3K)\n* ```js\n// 向蓝牙设备发送一个0x00的16进制数据\nlet buffer = new ArrayBuffer(1)\nlet dataView = new DataView(buffer)\ndataView.setUint8(0, 0)\n\nwx.writeBLECharacteristicValue({\n  // 这里的 deviceId 需要在 getBluetoothDevices 或 onBluetoothDeviceFound 接口中获取\n  deviceId,\n  // 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取\n  serviceId,\n  // 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取\n  characteristicId,\n  // 这里的value是ArrayBuffer类型\n  value: buffer,\n  success (res) {\n    console.log('writeBLECharacteristicValue success', res.errMsg)\n  }\n})\n```\n*\n* 最低基础库： `1.1.0` */",
        "detail": "function",
        "kind": 9
    }
}
